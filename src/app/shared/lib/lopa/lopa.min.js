var Lopa=function(t){var n={};function e(r){if(n[r])return n[r].exports;var i=n[r]={i:r,l:!1,exports:{}};return t[r].call(i.exports,i,i.exports,e),i.l=!0,i.exports}return e.m=t,e.c=n,e.d=function(t,n,r){e.o(t,n)||Object.defineProperty(t,n,{enumerable:!0,get:r})},e.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},e.t=function(t,n){if(1&n&&(t=e(t)),8&n)return t;if(4&n&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(e.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&n&&"string"!=typeof t)for(var i in t)e.d(r,i,function(n){return t[n]}.bind(null,i));return r},e.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(n,"a",n),n},e.o=function(t,n){return Object.prototype.hasOwnProperty.call(t,n)},e.p="",e(e.s=1)}([function(t,n,e){"use strict";e.r(n);var r=function(t,n){return t<n?-1:t>n?1:t>=n?0:NaN},i=function(t){return 1===t.length&&(t=function(t){return function(n,e){return r(t(n),e)}}(t)),{left:function(n,e,r,i){for(null==r&&(r=0),null==i&&(i=n.length);r<i;){var o=r+i>>>1;t(n[o],e)<0?r=o+1:i=o}return r},right:function(n,e,r,i){for(null==r&&(r=0),null==i&&(i=n.length);r<i;){var o=r+i>>>1;t(n[o],e)>0?i=o:r=o+1}return r}}};var o=i(r),u=o.right,a=o.left,c=u,f=function(t,n){null==n&&(n=s);for(var e=0,r=t.length-1,i=t[0],o=new Array(r<0?0:r);e<r;)o[e]=n(i,i=t[++e]);return o};function s(t,n){return[t,n]}var l=function(t,n,e){var r,i,o,u,a=t.length,c=n.length,f=new Array(a*c);for(null==e&&(e=s),r=o=0;r<a;++r)for(u=t[r],i=0;i<c;++i,++o)f[o]=e(u,n[i]);return f},h=function(t,n){return n<t?-1:n>t?1:n>=t?0:NaN},d=function(t){return null===t?NaN:+t},p=function(t,n){var e,r,i=t.length,o=0,u=-1,a=0,c=0;if(null==n)for(;++u<i;)isNaN(e=d(t[u]))||(c+=(r=e-a)*(e-(a+=r/++o)));else for(;++u<i;)isNaN(e=d(n(t[u],u,t)))||(c+=(r=e-a)*(e-(a+=r/++o)));if(o>1)return c/(o-1)},v=function(t,n){var e=p(t,n);return e?Math.sqrt(e):e},g=function(t,n){var e,r,i,o=t.length,u=-1;if(null==n){for(;++u<o;)if(null!=(e=t[u])&&e>=e)for(r=i=e;++u<o;)null!=(e=t[u])&&(r>e&&(r=e),i<e&&(i=e))}else for(;++u<o;)if(null!=(e=n(t[u],u,t))&&e>=e)for(r=i=e;++u<o;)null!=(e=n(t[u],u,t))&&(r>e&&(r=e),i<e&&(i=e));return[r,i]},y=Array.prototype,b=y.slice,_=y.map,m=function(t){return function(){return t}},x=function(t){return t},w=function(t,n,e){t=+t,n=+n,e=(i=arguments.length)<2?(n=t,t=0,1):i<3?1:+e;for(var r=-1,i=0|Math.max(0,Math.ceil((n-t)/e)),o=new Array(i);++r<i;)o[r]=t+r*e;return o},M=Math.sqrt(50),S=Math.sqrt(10),A=Math.sqrt(2),C=function(t,n,e){var r,i,o,u,a=-1;if(e=+e,(t=+t)===(n=+n)&&e>0)return[t];if((r=n<t)&&(i=t,t=n,n=i),0===(u=N(t,n,e))||!isFinite(u))return[];if(u>0)for(t=Math.ceil(t/u),n=Math.floor(n/u),o=new Array(i=Math.ceil(n-t+1));++a<i;)o[a]=(t+a)*u;else for(t=Math.floor(t*u),n=Math.ceil(n*u),o=new Array(i=Math.ceil(t-n+1));++a<i;)o[a]=(t-a)/u;return r&&o.reverse(),o};function N(t,n,e){var r=(n-t)/Math.max(0,e),i=Math.floor(Math.log(r)/Math.LN10),o=r/Math.pow(10,i);return i>=0?(o>=M?10:o>=S?5:o>=A?2:1)*Math.pow(10,i):-Math.pow(10,-i)/(o>=M?10:o>=S?5:o>=A?2:1)}function k(t,n,e){var r=Math.abs(n-t)/Math.max(0,e),i=Math.pow(10,Math.floor(Math.log(r)/Math.LN10)),o=r/i;return o>=M?i*=10:o>=S?i*=5:o>=A&&(i*=2),n<t?-i:i}var T=function(t){return Math.ceil(Math.log(t.length)/Math.LN2)+1},E=function(){var t=x,n=g,e=T;function r(r){var i,o,u=r.length,a=new Array(u);for(i=0;i<u;++i)a[i]=t(r[i],i,r);var f=n(a),s=f[0],l=f[1],h=e(a,s,l);Array.isArray(h)||(h=k(s,l,h),h=w(Math.ceil(s/h)*h,l,h));for(var d=h.length;h[0]<=s;)h.shift(),--d;for(;h[d-1]>l;)h.pop(),--d;var p,v=new Array(d+1);for(i=0;i<=d;++i)(p=v[i]=[]).x0=i>0?h[i-1]:s,p.x1=i<d?h[i]:l;for(i=0;i<u;++i)s<=(o=a[i])&&o<=l&&v[c(h,o,0,d)].push(r[i]);return v}return r.value=function(n){return arguments.length?(t="function"==typeof n?n:m(n),r):t},r.domain=function(t){return arguments.length?(n="function"==typeof t?t:m([t[0],t[1]]),r):n},r.thresholds=function(t){return arguments.length?(e="function"==typeof t?t:Array.isArray(t)?m(b.call(t)):m(t),r):e},r},P=function(t,n,e){if(null==e&&(e=d),r=t.length){if((n=+n)<=0||r<2)return+e(t[0],0,t);if(n>=1)return+e(t[r-1],r-1,t);var r,i=(r-1)*n,o=Math.floor(i),u=+e(t[o],o,t);return u+(+e(t[o+1],o+1,t)-u)*(i-o)}},z=function(t,n,e){return t=_.call(t,d).sort(r),Math.ceil((e-n)/(2*(P(t,.75)-P(t,.25))*Math.pow(t.length,-1/3)))},L=function(t,n,e){return Math.ceil((e-n)/(3.5*v(t)*Math.pow(t.length,-1/3)))},R=function(t,n){var e,r,i=t.length,o=-1;if(null==n){for(;++o<i;)if(null!=(e=t[o])&&e>=e)for(r=e;++o<i;)null!=(e=t[o])&&e>r&&(r=e)}else for(;++o<i;)if(null!=(e=n(t[o],o,t))&&e>=e)for(r=e;++o<i;)null!=(e=n(t[o],o,t))&&e>r&&(r=e);return r},D=function(t,n){var e,r=t.length,i=r,o=-1,u=0;if(null==n)for(;++o<r;)isNaN(e=d(t[o]))?--i:u+=e;else for(;++o<r;)isNaN(e=d(n(t[o],o,t)))?--i:u+=e;if(i)return u/i},O=function(t,n){var e,i=t.length,o=-1,u=[];if(null==n)for(;++o<i;)isNaN(e=d(t[o]))||u.push(e);else for(;++o<i;)isNaN(e=d(n(t[o],o,t)))||u.push(e);return P(u.sort(r),.5)},q=function(t){for(var n,e,r,i=t.length,o=-1,u=0;++o<i;)u+=t[o].length;for(e=new Array(u);--i>=0;)for(n=(r=t[i]).length;--n>=0;)e[--u]=r[n];return e},U=function(t,n){var e,r,i=t.length,o=-1;if(null==n){for(;++o<i;)if(null!=(e=t[o])&&e>=e)for(r=e;++o<i;)null!=(e=t[o])&&r>e&&(r=e)}else for(;++o<i;)if(null!=(e=n(t[o],o,t))&&e>=e)for(r=e;++o<i;)null!=(e=n(t[o],o,t))&&r>e&&(r=e);return r},B=function(t,n){for(var e=n.length,r=new Array(e);e--;)r[e]=t[n[e]];return r},Y=function(t,n){if(e=t.length){var e,i,o=0,u=0,a=t[u];for(null==n&&(n=r);++o<e;)(n(i=t[o],a)<0||0!==n(a,a))&&(a=i,u=o);return 0===n(a,a)?u:void 0}},H=function(t,n,e){for(var r,i,o=(null==e?t.length:e)-(n=null==n?0:+n);o;)i=Math.random()*o--|0,r=t[o+n],t[o+n]=t[i+n],t[i+n]=r;return t},I=function(t,n){var e,r=t.length,i=-1,o=0;if(null==n)for(;++i<r;)(e=+t[i])&&(o+=e);else for(;++i<r;)(e=+n(t[i],i,t))&&(o+=e);return o},F=function(t){if(!(i=t.length))return[];for(var n=-1,e=U(t,j),r=new Array(e);++n<e;)for(var i,o=-1,u=r[n]=new Array(i);++o<i;)u[o]=t[o][n];return r};function j(t){return t.length}var G=function(){return F(arguments)},X=Array.prototype.slice,V=function(t){return t},W=1,$=2,Z=3,Q=4,J=1e-6;function K(t){return"translate("+(t+.5)+",0)"}function tt(t){return"translate(0,"+(t+.5)+")"}function nt(){return!this.__axis}function et(t,n){var e=[],r=null,i=null,o=6,u=6,a=3,c=t===W||t===Q?-1:1,f=t===Q||t===$?"x":"y",s=t===W||t===Z?K:tt;function l(l){var h=null==r?n.ticks?n.ticks.apply(n,e):n.domain():r,d=null==i?n.tickFormat?n.tickFormat.apply(n,e):V:i,p=Math.max(o,0)+a,v=n.range(),g=+v[0]+.5,y=+v[v.length-1]+.5,b=(n.bandwidth?function(t){var n=Math.max(0,t.bandwidth()-1)/2;return t.round()&&(n=Math.round(n)),function(e){return+t(e)+n}}:function(t){return function(n){return+t(n)}})(n.copy()),_=l.selection?l.selection():l,m=_.selectAll(".domain").data([null]),x=_.selectAll(".tick").data(h,n).order(),w=x.exit(),M=x.enter().append("g").attr("class","tick"),S=x.select("line"),A=x.select("text");m=m.merge(m.enter().insert("path",".tick").attr("class","domain").attr("stroke","currentColor")),x=x.merge(M),S=S.merge(M.append("line").attr("stroke","currentColor").attr(f+"2",c*o)),A=A.merge(M.append("text").attr("fill","currentColor").attr(f,c*p).attr("dy",t===W?"0em":t===Z?"0.71em":"0.32em")),l!==_&&(m=m.transition(l),x=x.transition(l),S=S.transition(l),A=A.transition(l),w=w.transition(l).attr("opacity",J).attr("transform",function(t){return isFinite(t=b(t))?s(t):this.getAttribute("transform")}),M.attr("opacity",J).attr("transform",function(t){var n=this.parentNode.__axis;return s(n&&isFinite(n=n(t))?n:b(t))})),w.remove(),m.attr("d",t===Q||t==$?u?"M"+c*u+","+g+"H0.5V"+y+"H"+c*u:"M0.5,"+g+"V"+y:u?"M"+g+","+c*u+"V0.5H"+y+"V"+c*u:"M"+g+",0.5H"+y),x.attr("opacity",1).attr("transform",function(t){return s(b(t))}),S.attr(f+"2",c*o),A.attr(f,c*p).text(d),_.filter(nt).attr("fill","none").attr("font-size",10).attr("font-family","sans-serif").attr("text-anchor",t===$?"start":t===Q?"end":"middle"),_.each(function(){this.__axis=b})}return l.scale=function(t){return arguments.length?(n=t,l):n},l.ticks=function(){return e=X.call(arguments),l},l.tickArguments=function(t){return arguments.length?(e=null==t?[]:X.call(t),l):e.slice()},l.tickValues=function(t){return arguments.length?(r=null==t?null:X.call(t),l):r&&r.slice()},l.tickFormat=function(t){return arguments.length?(i=t,l):i},l.tickSize=function(t){return arguments.length?(o=u=+t,l):o},l.tickSizeInner=function(t){return arguments.length?(o=+t,l):o},l.tickSizeOuter=function(t){return arguments.length?(u=+t,l):u},l.tickPadding=function(t){return arguments.length?(a=+t,l):a},l}function rt(t){return et(W,t)}function it(t){return et($,t)}function ot(t){return et(Z,t)}function ut(t){return et(Q,t)}var at={value:function(){}};function ct(){for(var t,n=0,e=arguments.length,r={};n<e;++n){if(!(t=arguments[n]+"")||t in r)throw new Error("illegal type: "+t);r[t]=[]}return new ft(r)}function ft(t){this._=t}function st(t,n){for(var e,r=0,i=t.length;r<i;++r)if((e=t[r]).name===n)return e.value}function lt(t,n,e){for(var r=0,i=t.length;r<i;++r)if(t[r].name===n){t[r]=at,t=t.slice(0,r).concat(t.slice(r+1));break}return null!=e&&t.push({name:n,value:e}),t}ft.prototype=ct.prototype={constructor:ft,on:function(t,n){var e,r=this._,i=function(t,n){return t.trim().split(/^|\s+/).map(function(t){var e="",r=t.indexOf(".");if(r>=0&&(e=t.slice(r+1),t=t.slice(0,r)),t&&!n.hasOwnProperty(t))throw new Error("unknown type: "+t);return{type:t,name:e}})}(t+"",r),o=-1,u=i.length;if(!(arguments.length<2)){if(null!=n&&"function"!=typeof n)throw new Error("invalid callback: "+n);for(;++o<u;)if(e=(t=i[o]).type)r[e]=lt(r[e],t.name,n);else if(null==n)for(e in r)r[e]=lt(r[e],t.name,null);return this}for(;++o<u;)if((e=(t=i[o]).type)&&(e=st(r[e],t.name)))return e},copy:function(){var t={},n=this._;for(var e in n)t[e]=n[e].slice();return new ft(t)},call:function(t,n){if((e=arguments.length-2)>0)for(var e,r,i=new Array(e),o=0;o<e;++o)i[o]=arguments[o+2];if(!this._.hasOwnProperty(t))throw new Error("unknown type: "+t);for(o=0,e=(r=this._[t]).length;o<e;++o)r[o].value.apply(n,i)},apply:function(t,n,e){if(!this._.hasOwnProperty(t))throw new Error("unknown type: "+t);for(var r=this._[t],i=0,o=r.length;i<o;++i)r[i].value.apply(n,e)}};var ht=ct,dt="http://www.w3.org/1999/xhtml",pt={svg:"http://www.w3.org/2000/svg",xhtml:dt,xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/"},vt=function(t){var n=t+="",e=n.indexOf(":");return e>=0&&"xmlns"!==(n=t.slice(0,e))&&(t=t.slice(e+1)),pt.hasOwnProperty(n)?{space:pt[n],local:t}:t};var gt=function(t){var n=vt(t);return(n.local?function(t){return function(){return this.ownerDocument.createElementNS(t.space,t.local)}}:function(t){return function(){var n=this.ownerDocument,e=this.namespaceURI;return e===dt&&n.documentElement.namespaceURI===dt?n.createElement(t):n.createElementNS(e,t)}})(n)};function yt(){}var bt=function(t){return null==t?yt:function(){return this.querySelector(t)}};function _t(){return[]}var mt=function(t){return null==t?_t:function(){return this.querySelectorAll(t)}},xt=function(t){return function(){return this.matches(t)}};if("undefined"!=typeof document){var wt=document.documentElement;if(!wt.matches){var Mt=wt.webkitMatchesSelector||wt.msMatchesSelector||wt.mozMatchesSelector||wt.oMatchesSelector;xt=function(t){return function(){return Mt.call(this,t)}}}}var St=xt,At=function(t){return new Array(t.length)};function Ct(t,n){this.ownerDocument=t.ownerDocument,this.namespaceURI=t.namespaceURI,this._next=null,this._parent=t,this.__data__=n}Ct.prototype={constructor:Ct,appendChild:function(t){return this._parent.insertBefore(t,this._next)},insertBefore:function(t,n){return this._parent.insertBefore(t,n)},querySelector:function(t){return this._parent.querySelector(t)},querySelectorAll:function(t){return this._parent.querySelectorAll(t)}};var Nt="$";function kt(t,n,e,r,i,o){for(var u,a=0,c=n.length,f=o.length;a<f;++a)(u=n[a])?(u.__data__=o[a],r[a]=u):e[a]=new Ct(t,o[a]);for(;a<c;++a)(u=n[a])&&(i[a]=u)}function Tt(t,n,e,r,i,o,u){var a,c,f,s={},l=n.length,h=o.length,d=new Array(l);for(a=0;a<l;++a)(c=n[a])&&(d[a]=f=Nt+u.call(c,c.__data__,a,n),f in s?i[a]=c:s[f]=c);for(a=0;a<h;++a)(c=s[f=Nt+u.call(t,o[a],a,o)])?(r[a]=c,c.__data__=o[a],s[f]=null):e[a]=new Ct(t,o[a]);for(a=0;a<l;++a)(c=n[a])&&s[d[a]]===c&&(i[a]=c)}function Et(t,n){return t<n?-1:t>n?1:t>=n?0:NaN}var Pt=function(t){return t.ownerDocument&&t.ownerDocument.defaultView||t.document&&t||t.defaultView};function zt(t,n){return t.style.getPropertyValue(n)||Pt(t).getComputedStyle(t,null).getPropertyValue(n)}function Lt(t){return t.trim().split(/^|\s+/)}function Rt(t){return t.classList||new Dt(t)}function Dt(t){this._node=t,this._names=Lt(t.getAttribute("class")||"")}function Ot(t,n){for(var e=Rt(t),r=-1,i=n.length;++r<i;)e.add(n[r])}function qt(t,n){for(var e=Rt(t),r=-1,i=n.length;++r<i;)e.remove(n[r])}Dt.prototype={add:function(t){this._names.indexOf(t)<0&&(this._names.push(t),this._node.setAttribute("class",this._names.join(" ")))},remove:function(t){var n=this._names.indexOf(t);n>=0&&(this._names.splice(n,1),this._node.setAttribute("class",this._names.join(" ")))},contains:function(t){return this._names.indexOf(t)>=0}};function Ut(){this.textContent=""}function Bt(){this.innerHTML=""}function Yt(){this.nextSibling&&this.parentNode.appendChild(this)}function Ht(){this.previousSibling&&this.parentNode.insertBefore(this,this.parentNode.firstChild)}function It(){return null}function Ft(){var t=this.parentNode;t&&t.removeChild(this)}function jt(){return this.parentNode.insertBefore(this.cloneNode(!1),this.nextSibling)}function Gt(){return this.parentNode.insertBefore(this.cloneNode(!0),this.nextSibling)}var Xt={},Vt=null;"undefined"!=typeof document&&("onmouseenter"in document.documentElement||(Xt={mouseenter:"mouseover",mouseleave:"mouseout"}));function Wt(t,n,e){return t=$t(t,n,e),function(n){var e=n.relatedTarget;e&&(e===this||8&e.compareDocumentPosition(this))||t.call(this,n)}}function $t(t,n,e){return function(r){var i=Vt;Vt=r;try{t.call(this,this.__data__,n,e)}finally{Vt=i}}}function Zt(t){return function(){var n=this.__on;if(n){for(var e,r=0,i=-1,o=n.length;r<o;++r)e=n[r],t.type&&e.type!==t.type||e.name!==t.name?n[++i]=e:this.removeEventListener(e.type,e.listener,e.capture);++i?n.length=i:delete this.__on}}}function Qt(t,n,e){var r=Xt.hasOwnProperty(t.type)?Wt:$t;return function(i,o,u){var a,c=this.__on,f=r(n,o,u);if(c)for(var s=0,l=c.length;s<l;++s)if((a=c[s]).type===t.type&&a.name===t.name)return this.removeEventListener(a.type,a.listener,a.capture),this.addEventListener(a.type,a.listener=f,a.capture=e),void(a.value=n);this.addEventListener(t.type,f,e),a={type:t.type,name:t.name,value:n,listener:f,capture:e},c?c.push(a):this.__on=[a]}}function Jt(t,n,e,r){var i=Vt;t.sourceEvent=Vt,Vt=t;try{return n.apply(e,r)}finally{Vt=i}}function Kt(t,n,e){var r=Pt(t),i=r.CustomEvent;"function"==typeof i?i=new i(n,e):(i=r.document.createEvent("Event"),e?(i.initEvent(n,e.bubbles,e.cancelable),i.detail=e.detail):i.initEvent(n,!1,!1)),t.dispatchEvent(i)}var tn=[null];function nn(t,n){this._groups=t,this._parents=n}function en(){return new nn([[document.documentElement]],tn)}nn.prototype=en.prototype={constructor:nn,select:function(t){"function"!=typeof t&&(t=bt(t));for(var n=this._groups,e=n.length,r=new Array(e),i=0;i<e;++i)for(var o,u,a=n[i],c=a.length,f=r[i]=new Array(c),s=0;s<c;++s)(o=a[s])&&(u=t.call(o,o.__data__,s,a))&&("__data__"in o&&(u.__data__=o.__data__),f[s]=u);return new nn(r,this._parents)},selectAll:function(t){"function"!=typeof t&&(t=mt(t));for(var n=this._groups,e=n.length,r=[],i=[],o=0;o<e;++o)for(var u,a=n[o],c=a.length,f=0;f<c;++f)(u=a[f])&&(r.push(t.call(u,u.__data__,f,a)),i.push(u));return new nn(r,i)},filter:function(t){"function"!=typeof t&&(t=St(t));for(var n=this._groups,e=n.length,r=new Array(e),i=0;i<e;++i)for(var o,u=n[i],a=u.length,c=r[i]=[],f=0;f<a;++f)(o=u[f])&&t.call(o,o.__data__,f,u)&&c.push(o);return new nn(r,this._parents)},data:function(t,n){if(!t)return d=new Array(this.size()),f=-1,this.each(function(t){d[++f]=t}),d;var e=n?Tt:kt,r=this._parents,i=this._groups;"function"!=typeof t&&(t=function(t){return function(){return t}}(t));for(var o=i.length,u=new Array(o),a=new Array(o),c=new Array(o),f=0;f<o;++f){var s=r[f],l=i[f],h=l.length,d=t.call(s,s&&s.__data__,f,r),p=d.length,v=a[f]=new Array(p),g=u[f]=new Array(p);e(s,l,v,g,c[f]=new Array(h),d,n);for(var y,b,_=0,m=0;_<p;++_)if(y=v[_]){for(_>=m&&(m=_+1);!(b=g[m])&&++m<p;);y._next=b||null}}return(u=new nn(u,r))._enter=a,u._exit=c,u},enter:function(){return new nn(this._enter||this._groups.map(At),this._parents)},exit:function(){return new nn(this._exit||this._groups.map(At),this._parents)},merge:function(t){for(var n=this._groups,e=t._groups,r=n.length,i=e.length,o=Math.min(r,i),u=new Array(r),a=0;a<o;++a)for(var c,f=n[a],s=e[a],l=f.length,h=u[a]=new Array(l),d=0;d<l;++d)(c=f[d]||s[d])&&(h[d]=c);for(;a<r;++a)u[a]=n[a];return new nn(u,this._parents)},order:function(){for(var t=this._groups,n=-1,e=t.length;++n<e;)for(var r,i=t[n],o=i.length-1,u=i[o];--o>=0;)(r=i[o])&&(u&&u!==r.nextSibling&&u.parentNode.insertBefore(r,u),u=r);return this},sort:function(t){function n(n,e){return n&&e?t(n.__data__,e.__data__):!n-!e}t||(t=Et);for(var e=this._groups,r=e.length,i=new Array(r),o=0;o<r;++o){for(var u,a=e[o],c=a.length,f=i[o]=new Array(c),s=0;s<c;++s)(u=a[s])&&(f[s]=u);f.sort(n)}return new nn(i,this._parents).order()},call:function(){var t=arguments[0];return arguments[0]=this,t.apply(null,arguments),this},nodes:function(){var t=new Array(this.size()),n=-1;return this.each(function(){t[++n]=this}),t},node:function(){for(var t=this._groups,n=0,e=t.length;n<e;++n)for(var r=t[n],i=0,o=r.length;i<o;++i){var u=r[i];if(u)return u}return null},size:function(){var t=0;return this.each(function(){++t}),t},empty:function(){return!this.node()},each:function(t){for(var n=this._groups,e=0,r=n.length;e<r;++e)for(var i,o=n[e],u=0,a=o.length;u<a;++u)(i=o[u])&&t.call(i,i.__data__,u,o);return this},attr:function(t,n){var e=vt(t);if(arguments.length<2){var r=this.node();return e.local?r.getAttributeNS(e.space,e.local):r.getAttribute(e)}return this.each((null==n?e.local?function(t){return function(){this.removeAttributeNS(t.space,t.local)}}:function(t){return function(){this.removeAttribute(t)}}:"function"==typeof n?e.local?function(t,n){return function(){var e=n.apply(this,arguments);null==e?this.removeAttributeNS(t.space,t.local):this.setAttributeNS(t.space,t.local,e)}}:function(t,n){return function(){var e=n.apply(this,arguments);null==e?this.removeAttribute(t):this.setAttribute(t,e)}}:e.local?function(t,n){return function(){this.setAttributeNS(t.space,t.local,n)}}:function(t,n){return function(){this.setAttribute(t,n)}})(e,n))},style:function(t,n,e){return arguments.length>1?this.each((null==n?function(t){return function(){this.style.removeProperty(t)}}:"function"==typeof n?function(t,n,e){return function(){var r=n.apply(this,arguments);null==r?this.style.removeProperty(t):this.style.setProperty(t,r,e)}}:function(t,n,e){return function(){this.style.setProperty(t,n,e)}})(t,n,null==e?"":e)):zt(this.node(),t)},property:function(t,n){return arguments.length>1?this.each((null==n?function(t){return function(){delete this[t]}}:"function"==typeof n?function(t,n){return function(){var e=n.apply(this,arguments);null==e?delete this[t]:this[t]=e}}:function(t,n){return function(){this[t]=n}})(t,n)):this.node()[t]},classed:function(t,n){var e=Lt(t+"");if(arguments.length<2){for(var r=Rt(this.node()),i=-1,o=e.length;++i<o;)if(!r.contains(e[i]))return!1;return!0}return this.each(("function"==typeof n?function(t,n){return function(){(n.apply(this,arguments)?Ot:qt)(this,t)}}:n?function(t){return function(){Ot(this,t)}}:function(t){return function(){qt(this,t)}})(e,n))},text:function(t){return arguments.length?this.each(null==t?Ut:("function"==typeof t?function(t){return function(){var n=t.apply(this,arguments);this.textContent=null==n?"":n}}:function(t){return function(){this.textContent=t}})(t)):this.node().textContent},html:function(t){return arguments.length?this.each(null==t?Bt:("function"==typeof t?function(t){return function(){var n=t.apply(this,arguments);this.innerHTML=null==n?"":n}}:function(t){return function(){this.innerHTML=t}})(t)):this.node().innerHTML},raise:function(){return this.each(Yt)},lower:function(){return this.each(Ht)},append:function(t){var n="function"==typeof t?t:gt(t);return this.select(function(){return this.appendChild(n.apply(this,arguments))})},insert:function(t,n){var e="function"==typeof t?t:gt(t),r=null==n?It:"function"==typeof n?n:bt(n);return this.select(function(){return this.insertBefore(e.apply(this,arguments),r.apply(this,arguments)||null)})},remove:function(){return this.each(Ft)},clone:function(t){return this.select(t?Gt:jt)},datum:function(t){return arguments.length?this.property("__data__",t):this.node().__data__},on:function(t,n,e){var r,i,o=function(t){return t.trim().split(/^|\s+/).map(function(t){var n="",e=t.indexOf(".");return e>=0&&(n=t.slice(e+1),t=t.slice(0,e)),{type:t,name:n}})}(t+""),u=o.length;if(!(arguments.length<2)){for(a=n?Qt:Zt,null==e&&(e=!1),r=0;r<u;++r)this.each(a(o[r],n,e));return this}var a=this.node().__on;if(a)for(var c,f=0,s=a.length;f<s;++f)for(r=0,c=a[f];r<u;++r)if((i=o[r]).type===c.type&&i.name===c.name)return c.value},dispatch:function(t,n){return this.each(("function"==typeof n?function(t,n){return function(){return Kt(this,t,n.apply(this,arguments))}}:function(t,n){return function(){return Kt(this,t,n)}})(t,n))}};var rn=en,on=function(t){return"string"==typeof t?new nn([[document.querySelector(t)]],[document.documentElement]):new nn([[t]],tn)},un=function(t){return on(gt(t).call(document.documentElement))},an=0;function cn(){return new fn}function fn(){this._="@"+(++an).toString(36)}fn.prototype=cn.prototype={constructor:fn,get:function(t){for(var n=this._;!(n in t);)if(!(t=t.parentNode))return;return t[n]},set:function(t,n){return t[this._]=n},remove:function(t){return this._ in t&&delete t[this._]},toString:function(){return this._}};var sn=function(){for(var t,n=Vt;t=n.sourceEvent;)n=t;return n},ln=function(t,n){var e=t.ownerSVGElement||t;if(e.createSVGPoint){var r=e.createSVGPoint();return r.x=n.clientX,r.y=n.clientY,[(r=r.matrixTransform(t.getScreenCTM().inverse())).x,r.y]}var i=t.getBoundingClientRect();return[n.clientX-i.left-t.clientLeft,n.clientY-i.top-t.clientTop]},hn=function(t){var n=sn();return n.changedTouches&&(n=n.changedTouches[0]),ln(t,n)},dn=function(t){return"string"==typeof t?new nn([document.querySelectorAll(t)],[document.documentElement]):new nn([null==t?[]:t],tn)},pn=function(t,n,e){arguments.length<3&&(e=n,n=sn().changedTouches);for(var r,i=0,o=n?n.length:0;i<o;++i)if((r=n[i]).identifier===e)return ln(t,r);return null},vn=function(t,n){null==n&&(n=sn().touches);for(var e=0,r=n?n.length:0,i=new Array(r);e<r;++e)i[e]=ln(t,n[e]);return i};function gn(){Vt.stopImmediatePropagation()}var yn=function(){Vt.preventDefault(),Vt.stopImmediatePropagation()},bn=function(t){var n=t.document.documentElement,e=on(t).on("dragstart.drag",yn,!0);"onselectstart"in n?e.on("selectstart.drag",yn,!0):(n.__noselect=n.style.MozUserSelect,n.style.MozUserSelect="none")};function _n(t,n){var e=t.document.documentElement,r=on(t).on("dragstart.drag",null);n&&(r.on("click.drag",yn,!0),setTimeout(function(){r.on("click.drag",null)},0)),"onselectstart"in e?r.on("selectstart.drag",null):(e.style.MozUserSelect=e.__noselect,delete e.__noselect)}var mn=function(t){return function(){return t}};function xn(t,n,e,r,i,o,u,a,c,f){this.target=t,this.type=n,this.subject=e,this.identifier=r,this.active=i,this.x=o,this.y=u,this.dx=a,this.dy=c,this._=f}function wn(){return!Vt.button}function Mn(){return this.parentNode}function Sn(t){return null==t?{x:Vt.x,y:Vt.y}:t}function An(){return"ontouchstart"in this}xn.prototype.on=function(){var t=this._.on.apply(this._,arguments);return t===this._?this:t};var Cn=function(){var t,n,e,r,i=wn,o=Mn,u=Sn,a=An,c={},f=ht("start","drag","end"),s=0,l=0;function h(t){t.on("mousedown.drag",d).filter(a).on("touchstart.drag",g).on("touchmove.drag",y).on("touchend.drag touchcancel.drag",b).style("touch-action","none").style("-webkit-tap-highlight-color","rgba(0,0,0,0)")}function d(){if(!r&&i.apply(this,arguments)){var u=_("mouse",o.apply(this,arguments),hn,this,arguments);u&&(on(Vt.view).on("mousemove.drag",p,!0).on("mouseup.drag",v,!0),bn(Vt.view),gn(),e=!1,t=Vt.clientX,n=Vt.clientY,u("start"))}}function p(){if(yn(),!e){var r=Vt.clientX-t,i=Vt.clientY-n;e=r*r+i*i>l}c.mouse("drag")}function v(){on(Vt.view).on("mousemove.drag mouseup.drag",null),_n(Vt.view,e),yn(),c.mouse("end")}function g(){if(i.apply(this,arguments)){var t,n,e=Vt.changedTouches,r=o.apply(this,arguments),u=e.length;for(t=0;t<u;++t)(n=_(e[t].identifier,r,pn,this,arguments))&&(gn(),n("start"))}}function y(){var t,n,e=Vt.changedTouches,r=e.length;for(t=0;t<r;++t)(n=c[e[t].identifier])&&(yn(),n("drag"))}function b(){var t,n,e=Vt.changedTouches,i=e.length;for(r&&clearTimeout(r),r=setTimeout(function(){r=null},500),t=0;t<i;++t)(n=c[e[t].identifier])&&(gn(),n("end"))}function _(t,n,e,r,i){var o,a,l,d=e(n,t),p=f.copy();if(Jt(new xn(h,"beforestart",o,t,s,d[0],d[1],0,0,p),function(){return null!=(Vt.subject=o=u.apply(r,i))&&(a=o.x-d[0]||0,l=o.y-d[1]||0,!0)}))return function u(f){var v,g=d;switch(f){case"start":c[t]=u,v=s++;break;case"end":delete c[t],--s;case"drag":d=e(n,t),v=s}Jt(new xn(h,f,o,t,v,d[0]+a,d[1]+l,d[0]-g[0],d[1]-g[1],p),p.apply,p,[f,r,i])}}return h.filter=function(t){return arguments.length?(i="function"==typeof t?t:mn(!!t),h):i},h.container=function(t){return arguments.length?(o="function"==typeof t?t:mn(t),h):o},h.subject=function(t){return arguments.length?(u="function"==typeof t?t:mn(t),h):u},h.touchable=function(t){return arguments.length?(a="function"==typeof t?t:mn(!!t),h):a},h.on=function(){var t=f.on.apply(f,arguments);return t===f?h:t},h.clickDistance=function(t){return arguments.length?(l=(t=+t)*t,h):Math.sqrt(l)},h},Nn=function(t,n,e){t.prototype=n.prototype=e,e.constructor=t};function kn(t,n){var e=Object.create(t.prototype);for(var r in n)e[r]=n[r];return e}function Tn(){}var En="\\s*([+-]?\\d+)\\s*",Pn="\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)\\s*",zn="\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)%\\s*",Ln=/^#([0-9a-f]{3})$/,Rn=/^#([0-9a-f]{6})$/,Dn=new RegExp("^rgb\\("+[En,En,En]+"\\)$"),On=new RegExp("^rgb\\("+[zn,zn,zn]+"\\)$"),qn=new RegExp("^rgba\\("+[En,En,En,Pn]+"\\)$"),Un=new RegExp("^rgba\\("+[zn,zn,zn,Pn]+"\\)$"),Bn=new RegExp("^hsl\\("+[Pn,zn,zn]+"\\)$"),Yn=new RegExp("^hsla\\("+[Pn,zn,zn,Pn]+"\\)$"),Hn={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};function In(t){var n;return t=(t+"").trim().toLowerCase(),(n=Ln.exec(t))?new Vn((n=parseInt(n[1],16))>>8&15|n>>4&240,n>>4&15|240&n,(15&n)<<4|15&n,1):(n=Rn.exec(t))?Fn(parseInt(n[1],16)):(n=Dn.exec(t))?new Vn(n[1],n[2],n[3],1):(n=On.exec(t))?new Vn(255*n[1]/100,255*n[2]/100,255*n[3]/100,1):(n=qn.exec(t))?jn(n[1],n[2],n[3],n[4]):(n=Un.exec(t))?jn(255*n[1]/100,255*n[2]/100,255*n[3]/100,n[4]):(n=Bn.exec(t))?$n(n[1],n[2]/100,n[3]/100,1):(n=Yn.exec(t))?$n(n[1],n[2]/100,n[3]/100,n[4]):Hn.hasOwnProperty(t)?Fn(Hn[t]):"transparent"===t?new Vn(NaN,NaN,NaN,0):null}function Fn(t){return new Vn(t>>16&255,t>>8&255,255&t,1)}function jn(t,n,e,r){return r<=0&&(t=n=e=NaN),new Vn(t,n,e,r)}function Gn(t){return t instanceof Tn||(t=In(t)),t?new Vn((t=t.rgb()).r,t.g,t.b,t.opacity):new Vn}function Xn(t,n,e,r){return 1===arguments.length?Gn(t):new Vn(t,n,e,null==r?1:r)}function Vn(t,n,e,r){this.r=+t,this.g=+n,this.b=+e,this.opacity=+r}function Wn(t){return((t=Math.max(0,Math.min(255,Math.round(t)||0)))<16?"0":"")+t.toString(16)}function $n(t,n,e,r){return r<=0?t=n=e=NaN:e<=0||e>=1?t=n=NaN:n<=0&&(t=NaN),new Qn(t,n,e,r)}function Zn(t,n,e,r){return 1===arguments.length?function(t){if(t instanceof Qn)return new Qn(t.h,t.s,t.l,t.opacity);if(t instanceof Tn||(t=In(t)),!t)return new Qn;if(t instanceof Qn)return t;var n=(t=t.rgb()).r/255,e=t.g/255,r=t.b/255,i=Math.min(n,e,r),o=Math.max(n,e,r),u=NaN,a=o-i,c=(o+i)/2;return a?(u=n===o?(e-r)/a+6*(e<r):e===o?(r-n)/a+2:(n-e)/a+4,a/=c<.5?o+i:2-o-i,u*=60):a=c>0&&c<1?0:u,new Qn(u,a,c,t.opacity)}(t):new Qn(t,n,e,null==r?1:r)}function Qn(t,n,e,r){this.h=+t,this.s=+n,this.l=+e,this.opacity=+r}function Jn(t,n,e){return 255*(t<60?n+(e-n)*t/60:t<180?e:t<240?n+(e-n)*(240-t)/60:n)}Nn(Tn,In,{displayable:function(){return this.rgb().displayable()},hex:function(){return this.rgb().hex()},toString:function(){return this.rgb()+""}}),Nn(Vn,Xn,kn(Tn,{brighter:function(t){return t=null==t?1/.7:Math.pow(1/.7,t),new Vn(this.r*t,this.g*t,this.b*t,this.opacity)},darker:function(t){return t=null==t?.7:Math.pow(.7,t),new Vn(this.r*t,this.g*t,this.b*t,this.opacity)},rgb:function(){return this},displayable:function(){return 0<=this.r&&this.r<=255&&0<=this.g&&this.g<=255&&0<=this.b&&this.b<=255&&0<=this.opacity&&this.opacity<=1},hex:function(){return"#"+Wn(this.r)+Wn(this.g)+Wn(this.b)},toString:function(){var t=this.opacity;return(1===(t=isNaN(t)?1:Math.max(0,Math.min(1,t)))?"rgb(":"rgba(")+Math.max(0,Math.min(255,Math.round(this.r)||0))+", "+Math.max(0,Math.min(255,Math.round(this.g)||0))+", "+Math.max(0,Math.min(255,Math.round(this.b)||0))+(1===t?")":", "+t+")")}})),Nn(Qn,Zn,kn(Tn,{brighter:function(t){return t=null==t?1/.7:Math.pow(1/.7,t),new Qn(this.h,this.s,this.l*t,this.opacity)},darker:function(t){return t=null==t?.7:Math.pow(.7,t),new Qn(this.h,this.s,this.l*t,this.opacity)},rgb:function(){var t=this.h%360+360*(this.h<0),n=isNaN(t)||isNaN(this.s)?0:this.s,e=this.l,r=e+(e<.5?e:1-e)*n,i=2*e-r;return new Vn(Jn(t>=240?t-240:t+120,i,r),Jn(t,i,r),Jn(t<120?t+240:t-120,i,r),this.opacity)},displayable:function(){return(0<=this.s&&this.s<=1||isNaN(this.s))&&0<=this.l&&this.l<=1&&0<=this.opacity&&this.opacity<=1}}));var Kn=Math.PI/180,te=180/Math.PI,ne=.96422,ee=1,re=.82521,ie=4/29,oe=6/29,ue=3*oe*oe,ae=oe*oe*oe;function ce(t){if(t instanceof le)return new le(t.l,t.a,t.b,t.opacity);if(t instanceof _e){if(isNaN(t.h))return new le(t.l,0,0,t.opacity);var n=t.h*Kn;return new le(t.l,Math.cos(n)*t.c,Math.sin(n)*t.c,t.opacity)}t instanceof Vn||(t=Gn(t));var e,r,i=ve(t.r),o=ve(t.g),u=ve(t.b),a=he((.2225045*i+.7168786*o+.0606169*u)/ee);return i===o&&o===u?e=r=a:(e=he((.4360747*i+.3850649*o+.1430804*u)/ne),r=he((.0139322*i+.0971045*o+.7141733*u)/re)),new le(116*a-16,500*(e-a),200*(a-r),t.opacity)}function fe(t,n){return new le(t,0,0,null==n?1:n)}function se(t,n,e,r){return 1===arguments.length?ce(t):new le(t,n,e,null==r?1:r)}function le(t,n,e,r){this.l=+t,this.a=+n,this.b=+e,this.opacity=+r}function he(t){return t>ae?Math.pow(t,1/3):t/ue+ie}function de(t){return t>oe?t*t*t:ue*(t-ie)}function pe(t){return 255*(t<=.0031308?12.92*t:1.055*Math.pow(t,1/2.4)-.055)}function ve(t){return(t/=255)<=.04045?t/12.92:Math.pow((t+.055)/1.055,2.4)}function ge(t){if(t instanceof _e)return new _e(t.h,t.c,t.l,t.opacity);if(t instanceof le||(t=ce(t)),0===t.a&&0===t.b)return new _e(NaN,0,t.l,t.opacity);var n=Math.atan2(t.b,t.a)*te;return new _e(n<0?n+360:n,Math.sqrt(t.a*t.a+t.b*t.b),t.l,t.opacity)}function ye(t,n,e,r){return 1===arguments.length?ge(t):new _e(e,n,t,null==r?1:r)}function be(t,n,e,r){return 1===arguments.length?ge(t):new _e(t,n,e,null==r?1:r)}function _e(t,n,e,r){this.h=+t,this.c=+n,this.l=+e,this.opacity=+r}Nn(le,se,kn(Tn,{brighter:function(t){return new le(this.l+18*(null==t?1:t),this.a,this.b,this.opacity)},darker:function(t){return new le(this.l-18*(null==t?1:t),this.a,this.b,this.opacity)},rgb:function(){var t=(this.l+16)/116,n=isNaN(this.a)?t:t+this.a/500,e=isNaN(this.b)?t:t-this.b/200;return new Vn(pe(3.1338561*(n=ne*de(n))-1.6168667*(t=ee*de(t))-.4906146*(e=re*de(e))),pe(-.9787684*n+1.9161415*t+.033454*e),pe(.0719453*n-.2289914*t+1.4052427*e),this.opacity)}})),Nn(_e,be,kn(Tn,{brighter:function(t){return new _e(this.h,this.c,this.l+18*(null==t?1:t),this.opacity)},darker:function(t){return new _e(this.h,this.c,this.l-18*(null==t?1:t),this.opacity)},rgb:function(){return ce(this).rgb()}}));var me=-.29227,xe=-.90649,we=1.97294,Me=we*xe,Se=1.78277*we,Ae=1.78277*me- -.14861*xe;function Ce(t,n,e,r){return 1===arguments.length?function(t){if(t instanceof Ne)return new Ne(t.h,t.s,t.l,t.opacity);t instanceof Vn||(t=Gn(t));var n=t.r/255,e=t.g/255,r=t.b/255,i=(Ae*r+Me*n-Se*e)/(Ae+Me-Se),o=r-i,u=(we*(e-i)-me*o)/xe,a=Math.sqrt(u*u+o*o)/(we*i*(1-i)),c=a?Math.atan2(u,o)*te-120:NaN;return new Ne(c<0?c+360:c,a,i,t.opacity)}(t):new Ne(t,n,e,null==r?1:r)}function Ne(t,n,e,r){this.h=+t,this.s=+n,this.l=+e,this.opacity=+r}function ke(t,n,e,r,i){var o=t*t,u=o*t;return((1-3*t+3*o-u)*n+(4-6*o+3*u)*e+(1+3*t+3*o-3*u)*r+u*i)/6}Nn(Ne,Ce,kn(Tn,{brighter:function(t){return t=null==t?1/.7:Math.pow(1/.7,t),new Ne(this.h,this.s,this.l*t,this.opacity)},darker:function(t){return t=null==t?.7:Math.pow(.7,t),new Ne(this.h,this.s,this.l*t,this.opacity)},rgb:function(){var t=isNaN(this.h)?0:(this.h+120)*Kn,n=+this.l,e=isNaN(this.s)?0:this.s*n*(1-n),r=Math.cos(t),i=Math.sin(t);return new Vn(255*(n+e*(-.14861*r+1.78277*i)),255*(n+e*(me*r+xe*i)),255*(n+e*(we*r)),this.opacity)}}));var Te=function(t){var n=t.length-1;return function(e){var r=e<=0?e=0:e>=1?(e=1,n-1):Math.floor(e*n),i=t[r],o=t[r+1],u=r>0?t[r-1]:2*i-o,a=r<n-1?t[r+2]:2*o-i;return ke((e-r/n)*n,u,i,o,a)}},Ee=function(t){var n=t.length;return function(e){var r=Math.floor(((e%=1)<0?++e:e)*n),i=t[(r+n-1)%n],o=t[r%n],u=t[(r+1)%n],a=t[(r+2)%n];return ke((e-r/n)*n,i,o,u,a)}},Pe=function(t){return function(){return t}};function ze(t,n){return function(e){return t+e*n}}function Le(t,n){var e=n-t;return e?ze(t,e>180||e<-180?e-360*Math.round(e/360):e):Pe(isNaN(t)?n:t)}function Re(t){return 1==(t=+t)?De:function(n,e){return e-n?function(t,n,e){return t=Math.pow(t,e),n=Math.pow(n,e)-t,e=1/e,function(r){return Math.pow(t+r*n,e)}}(n,e,t):Pe(isNaN(n)?e:n)}}function De(t,n){var e=n-t;return e?ze(t,e):Pe(isNaN(t)?n:t)}var Oe=function t(n){var e=Re(n);function r(t,n){var r=e((t=Xn(t)).r,(n=Xn(n)).r),i=e(t.g,n.g),o=e(t.b,n.b),u=De(t.opacity,n.opacity);return function(n){return t.r=r(n),t.g=i(n),t.b=o(n),t.opacity=u(n),t+""}}return r.gamma=t,r}(1);function qe(t){return function(n){var e,r,i=n.length,o=new Array(i),u=new Array(i),a=new Array(i);for(e=0;e<i;++e)r=Xn(n[e]),o[e]=r.r||0,u[e]=r.g||0,a[e]=r.b||0;return o=t(o),u=t(u),a=t(a),r.opacity=1,function(t){return r.r=o(t),r.g=u(t),r.b=a(t),r+""}}}var Ue=qe(Te),Be=qe(Ee),Ye=function(t,n){var e,r=n?n.length:0,i=t?Math.min(r,t.length):0,o=new Array(i),u=new Array(r);for(e=0;e<i;++e)o[e]=Qe(t[e],n[e]);for(;e<r;++e)u[e]=n[e];return function(t){for(e=0;e<i;++e)u[e]=o[e](t);return u}},He=function(t,n){var e=new Date;return n-=t=+t,function(r){return e.setTime(t+n*r),e}},Ie=function(t,n){return n-=t=+t,function(e){return t+n*e}},Fe=function(t,n){var e,r={},i={};for(e in null!==t&&"object"==typeof t||(t={}),null!==n&&"object"==typeof n||(n={}),n)e in t?r[e]=Qe(t[e],n[e]):i[e]=n[e];return function(t){for(e in r)i[e]=r[e](t);return i}},je=/[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,Ge=new RegExp(je.source,"g");var Xe,Ve,We,$e,Ze=function(t,n){var e,r,i,o=je.lastIndex=Ge.lastIndex=0,u=-1,a=[],c=[];for(t+="",n+="";(e=je.exec(t))&&(r=Ge.exec(n));)(i=r.index)>o&&(i=n.slice(o,i),a[u]?a[u]+=i:a[++u]=i),(e=e[0])===(r=r[0])?a[u]?a[u]+=r:a[++u]=r:(a[++u]=null,c.push({i:u,x:Ie(e,r)})),o=Ge.lastIndex;return o<n.length&&(i=n.slice(o),a[u]?a[u]+=i:a[++u]=i),a.length<2?c[0]?function(t){return function(n){return t(n)+""}}(c[0].x):function(t){return function(){return t}}(n):(n=c.length,function(t){for(var e,r=0;r<n;++r)a[(e=c[r]).i]=e.x(t);return a.join("")})},Qe=function(t,n){var e,r=typeof n;return null==n||"boolean"===r?Pe(n):("number"===r?Ie:"string"===r?(e=In(n))?(n=e,Oe):Ze:n instanceof In?Oe:n instanceof Date?He:Array.isArray(n)?Ye:"function"!=typeof n.valueOf&&"function"!=typeof n.toString||isNaN(n)?Fe:Ie)(t,n)},Je=function(t){var n=t.length;return function(e){return t[Math.max(0,Math.min(n-1,Math.floor(e*n)))]}},Ke=function(t,n){var e=Le(+t,+n);return function(t){var n=e(t);return n-360*Math.floor(n/360)}},tr=function(t,n){return n-=t=+t,function(e){return Math.round(t+n*e)}},nr=180/Math.PI,er={translateX:0,translateY:0,rotate:0,skewX:0,scaleX:1,scaleY:1},rr=function(t,n,e,r,i,o){var u,a,c;return(u=Math.sqrt(t*t+n*n))&&(t/=u,n/=u),(c=t*e+n*r)&&(e-=t*c,r-=n*c),(a=Math.sqrt(e*e+r*r))&&(e/=a,r/=a,c/=a),t*r<n*e&&(t=-t,n=-n,c=-c,u=-u),{translateX:i,translateY:o,rotate:Math.atan2(n,t)*nr,skewX:Math.atan(c)*nr,scaleX:u,scaleY:a}};function ir(t,n,e,r){function i(t){return t.length?t.pop()+" ":""}return function(o,u){var a=[],c=[];return o=t(o),u=t(u),function(t,r,i,o,u,a){if(t!==i||r!==o){var c=u.push("translate(",null,n,null,e);a.push({i:c-4,x:Ie(t,i)},{i:c-2,x:Ie(r,o)})}else(i||o)&&u.push("translate("+i+n+o+e)}(o.translateX,o.translateY,u.translateX,u.translateY,a,c),function(t,n,e,o){t!==n?(t-n>180?n+=360:n-t>180&&(t+=360),o.push({i:e.push(i(e)+"rotate(",null,r)-2,x:Ie(t,n)})):n&&e.push(i(e)+"rotate("+n+r)}(o.rotate,u.rotate,a,c),function(t,n,e,o){t!==n?o.push({i:e.push(i(e)+"skewX(",null,r)-2,x:Ie(t,n)}):n&&e.push(i(e)+"skewX("+n+r)}(o.skewX,u.skewX,a,c),function(t,n,e,r,o,u){if(t!==e||n!==r){var a=o.push(i(o)+"scale(",null,",",null,")");u.push({i:a-4,x:Ie(t,e)},{i:a-2,x:Ie(n,r)})}else 1===e&&1===r||o.push(i(o)+"scale("+e+","+r+")")}(o.scaleX,o.scaleY,u.scaleX,u.scaleY,a,c),o=u=null,function(t){for(var n,e=-1,r=c.length;++e<r;)a[(n=c[e]).i]=n.x(t);return a.join("")}}}var or=ir(function(t){return"none"===t?er:(Xe||(Xe=document.createElement("DIV"),Ve=document.documentElement,We=document.defaultView),Xe.style.transform=t,t=We.getComputedStyle(Ve.appendChild(Xe),null).getPropertyValue("transform"),Ve.removeChild(Xe),t=t.slice(7,-1).split(","),rr(+t[0],+t[1],+t[2],+t[3],+t[4],+t[5]))},"px, ","px)","deg)"),ur=ir(function(t){return null==t?er:($e||($e=document.createElementNS("http://www.w3.org/2000/svg","g")),$e.setAttribute("transform",t),(t=$e.transform.baseVal.consolidate())?(t=t.matrix,rr(t.a,t.b,t.c,t.d,t.e,t.f)):er)},", ",")",")"),ar=Math.SQRT2;function cr(t){return((t=Math.exp(t))+1/t)/2}var fr=function(t,n){var e,r,i=t[0],o=t[1],u=t[2],a=n[0],c=n[1],f=n[2],s=a-i,l=c-o,h=s*s+l*l;if(h<1e-12)r=Math.log(f/u)/ar,e=function(t){return[i+t*s,o+t*l,u*Math.exp(ar*t*r)]};else{var d=Math.sqrt(h),p=(f*f-u*u+4*h)/(2*u*2*d),v=(f*f-u*u-4*h)/(2*f*2*d),g=Math.log(Math.sqrt(p*p+1)-p),y=Math.log(Math.sqrt(v*v+1)-v);r=(y-g)/ar,e=function(t){var n=t*r,e=cr(g),a=u/(2*d)*(e*function(t){return((t=Math.exp(2*t))-1)/(t+1)}(ar*n+g)-function(t){return((t=Math.exp(t))-1/t)/2}(g));return[i+a*s,o+a*l,u*e/cr(ar*n+g)]}}return e.duration=1e3*r,e};function sr(t){return function(n,e){var r=t((n=Zn(n)).h,(e=Zn(e)).h),i=De(n.s,e.s),o=De(n.l,e.l),u=De(n.opacity,e.opacity);return function(t){return n.h=r(t),n.s=i(t),n.l=o(t),n.opacity=u(t),n+""}}}var lr=sr(Le),hr=sr(De);function dr(t,n){var e=De((t=se(t)).l,(n=se(n)).l),r=De(t.a,n.a),i=De(t.b,n.b),o=De(t.opacity,n.opacity);return function(n){return t.l=e(n),t.a=r(n),t.b=i(n),t.opacity=o(n),t+""}}function pr(t){return function(n,e){var r=t((n=be(n)).h,(e=be(e)).h),i=De(n.c,e.c),o=De(n.l,e.l),u=De(n.opacity,e.opacity);return function(t){return n.h=r(t),n.c=i(t),n.l=o(t),n.opacity=u(t),n+""}}}var vr=pr(Le),gr=pr(De);function yr(t){return function n(e){function r(n,r){var i=t((n=Ce(n)).h,(r=Ce(r)).h),o=De(n.s,r.s),u=De(n.l,r.l),a=De(n.opacity,r.opacity);return function(t){return n.h=i(t),n.s=o(t),n.l=u(Math.pow(t,e)),n.opacity=a(t),n+""}}return e=+e,r.gamma=n,r}(1)}var br=yr(Le),_r=yr(De);function mr(t,n){for(var e=0,r=n.length-1,i=n[0],o=new Array(r<0?0:r);e<r;)o[e]=t(i,i=n[++e]);return function(t){var n=Math.max(0,Math.min(r-1,Math.floor(t*=r)));return o[n](t-n)}}var xr,wr,Mr=function(t,n){for(var e=new Array(n),r=0;r<n;++r)e[r]=t(r/(n-1));return e},Sr=0,Ar=0,Cr=0,Nr=1e3,kr=0,Tr=0,Er=0,Pr="object"==typeof performance&&performance.now?performance:Date,zr="object"==typeof window&&window.requestAnimationFrame?window.requestAnimationFrame.bind(window):function(t){setTimeout(t,17)};function Lr(){return Tr||(zr(Rr),Tr=Pr.now()+Er)}function Rr(){Tr=0}function Dr(){this._call=this._time=this._next=null}function Or(t,n,e){var r=new Dr;return r.restart(t,n,e),r}function qr(){Lr(),++Sr;for(var t,n=xr;n;)(t=Tr-n._time)>=0&&n._call.call(null,t),n=n._next;--Sr}function Ur(){Tr=(kr=Pr.now())+Er,Sr=Ar=0;try{qr()}finally{Sr=0,function(){var t,n,e=xr,r=1/0;for(;e;)e._call?(r>e._time&&(r=e._time),t=e,e=e._next):(n=e._next,e._next=null,e=t?t._next=n:xr=n);wr=t,Yr(r)}(),Tr=0}}function Br(){var t=Pr.now(),n=t-kr;n>Nr&&(Er-=n,kr=t)}function Yr(t){Sr||(Ar&&(Ar=clearTimeout(Ar)),t-Tr>24?(t<1/0&&(Ar=setTimeout(Ur,t-Pr.now()-Er)),Cr&&(Cr=clearInterval(Cr))):(Cr||(kr=Pr.now(),Cr=setInterval(Br,Nr)),Sr=1,zr(Ur)))}Dr.prototype=Or.prototype={constructor:Dr,restart:function(t,n,e){if("function"!=typeof t)throw new TypeError("callback is not a function");e=(null==e?Lr():+e)+(null==n?0:+n),this._next||wr===this||(wr?wr._next=this:xr=this,wr=this),this._call=t,this._time=e,Yr()},stop:function(){this._call&&(this._call=null,this._time=1/0,Yr())}};var Hr=function(t,n,e){var r=new Dr;return n=null==n?0:+n,r.restart(function(e){r.stop(),t(e+n)},n,e),r},Ir=function(t,n,e){var r=new Dr,i=n;return null==n?(r.restart(t,n,e),r):(n=+n,e=null==e?Lr():+e,r.restart(function o(u){u+=i,r.restart(o,i+=n,e),t(u)},n,e),r)},Fr=ht("start","end","interrupt"),jr=[],Gr=0,Xr=1,Vr=2,Wr=3,$r=4,Zr=5,Qr=6,Jr=function(t,n,e,r,i,o){var u=t.__transition;if(u){if(e in u)return}else t.__transition={};!function(t,n,e){var r,i=t.__transition;function o(c){var f,s,l,h;if(e.state!==Xr)return a();for(f in i)if((h=i[f]).name===e.name){if(h.state===Wr)return Hr(o);h.state===$r?(h.state=Qr,h.timer.stop(),h.on.call("interrupt",t,t.__data__,h.index,h.group),delete i[f]):+f<n&&(h.state=Qr,h.timer.stop(),delete i[f])}if(Hr(function(){e.state===Wr&&(e.state=$r,e.timer.restart(u,e.delay,e.time),u(c))}),e.state=Vr,e.on.call("start",t,t.__data__,e.index,e.group),e.state===Vr){for(e.state=Wr,r=new Array(l=e.tween.length),f=0,s=-1;f<l;++f)(h=e.tween[f].value.call(t,t.__data__,e.index,e.group))&&(r[++s]=h);r.length=s+1}}function u(n){for(var i=n<e.duration?e.ease.call(null,n/e.duration):(e.timer.restart(a),e.state=Zr,1),o=-1,u=r.length;++o<u;)r[o].call(null,i);e.state===Zr&&(e.on.call("end",t,t.__data__,e.index,e.group),a())}function a(){for(var r in e.state=Qr,e.timer.stop(),delete i[n],i)return;delete t.__transition}i[n]=e,e.timer=Or(function(t){e.state=Xr,e.timer.restart(o,e.delay,e.time),e.delay<=t&&o(t-e.delay)},0,e.time)}(t,e,{name:n,index:r,group:i,on:Fr,tween:jr,time:o.time,delay:o.delay,duration:o.duration,ease:o.ease,timer:null,state:Gr})};function Kr(t,n){var e=ni(t,n);if(e.state>Gr)throw new Error("too late; already scheduled");return e}function ti(t,n){var e=ni(t,n);if(e.state>Vr)throw new Error("too late; already started");return e}function ni(t,n){var e=t.__transition;if(!e||!(e=e[n]))throw new Error("transition not found");return e}var ei=function(t,n){var e,r,i,o=t.__transition,u=!0;if(o){for(i in n=null==n?null:n+"",o)(e=o[i]).name===n?(r=e.state>Vr&&e.state<Zr,e.state=Qr,e.timer.stop(),r&&e.on.call("interrupt",t,t.__data__,e.index,e.group),delete o[i]):u=!1;u&&delete t.__transition}};function ri(t,n,e){var r=t._id;return t.each(function(){var t=ti(this,r);(t.value||(t.value={}))[n]=e.apply(this,arguments)}),function(t){return ni(t,r).value[n]}}var ii=function(t,n){var e;return("number"==typeof n?Ie:n instanceof In?Oe:(e=In(n))?(n=e,Oe):Ze)(t,n)};var oi=rn.prototype.constructor;var ui=0;function ai(t,n,e,r){this._groups=t,this._parents=n,this._name=e,this._id=r}function ci(t){return rn().transition(t)}function fi(){return++ui}var si=rn.prototype;function li(t){return+t}function hi(t){return t*t}function di(t){return t*(2-t)}function pi(t){return((t*=2)<=1?t*t:--t*(2-t)+1)/2}function vi(t){return t*t*t}function gi(t){return--t*t*t+1}function yi(t){return((t*=2)<=1?t*t*t:(t-=2)*t*t+2)/2}ai.prototype=ci.prototype={constructor:ai,select:function(t){var n=this._name,e=this._id;"function"!=typeof t&&(t=bt(t));for(var r=this._groups,i=r.length,o=new Array(i),u=0;u<i;++u)for(var a,c,f=r[u],s=f.length,l=o[u]=new Array(s),h=0;h<s;++h)(a=f[h])&&(c=t.call(a,a.__data__,h,f))&&("__data__"in a&&(c.__data__=a.__data__),l[h]=c,Jr(l[h],n,e,h,l,ni(a,e)));return new ai(o,this._parents,n,e)},selectAll:function(t){var n=this._name,e=this._id;"function"!=typeof t&&(t=mt(t));for(var r=this._groups,i=r.length,o=[],u=[],a=0;a<i;++a)for(var c,f=r[a],s=f.length,l=0;l<s;++l)if(c=f[l]){for(var h,d=t.call(c,c.__data__,l,f),p=ni(c,e),v=0,g=d.length;v<g;++v)(h=d[v])&&Jr(h,n,e,v,d,p);o.push(d),u.push(c)}return new ai(o,u,n,e)},filter:function(t){"function"!=typeof t&&(t=St(t));for(var n=this._groups,e=n.length,r=new Array(e),i=0;i<e;++i)for(var o,u=n[i],a=u.length,c=r[i]=[],f=0;f<a;++f)(o=u[f])&&t.call(o,o.__data__,f,u)&&c.push(o);return new ai(r,this._parents,this._name,this._id)},merge:function(t){if(t._id!==this._id)throw new Error;for(var n=this._groups,e=t._groups,r=n.length,i=e.length,o=Math.min(r,i),u=new Array(r),a=0;a<o;++a)for(var c,f=n[a],s=e[a],l=f.length,h=u[a]=new Array(l),d=0;d<l;++d)(c=f[d]||s[d])&&(h[d]=c);for(;a<r;++a)u[a]=n[a];return new ai(u,this._parents,this._name,this._id)},selection:function(){return new oi(this._groups,this._parents)},transition:function(){for(var t=this._name,n=this._id,e=fi(),r=this._groups,i=r.length,o=0;o<i;++o)for(var u,a=r[o],c=a.length,f=0;f<c;++f)if(u=a[f]){var s=ni(u,n);Jr(u,t,e,f,a,{time:s.time+s.delay+s.duration,delay:0,duration:s.duration,ease:s.ease})}return new ai(r,this._parents,t,e)},call:si.call,nodes:si.nodes,node:si.node,size:si.size,empty:si.empty,each:si.each,on:function(t,n){var e=this._id;return arguments.length<2?ni(this.node(),e).on.on(t):this.each(function(t,n,e){var r,i,o=function(t){return(t+"").trim().split(/^|\s+/).every(function(t){var n=t.indexOf(".");return n>=0&&(t=t.slice(0,n)),!t||"start"===t})}(n)?Kr:ti;return function(){var u=o(this,t),a=u.on;a!==r&&(i=(r=a).copy()).on(n,e),u.on=i}}(e,t,n))},attr:function(t,n){var e=vt(t),r="transform"===e?ur:ii;return this.attrTween(t,"function"==typeof n?(e.local?function(t,n,e){var r,i,o;return function(){var u,a=e(this);if(null!=a)return(u=this.getAttributeNS(t.space,t.local))===a?null:u===r&&a===i?o:o=n(r=u,i=a);this.removeAttributeNS(t.space,t.local)}}:function(t,n,e){var r,i,o;return function(){var u,a=e(this);if(null!=a)return(u=this.getAttribute(t))===a?null:u===r&&a===i?o:o=n(r=u,i=a);this.removeAttribute(t)}})(e,r,ri(this,"attr."+t,n)):null==n?(e.local?function(t){return function(){this.removeAttributeNS(t.space,t.local)}}:function(t){return function(){this.removeAttribute(t)}})(e):(e.local?function(t,n,e){var r,i;return function(){var o=this.getAttributeNS(t.space,t.local);return o===e?null:o===r?i:i=n(r=o,e)}}:function(t,n,e){var r,i;return function(){var o=this.getAttribute(t);return o===e?null:o===r?i:i=n(r=o,e)}})(e,r,n+""))},attrTween:function(t,n){var e="attr."+t;if(arguments.length<2)return(e=this.tween(e))&&e._value;if(null==n)return this.tween(e,null);if("function"!=typeof n)throw new Error;var r=vt(t);return this.tween(e,(r.local?function(t,n){function e(){var e=this,r=n.apply(e,arguments);return r&&function(n){e.setAttributeNS(t.space,t.local,r(n))}}return e._value=n,e}:function(t,n){function e(){var e=this,r=n.apply(e,arguments);return r&&function(n){e.setAttribute(t,r(n))}}return e._value=n,e})(r,n))},style:function(t,n,e){var r="transform"==(t+="")?or:ii;return null==n?this.styleTween(t,function(t,n){var e,r,i;return function(){var o=zt(this,t),u=(this.style.removeProperty(t),zt(this,t));return o===u?null:o===e&&u===r?i:i=n(e=o,r=u)}}(t,r)).on("end.style."+t,function(t){return function(){this.style.removeProperty(t)}}(t)):this.styleTween(t,"function"==typeof n?function(t,n,e){var r,i,o;return function(){var u=zt(this,t),a=e(this);return null==a&&(this.style.removeProperty(t),a=zt(this,t)),u===a?null:u===r&&a===i?o:o=n(r=u,i=a)}}(t,r,ri(this,"style."+t,n)):function(t,n,e){var r,i;return function(){var o=zt(this,t);return o===e?null:o===r?i:i=n(r=o,e)}}(t,r,n+""),e)},styleTween:function(t,n,e){var r="style."+(t+="");if(arguments.length<2)return(r=this.tween(r))&&r._value;if(null==n)return this.tween(r,null);if("function"!=typeof n)throw new Error;return this.tween(r,function(t,n,e){function r(){var r=this,i=n.apply(r,arguments);return i&&function(n){r.style.setProperty(t,i(n),e)}}return r._value=n,r}(t,n,null==e?"":e))},text:function(t){return this.tween("text","function"==typeof t?function(t){return function(){var n=t(this);this.textContent=null==n?"":n}}(ri(this,"text",t)):function(t){return function(){this.textContent=t}}(null==t?"":t+""))},remove:function(){return this.on("end.remove",function(t){return function(){var n=this.parentNode;for(var e in this.__transition)if(+e!==t)return;n&&n.removeChild(this)}}(this._id))},tween:function(t,n){var e=this._id;if(t+="",arguments.length<2){for(var r,i=ni(this.node(),e).tween,o=0,u=i.length;o<u;++o)if((r=i[o]).name===t)return r.value;return null}return this.each((null==n?function(t,n){var e,r;return function(){var i=ti(this,t),o=i.tween;if(o!==e)for(var u=0,a=(r=e=o).length;u<a;++u)if(r[u].name===n){(r=r.slice()).splice(u,1);break}i.tween=r}}:function(t,n,e){var r,i;if("function"!=typeof e)throw new Error;return function(){var o=ti(this,t),u=o.tween;if(u!==r){i=(r=u).slice();for(var a={name:n,value:e},c=0,f=i.length;c<f;++c)if(i[c].name===n){i[c]=a;break}c===f&&i.push(a)}o.tween=i}})(e,t,n))},delay:function(t){var n=this._id;return arguments.length?this.each(("function"==typeof t?function(t,n){return function(){Kr(this,t).delay=+n.apply(this,arguments)}}:function(t,n){return n=+n,function(){Kr(this,t).delay=n}})(n,t)):ni(this.node(),n).delay},duration:function(t){var n=this._id;return arguments.length?this.each(("function"==typeof t?function(t,n){return function(){ti(this,t).duration=+n.apply(this,arguments)}}:function(t,n){return n=+n,function(){ti(this,t).duration=n}})(n,t)):ni(this.node(),n).duration},ease:function(t){var n=this._id;return arguments.length?this.each(function(t,n){if("function"!=typeof n)throw new Error;return function(){ti(this,t).ease=n}}(n,t)):ni(this.node(),n).ease}};var bi=function t(n){function e(t){return Math.pow(t,n)}return n=+n,e.exponent=t,e}(3),_i=function t(n){function e(t){return 1-Math.pow(1-t,n)}return n=+n,e.exponent=t,e}(3),mi=function t(n){function e(t){return((t*=2)<=1?Math.pow(t,n):2-Math.pow(2-t,n))/2}return n=+n,e.exponent=t,e}(3),xi=Math.PI,wi=xi/2;function Mi(t){return 1-Math.cos(t*wi)}function Si(t){return Math.sin(t*wi)}function Ai(t){return(1-Math.cos(xi*t))/2}function Ci(t){return Math.pow(2,10*t-10)}function Ni(t){return 1-Math.pow(2,-10*t)}function ki(t){return((t*=2)<=1?Math.pow(2,10*t-10):2-Math.pow(2,10-10*t))/2}function Ti(t){return 1-Math.sqrt(1-t*t)}function Ei(t){return Math.sqrt(1- --t*t)}function Pi(t){return((t*=2)<=1?1-Math.sqrt(1-t*t):Math.sqrt(1-(t-=2)*t)+1)/2}var zi=4/11,Li=6/11,Ri=8/11,Di=.75,Oi=9/11,qi=10/11,Ui=.9375,Bi=21/22,Yi=63/64,Hi=1/zi/zi;function Ii(t){return 1-Fi(1-t)}function Fi(t){return(t=+t)<zi?Hi*t*t:t<Ri?Hi*(t-=Li)*t+Di:t<qi?Hi*(t-=Oi)*t+Ui:Hi*(t-=Bi)*t+Yi}function ji(t){return((t*=2)<=1?1-Fi(1-t):Fi(t-1)+1)/2}var Gi=function t(n){function e(t){return t*t*((n+1)*t-n)}return n=+n,e.overshoot=t,e}(1.70158),Xi=function t(n){function e(t){return--t*t*((n+1)*t+n)+1}return n=+n,e.overshoot=t,e}(1.70158),Vi=function t(n){function e(t){return((t*=2)<1?t*t*((n+1)*t-n):(t-=2)*t*((n+1)*t+n)+2)/2}return n=+n,e.overshoot=t,e}(1.70158),Wi=2*Math.PI,$i=function t(n,e){var r=Math.asin(1/(n=Math.max(1,n)))*(e/=Wi);function i(t){return n*Math.pow(2,10*--t)*Math.sin((r-t)/e)}return i.amplitude=function(n){return t(n,e*Wi)},i.period=function(e){return t(n,e)},i}(1,.3),Zi=function t(n,e){var r=Math.asin(1/(n=Math.max(1,n)))*(e/=Wi);function i(t){return 1-n*Math.pow(2,-10*(t=+t))*Math.sin((t+r)/e)}return i.amplitude=function(n){return t(n,e*Wi)},i.period=function(e){return t(n,e)},i}(1,.3),Qi=function t(n,e){var r=Math.asin(1/(n=Math.max(1,n)))*(e/=Wi);function i(t){return((t=2*t-1)<0?n*Math.pow(2,10*t)*Math.sin((r-t)/e):2-n*Math.pow(2,-10*t)*Math.sin((r+t)/e))/2}return i.amplitude=function(n){return t(n,e*Wi)},i.period=function(e){return t(n,e)},i}(1,.3),Ji={time:null,delay:0,duration:250,ease:yi};function Ki(t,n){for(var e;!(e=t.__transition)||!(e=e[n]);)if(!(t=t.parentNode))return Ji.time=Lr(),Ji;return e}rn.prototype.interrupt=function(t){return this.each(function(){ei(this,t)})},rn.prototype.transition=function(t){var n,e;t instanceof ai?(n=t._id,t=t._name):(n=fi(),(e=Ji).time=Lr(),t=null==t?null:t+"");for(var r=this._groups,i=r.length,o=0;o<i;++o)for(var u,a=r[o],c=a.length,f=0;f<c;++f)(u=a[f])&&Jr(u,t,n,f,a,e||Ki(u,n));return new ai(r,this._parents,t,n)};var to=[null],no=function(t,n){var e,r,i=t.__transition;if(i)for(r in n=null==n?null:n+"",i)if((e=i[r]).state>Xr&&e.name===n)return new ai([[t]],to,n,+r);return null},eo=function(t){return function(){return t}},ro=function(t,n,e){this.target=t,this.type=n,this.selection=e};function io(){Vt.stopImmediatePropagation()}var oo=function(){Vt.preventDefault(),Vt.stopImmediatePropagation()},uo={name:"drag"},ao={name:"space"},co={name:"handle"},fo={name:"center"},so={name:"x",handles:["e","w"].map(_o),input:function(t,n){return t&&[[t[0],n[0][1]],[t[1],n[1][1]]]},output:function(t){return t&&[t[0][0],t[1][0]]}},lo={name:"y",handles:["n","s"].map(_o),input:function(t,n){return t&&[[n[0][0],t[0]],[n[1][0],t[1]]]},output:function(t){return t&&[t[0][1],t[1][1]]}},ho={name:"xy",handles:["n","e","s","w","nw","ne","se","sw"].map(_o),input:function(t){return t},output:function(t){return t}},po={overlay:"crosshair",selection:"move",n:"ns-resize",e:"ew-resize",s:"ns-resize",w:"ew-resize",nw:"nwse-resize",ne:"nesw-resize",se:"nwse-resize",sw:"nesw-resize"},vo={e:"w",w:"e",nw:"ne",ne:"nw",se:"sw",sw:"se"},go={n:"s",s:"n",nw:"sw",ne:"se",se:"ne",sw:"nw"},yo={overlay:1,selection:1,n:null,e:1,s:null,w:-1,nw:-1,ne:1,se:1,sw:-1},bo={overlay:1,selection:1,n:-1,e:null,s:1,w:null,nw:-1,ne:-1,se:1,sw:1};function _o(t){return{type:t}}function mo(){return!Vt.button}function xo(){var t=this.ownerSVGElement||this;return[[0,0],[t.width.baseVal.value,t.height.baseVal.value]]}function wo(t){for(;!t.__brush;)if(!(t=t.parentNode))return;return t.__brush}function Mo(t){return t[0][0]===t[1][0]||t[0][1]===t[1][1]}function So(t){var n=t.__brush;return n?n.dim.output(n.selection):null}function Ao(){return ko(so)}function Co(){return ko(lo)}var No=function(){return ko(ho)};function ko(t){var n,e=xo,r=mo,i=ht(u,"start","brush","end"),o=6;function u(n){var e=n.property("__brush",l).selectAll(".overlay").data([_o("overlay")]);e.enter().append("rect").attr("class","overlay").attr("pointer-events","all").attr("cursor",po.overlay).merge(e).each(function(){var t=wo(this).extent;on(this).attr("x",t[0][0]).attr("y",t[0][1]).attr("width",t[1][0]-t[0][0]).attr("height",t[1][1]-t[0][1])}),n.selectAll(".selection").data([_o("selection")]).enter().append("rect").attr("class","selection").attr("cursor",po.selection).attr("fill","#777").attr("fill-opacity",.3).attr("stroke","#fff").attr("shape-rendering","crispEdges");var r=n.selectAll(".handle").data(t.handles,function(t){return t.type});r.exit().remove(),r.enter().append("rect").attr("class",function(t){return"handle handle--"+t.type}).attr("cursor",function(t){return po[t.type]}),n.each(a).attr("fill","none").attr("pointer-events","all").style("-webkit-tap-highlight-color","rgba(0,0,0,0)").on("mousedown.brush touchstart.brush",s)}function a(){var t=on(this),n=wo(this).selection;n?(t.selectAll(".selection").style("display",null).attr("x",n[0][0]).attr("y",n[0][1]).attr("width",n[1][0]-n[0][0]).attr("height",n[1][1]-n[0][1]),t.selectAll(".handle").style("display",null).attr("x",function(t){return"e"===t.type[t.type.length-1]?n[1][0]-o/2:n[0][0]-o/2}).attr("y",function(t){return"s"===t.type[0]?n[1][1]-o/2:n[0][1]-o/2}).attr("width",function(t){return"n"===t.type||"s"===t.type?n[1][0]-n[0][0]+o:o}).attr("height",function(t){return"e"===t.type||"w"===t.type?n[1][1]-n[0][1]+o:o})):t.selectAll(".selection,.handle").style("display","none").attr("x",null).attr("y",null).attr("width",null).attr("height",null)}function c(t,n){return t.__brush.emitter||new f(t,n)}function f(t,n){this.that=t,this.args=n,this.state=t.__brush,this.active=0}function s(){if(Vt.touches){if(Vt.changedTouches.length<Vt.touches.length)return oo()}else if(n)return;if(r.apply(this,arguments)){var e,i,o,u,f,s,l,h,d,p,v,g,y,b=this,_=Vt.target.__data__.type,m="selection"===(Vt.metaKey?_="overlay":_)?uo:Vt.altKey?fo:co,x=t===lo?null:yo[_],w=t===so?null:bo[_],M=wo(b),S=M.extent,A=M.selection,C=S[0][0],N=S[0][1],k=S[1][0],T=S[1][1],E=x&&w&&Vt.shiftKey,P=hn(b),z=P,L=c(b,arguments).beforestart();"overlay"===_?M.selection=A=[[e=t===lo?C:P[0],o=t===so?N:P[1]],[f=t===lo?k:e,l=t===so?T:o]]:(e=A[0][0],o=A[0][1],f=A[1][0],l=A[1][1]),i=e,u=o,s=f,h=l;var R=on(b).attr("pointer-events","none"),D=R.selectAll(".overlay").attr("cursor",po[_]);if(Vt.touches)R.on("touchmove.brush",q,!0).on("touchend.brush touchcancel.brush",B,!0);else{var O=on(Vt.view).on("keydown.brush",function(){switch(Vt.keyCode){case 16:E=x&&w;break;case 18:m===co&&(x&&(f=s-d*x,e=i+d*x),w&&(l=h-p*w,o=u+p*w),m=fo,U());break;case 32:m!==co&&m!==fo||(x<0?f=s-d:x>0&&(e=i-d),w<0?l=h-p:w>0&&(o=u-p),m=ao,D.attr("cursor",po.selection),U());break;default:return}oo()},!0).on("keyup.brush",function(){switch(Vt.keyCode){case 16:E&&(g=y=E=!1,U());break;case 18:m===fo&&(x<0?f=s:x>0&&(e=i),w<0?l=h:w>0&&(o=u),m=co,U());break;case 32:m===ao&&(Vt.altKey?(x&&(f=s-d*x,e=i+d*x),w&&(l=h-p*w,o=u+p*w),m=fo):(x<0?f=s:x>0&&(e=i),w<0?l=h:w>0&&(o=u),m=co),D.attr("cursor",po[_]),U());break;default:return}oo()},!0).on("mousemove.brush",q,!0).on("mouseup.brush",B,!0);bn(Vt.view)}io(),ei(b),a.call(b),L.start()}function q(){var t=hn(b);!E||g||y||(Math.abs(t[0]-z[0])>Math.abs(t[1]-z[1])?y=!0:g=!0),z=t,v=!0,oo(),U()}function U(){var t;switch(d=z[0]-P[0],p=z[1]-P[1],m){case ao:case uo:x&&(d=Math.max(C-e,Math.min(k-f,d)),i=e+d,s=f+d),w&&(p=Math.max(N-o,Math.min(T-l,p)),u=o+p,h=l+p);break;case co:x<0?(d=Math.max(C-e,Math.min(k-e,d)),i=e+d,s=f):x>0&&(d=Math.max(C-f,Math.min(k-f,d)),i=e,s=f+d),w<0?(p=Math.max(N-o,Math.min(T-o,p)),u=o+p,h=l):w>0&&(p=Math.max(N-l,Math.min(T-l,p)),u=o,h=l+p);break;case fo:x&&(i=Math.max(C,Math.min(k,e-d*x)),s=Math.max(C,Math.min(k,f+d*x))),w&&(u=Math.max(N,Math.min(T,o-p*w)),h=Math.max(N,Math.min(T,l+p*w)))}s<i&&(x*=-1,t=e,e=f,f=t,t=i,i=s,s=t,_ in vo&&D.attr("cursor",po[_=vo[_]])),h<u&&(w*=-1,t=o,o=l,l=t,t=u,u=h,h=t,_ in go&&D.attr("cursor",po[_=go[_]])),M.selection&&(A=M.selection),g&&(i=A[0][0],s=A[1][0]),y&&(u=A[0][1],h=A[1][1]),A[0][0]===i&&A[0][1]===u&&A[1][0]===s&&A[1][1]===h||(M.selection=[[i,u],[s,h]],a.call(b),L.brush())}function B(){if(io(),Vt.touches){if(Vt.touches.length)return;n&&clearTimeout(n),n=setTimeout(function(){n=null},500),R.on("touchmove.brush touchend.brush touchcancel.brush",null)}else _n(Vt.view,v),O.on("keydown.brush keyup.brush mousemove.brush mouseup.brush",null);R.attr("pointer-events","all"),D.attr("cursor",po.overlay),M.selection&&(A=M.selection),Mo(A)&&(M.selection=null,a.call(b)),L.end()}}function l(){var n=this.__brush||{selection:null};return n.extent=e.apply(this,arguments),n.dim=t,n}return u.move=function(n,e){n.selection?n.on("start.brush",function(){c(this,arguments).beforestart().start()}).on("interrupt.brush end.brush",function(){c(this,arguments).end()}).tween("brush",function(){var n=this,r=n.__brush,i=c(n,arguments),o=r.selection,u=t.input("function"==typeof e?e.apply(this,arguments):e,r.extent),f=Qe(o,u);function s(t){r.selection=1===t&&Mo(u)?null:f(t),a.call(n),i.brush()}return o&&u?s:s(1)}):n.each(function(){var n=arguments,r=this.__brush,i=t.input("function"==typeof e?e.apply(this,n):e,r.extent),o=c(this,n).beforestart();ei(this),r.selection=null==i||Mo(i)?null:i,a.call(this),o.start().brush().end()})},f.prototype={beforestart:function(){return 1==++this.active&&(this.state.emitter=this,this.starting=!0),this},start:function(){return this.starting&&(this.starting=!1,this.emit("start")),this},brush:function(){return this.emit("brush"),this},end:function(){return 0==--this.active&&(delete this.state.emitter,this.emit("end")),this},emit:function(n){Jt(new ro(u,n,t.output(this.state.selection)),i.apply,i,[n,this.that,this.args])}},u.extent=function(t){return arguments.length?(e="function"==typeof t?t:eo([[+t[0][0],+t[0][1]],[+t[1][0],+t[1][1]]]),u):e},u.filter=function(t){return arguments.length?(r="function"==typeof t?t:eo(!!t),u):r},u.handleSize=function(t){return arguments.length?(o=+t,u):o},u.on=function(){var t=i.on.apply(i,arguments);return t===i?u:t},u}var To=Math.cos,Eo=Math.sin,Po=Math.PI,zo=Po/2,Lo=2*Po,Ro=Math.max;var Do=function(){var t=0,n=null,e=null,r=null;function i(i){var o,u,a,c,f,s,l=i.length,h=[],d=w(l),p=[],v=[],g=v.groups=new Array(l),y=new Array(l*l);for(o=0,f=-1;++f<l;){for(u=0,s=-1;++s<l;)u+=i[f][s];h.push(u),p.push(w(l)),o+=u}for(n&&d.sort(function(t,e){return n(h[t],h[e])}),e&&p.forEach(function(t,n){t.sort(function(t,r){return e(i[n][t],i[n][r])})}),c=(o=Ro(0,Lo-t*l)/o)?t:Lo/l,u=0,f=-1;++f<l;){for(a=u,s=-1;++s<l;){var b=d[f],_=p[b][s],m=i[b][_],x=u,M=u+=m*o;y[_*l+b]={index:b,subindex:_,startAngle:x,endAngle:M,value:m}}g[b]={index:b,startAngle:a,endAngle:u,value:h[b]},u+=c}for(f=-1;++f<l;)for(s=f-1;++s<l;){var S=y[s*l+f],A=y[f*l+s];(S.value||A.value)&&v.push(S.value<A.value?{source:A,target:S}:{source:S,target:A})}return r?v.sort(r):v}return i.padAngle=function(n){return arguments.length?(t=Ro(0,n),i):t},i.sortGroups=function(t){return arguments.length?(n=t,i):n},i.sortSubgroups=function(t){return arguments.length?(e=t,i):e},i.sortChords=function(t){return arguments.length?(null==t?r=null:(r=function(t){return function(n,e){return t(n.source.value+n.target.value,e.source.value+e.target.value)}}(t))._=t,i):r&&r._},i},Oo=Array.prototype.slice,qo=function(t){return function(){return t}},Uo=Math.PI,Bo=2*Uo,Yo=Bo-1e-6;function Ho(){this._x0=this._y0=this._x1=this._y1=null,this._=""}function Io(){return new Ho}Ho.prototype=Io.prototype={constructor:Ho,moveTo:function(t,n){this._+="M"+(this._x0=this._x1=+t)+","+(this._y0=this._y1=+n)},closePath:function(){null!==this._x1&&(this._x1=this._x0,this._y1=this._y0,this._+="Z")},lineTo:function(t,n){this._+="L"+(this._x1=+t)+","+(this._y1=+n)},quadraticCurveTo:function(t,n,e,r){this._+="Q"+ +t+","+ +n+","+(this._x1=+e)+","+(this._y1=+r)},bezierCurveTo:function(t,n,e,r,i,o){this._+="C"+ +t+","+ +n+","+ +e+","+ +r+","+(this._x1=+i)+","+(this._y1=+o)},arcTo:function(t,n,e,r,i){t=+t,n=+n,e=+e,r=+r,i=+i;var o=this._x1,u=this._y1,a=e-t,c=r-n,f=o-t,s=u-n,l=f*f+s*s;if(i<0)throw new Error("negative radius: "+i);if(null===this._x1)this._+="M"+(this._x1=t)+","+(this._y1=n);else if(l>1e-6)if(Math.abs(s*a-c*f)>1e-6&&i){var h=e-o,d=r-u,p=a*a+c*c,v=h*h+d*d,g=Math.sqrt(p),y=Math.sqrt(l),b=i*Math.tan((Uo-Math.acos((p+l-v)/(2*g*y)))/2),_=b/y,m=b/g;Math.abs(_-1)>1e-6&&(this._+="L"+(t+_*f)+","+(n+_*s)),this._+="A"+i+","+i+",0,0,"+ +(s*h>f*d)+","+(this._x1=t+m*a)+","+(this._y1=n+m*c)}else this._+="L"+(this._x1=t)+","+(this._y1=n);else;},arc:function(t,n,e,r,i,o){t=+t,n=+n;var u=(e=+e)*Math.cos(r),a=e*Math.sin(r),c=t+u,f=n+a,s=1^o,l=o?r-i:i-r;if(e<0)throw new Error("negative radius: "+e);null===this._x1?this._+="M"+c+","+f:(Math.abs(this._x1-c)>1e-6||Math.abs(this._y1-f)>1e-6)&&(this._+="L"+c+","+f),e&&(l<0&&(l=l%Bo+Bo),l>Yo?this._+="A"+e+","+e+",0,1,"+s+","+(t-u)+","+(n-a)+"A"+e+","+e+",0,1,"+s+","+(this._x1=c)+","+(this._y1=f):l>1e-6&&(this._+="A"+e+","+e+",0,"+ +(l>=Uo)+","+s+","+(this._x1=t+e*Math.cos(i))+","+(this._y1=n+e*Math.sin(i))))},rect:function(t,n,e,r){this._+="M"+(this._x0=this._x1=+t)+","+(this._y0=this._y1=+n)+"h"+ +e+"v"+ +r+"h"+-e+"Z"},toString:function(){return this._}};var Fo=Io;function jo(t){return t.source}function Go(t){return t.target}function Xo(t){return t.radius}function Vo(t){return t.startAngle}function Wo(t){return t.endAngle}var $o=function(){var t=jo,n=Go,e=Xo,r=Vo,i=Wo,o=null;function u(){var u,a=Oo.call(arguments),c=t.apply(this,a),f=n.apply(this,a),s=+e.apply(this,(a[0]=c,a)),l=r.apply(this,a)-zo,h=i.apply(this,a)-zo,d=s*To(l),p=s*Eo(l),v=+e.apply(this,(a[0]=f,a)),g=r.apply(this,a)-zo,y=i.apply(this,a)-zo;if(o||(o=u=Fo()),o.moveTo(d,p),o.arc(0,0,s,l,h),l===g&&h===y||(o.quadraticCurveTo(0,0,v*To(g),v*Eo(g)),o.arc(0,0,v,g,y)),o.quadraticCurveTo(0,0,d,p),o.closePath(),u)return o=null,u+""||null}return u.radius=function(t){return arguments.length?(e="function"==typeof t?t:qo(+t),u):e},u.startAngle=function(t){return arguments.length?(r="function"==typeof t?t:qo(+t),u):r},u.endAngle=function(t){return arguments.length?(i="function"==typeof t?t:qo(+t),u):i},u.source=function(n){return arguments.length?(t=n,u):t},u.target=function(t){return arguments.length?(n=t,u):n},u.context=function(t){return arguments.length?(o=null==t?null:t,u):o},u};function Zo(){}function Qo(t,n){var e=new Zo;if(t instanceof Zo)t.each(function(t,n){e.set(n,t)});else if(Array.isArray(t)){var r,i=-1,o=t.length;if(null==n)for(;++i<o;)e.set(i,t[i]);else for(;++i<o;)e.set(n(r=t[i],i,t),r)}else if(t)for(var u in t)e.set(u,t[u]);return e}Zo.prototype=Qo.prototype={constructor:Zo,has:function(t){return"$"+t in this},get:function(t){return this["$"+t]},set:function(t,n){return this["$"+t]=n,this},remove:function(t){var n="$"+t;return n in this&&delete this[n]},clear:function(){for(var t in this)"$"===t[0]&&delete this[t]},keys:function(){var t=[];for(var n in this)"$"===n[0]&&t.push(n.slice(1));return t},values:function(){var t=[];for(var n in this)"$"===n[0]&&t.push(this[n]);return t},entries:function(){var t=[];for(var n in this)"$"===n[0]&&t.push({key:n.slice(1),value:this[n]});return t},size:function(){var t=0;for(var n in this)"$"===n[0]&&++t;return t},empty:function(){for(var t in this)if("$"===t[0])return!1;return!0},each:function(t){for(var n in this)"$"===n[0]&&t(this[n],n.slice(1),this)}};var Jo=Qo,Ko=function(){var t,n,e,r=[],i=[];function o(e,i,u,a){if(i>=r.length)return null!=t&&e.sort(t),null!=n?n(e):e;for(var c,f,s,l=-1,h=e.length,d=r[i++],p=Jo(),v=u();++l<h;)(s=p.get(c=d(f=e[l])+""))?s.push(f):p.set(c,[f]);return p.each(function(t,n){a(v,n,o(t,i,u,a))}),v}return e={object:function(t){return o(t,0,tu,nu)},map:function(t){return o(t,0,eu,ru)},entries:function(t){return function t(e,o){if(++o>r.length)return e;var u,a=i[o-1];return null!=n&&o>=r.length?u=e.entries():(u=[],e.each(function(n,e){u.push({key:e,values:t(n,o)})})),null!=a?u.sort(function(t,n){return a(t.key,n.key)}):u}(o(t,0,eu,ru),0)},key:function(t){return r.push(t),e},sortKeys:function(t){return i[r.length-1]=t,e},sortValues:function(n){return t=n,e},rollup:function(t){return n=t,e}}};function tu(){return{}}function nu(t,n,e){t[n]=e}function eu(){return Jo()}function ru(t,n,e){t.set(n,e)}function iu(){}var ou=Jo.prototype;function uu(t,n){var e=new iu;if(t instanceof iu)t.each(function(t){e.add(t)});else if(t){var r=-1,i=t.length;if(null==n)for(;++r<i;)e.add(t[r]);else for(;++r<i;)e.add(n(t[r],r,t))}return e}iu.prototype=uu.prototype={constructor:iu,has:ou.has,add:function(t){return this["$"+(t+="")]=t,this},remove:ou.remove,clear:ou.clear,values:ou.keys,size:ou.size,empty:ou.empty,each:ou.each};var au=uu,cu=function(t){var n=[];for(var e in t)n.push(e);return n},fu=function(t){var n=[];for(var e in t)n.push(t[e]);return n},su=function(t){var n=[];for(var e in t)n.push({key:e,value:t[e]});return n},lu=Array.prototype.slice,hu=function(t,n){return t-n},du=function(t){for(var n=0,e=t.length,r=t[e-1][1]*t[0][0]-t[e-1][0]*t[0][1];++n<e;)r+=t[n-1][1]*t[n][0]-t[n-1][0]*t[n][1];return r},pu=function(t){return function(){return t}},vu=function(t,n){for(var e,r=-1,i=n.length;++r<i;)if(e=gu(t,n[r]))return e;return 0};function gu(t,n){for(var e=n[0],r=n[1],i=-1,o=0,u=t.length,a=u-1;o<u;a=o++){var c=t[o],f=c[0],s=c[1],l=t[a],h=l[0],d=l[1];if(yu(c,l,n))return 0;s>r!=d>r&&e<(h-f)*(r-s)/(d-s)+f&&(i=-i)}return i}function yu(t,n,e){var r;return function(t,n,e){return(n[0]-t[0])*(e[1]-t[1])==(e[0]-t[0])*(n[1]-t[1])}(t,n,e)&&function(t,n,e){return t<=n&&n<=e||e<=n&&n<=t}(t[r=+(t[0]===n[0])],e[r],n[r])}var bu=function(){},_u=[[],[[[1,1.5],[.5,1]]],[[[1.5,1],[1,1.5]]],[[[1.5,1],[.5,1]]],[[[1,.5],[1.5,1]]],[[[1,1.5],[.5,1]],[[1,.5],[1.5,1]]],[[[1,.5],[1,1.5]]],[[[1,.5],[.5,1]]],[[[.5,1],[1,.5]]],[[[1,1.5],[1,.5]]],[[[.5,1],[1,.5]],[[1.5,1],[1,1.5]]],[[[1.5,1],[1,.5]]],[[[.5,1],[1.5,1]]],[[[1,1.5],[1.5,1]]],[[[.5,1],[1,1.5]]],[]],mu=function(){var t=1,n=1,e=T,r=a;function i(t){var n=e(t);if(Array.isArray(n))n=n.slice().sort(hu);else{var r=g(t),i=r[0],u=r[1];n=k(i,u,n),n=w(Math.floor(i/n)*n,Math.floor(u/n)*n,n)}return n.map(function(n){return o(t,n)})}function o(e,i){var o=[],a=[];return function(e,r,i){var o,a,c,f,s,l,h=new Array,d=new Array;o=a=-1,f=e[0]>=r,_u[f<<1].forEach(p);for(;++o<t-1;)c=f,f=e[o+1]>=r,_u[c|f<<1].forEach(p);_u[f<<0].forEach(p);for(;++a<n-1;){for(o=-1,f=e[a*t+t]>=r,s=e[a*t]>=r,_u[f<<1|s<<2].forEach(p);++o<t-1;)c=f,f=e[a*t+t+o+1]>=r,l=s,s=e[a*t+o+1]>=r,_u[c|f<<1|s<<2|l<<3].forEach(p);_u[f|s<<3].forEach(p)}o=-1,s=e[a*t]>=r,_u[s<<2].forEach(p);for(;++o<t-1;)l=s,s=e[a*t+o+1]>=r,_u[s<<2|l<<3].forEach(p);function p(t){var n,e,r=[t[0][0]+o,t[0][1]+a],c=[t[1][0]+o,t[1][1]+a],f=u(r),s=u(c);(n=d[f])?(e=h[s])?(delete d[n.end],delete h[e.start],n===e?(n.ring.push(c),i(n.ring)):h[n.start]=d[e.end]={start:n.start,end:e.end,ring:n.ring.concat(e.ring)}):(delete d[n.end],n.ring.push(c),d[n.end=s]=n):(n=h[s])?(e=d[f])?(delete h[n.start],delete d[e.end],n===e?(n.ring.push(c),i(n.ring)):h[e.start]=d[n.end]={start:e.start,end:n.end,ring:e.ring.concat(n.ring)}):(delete h[n.start],n.ring.unshift(r),h[n.start=f]=n):h[f]=d[s]={start:f,end:s,ring:[r,c]}}_u[s<<3].forEach(p)}(e,i,function(t){r(t,e,i),du(t)>0?o.push([t]):a.push(t)}),a.forEach(function(t){for(var n,e=0,r=o.length;e<r;++e)if(-1!==vu((n=o[e])[0],t))return void n.push(t)}),{type:"MultiPolygon",value:i,coordinates:o}}function u(n){return 2*n[0]+n[1]*(t+1)*4}function a(e,r,i){e.forEach(function(e){var o,u=e[0],a=e[1],c=0|u,f=0|a,s=r[f*t+c];u>0&&u<t&&c===u&&(o=r[f*t+c-1],e[0]=u+(i-o)/(s-o)-.5),a>0&&a<n&&f===a&&(o=r[(f-1)*t+c],e[1]=a+(i-o)/(s-o)-.5)})}return i.contour=o,i.size=function(e){if(!arguments.length)return[t,n];var r=Math.ceil(e[0]),o=Math.ceil(e[1]);if(!(r>0&&o>0))throw new Error("invalid size");return t=r,n=o,i},i.thresholds=function(t){return arguments.length?(e="function"==typeof t?t:Array.isArray(t)?pu(lu.call(t)):pu(t),i):e},i.smooth=function(t){return arguments.length?(r=t?a:bu,i):r===a},i};function xu(t,n,e){for(var r=t.width,i=t.height,o=1+(e<<1),u=0;u<i;++u)for(var a=0,c=0;a<r+e;++a)a<r&&(c+=t.data[a+u*r]),a>=e&&(a>=o&&(c-=t.data[a-o+u*r]),n.data[a-e+u*r]=c/Math.min(a+1,r-1+o-a,o))}function wu(t,n,e){for(var r=t.width,i=t.height,o=1+(e<<1),u=0;u<r;++u)for(var a=0,c=0;a<i+e;++a)a<i&&(c+=t.data[u+a*r]),a>=e&&(a>=o&&(c-=t.data[u+(a-o)*r]),n.data[u+(a-e)*r]=c/Math.min(a+1,i-1+o-a,o))}function Mu(t){return t[0]}function Su(t){return t[1]}function Au(){return 1}var Cu=function(){var t=Mu,n=Su,e=Au,r=960,i=500,o=20,u=2,a=3*o,c=r+2*a>>u,f=i+2*a>>u,s=pu(20);function l(r){var i=new Float32Array(c*f),l=new Float32Array(c*f);r.forEach(function(r,o,s){var l=+t(r,o,s)+a>>u,h=+n(r,o,s)+a>>u,d=+e(r,o,s);l>=0&&l<c&&h>=0&&h<f&&(i[l+h*c]+=d)}),xu({width:c,height:f,data:i},{width:c,height:f,data:l},o>>u),wu({width:c,height:f,data:l},{width:c,height:f,data:i},o>>u),xu({width:c,height:f,data:i},{width:c,height:f,data:l},o>>u),wu({width:c,height:f,data:l},{width:c,height:f,data:i},o>>u),xu({width:c,height:f,data:i},{width:c,height:f,data:l},o>>u),wu({width:c,height:f,data:l},{width:c,height:f,data:i},o>>u);var d=s(i);if(!Array.isArray(d)){var p=R(i);d=k(0,p,d),(d=w(0,Math.floor(p/d)*d,d)).shift()}return mu().thresholds(d).size([c,f])(i).map(h)}function h(t){return t.value*=Math.pow(2,-2*u),t.coordinates.forEach(d),t}function d(t){t.forEach(p)}function p(t){t.forEach(v)}function v(t){t[0]=t[0]*Math.pow(2,u)-a,t[1]=t[1]*Math.pow(2,u)-a}function g(){return c=r+2*(a=3*o)>>u,f=i+2*a>>u,l}return l.x=function(n){return arguments.length?(t="function"==typeof n?n:pu(+n),l):t},l.y=function(t){return arguments.length?(n="function"==typeof t?t:pu(+t),l):n},l.weight=function(t){return arguments.length?(e="function"==typeof t?t:pu(+t),l):e},l.size=function(t){if(!arguments.length)return[r,i];var n=Math.ceil(t[0]),e=Math.ceil(t[1]);if(!(n>=0||n>=0))throw new Error("invalid size");return r=n,i=e,g()},l.cellSize=function(t){if(!arguments.length)return 1<<u;if(!((t=+t)>=1))throw new Error("invalid cell size");return u=Math.floor(Math.log(t)/Math.LN2),g()},l.thresholds=function(t){return arguments.length?(s="function"==typeof t?t:Array.isArray(t)?pu(lu.call(t)):pu(t),l):s},l.bandwidth=function(t){if(!arguments.length)return Math.sqrt(o*(o+1));if(!((t=+t)>=0))throw new Error("invalid bandwidth");return o=Math.round((Math.sqrt(4*t*t+1)-1)/2),g()},l},Nu={},ku={},Tu=34,Eu=10,Pu=13;function zu(t){return new Function("d","return {"+t.map(function(t,n){return JSON.stringify(t)+": d["+n+"]"}).join(",")+"}")}var Lu=function(t){var n=new RegExp('["'+t+"\n\r]"),e=t.charCodeAt(0);function r(t,n){var r,i=[],o=t.length,u=0,a=0,c=o<=0,f=!1;function s(){if(c)return ku;if(f)return f=!1,Nu;var n,r,i=u;if(t.charCodeAt(i)===Tu){for(;u++<o&&t.charCodeAt(u)!==Tu||t.charCodeAt(++u)===Tu;);return(n=u)>=o?c=!0:(r=t.charCodeAt(u++))===Eu?f=!0:r===Pu&&(f=!0,t.charCodeAt(u)===Eu&&++u),t.slice(i+1,n-1).replace(/""/g,'"')}for(;u<o;){if((r=t.charCodeAt(n=u++))===Eu)f=!0;else if(r===Pu)f=!0,t.charCodeAt(u)===Eu&&++u;else if(r!==e)continue;return t.slice(i,n)}return c=!0,t.slice(i,o)}for(t.charCodeAt(o-1)===Eu&&--o,t.charCodeAt(o-1)===Pu&&--o;(r=s())!==ku;){for(var l=[];r!==Nu&&r!==ku;)l.push(r),r=s();n&&null==(l=n(l,a++))||i.push(l)}return i}function i(n){return n.map(o).join(t)}function o(t){return null==t?"":n.test(t+="")?'"'+t.replace(/"/g,'""')+'"':t}return{parse:function(t,n){var e,i,o=r(t,function(t,r){if(e)return e(t,r-1);i=t,e=n?function(t,n){var e=zu(t);return function(r,i){return n(e(r),i,t)}}(t,n):zu(t)});return o.columns=i||[],o},parseRows:r,format:function(n,e){return null==e&&(e=function(t){var n=Object.create(null),e=[];return t.forEach(function(t){for(var r in t)r in n||e.push(n[r]=r)}),e}(n)),[e.map(o).join(t)].concat(n.map(function(n){return e.map(function(t){return o(n[t])}).join(t)})).join("\n")},formatRows:function(t){return t.map(i).join("\n")}}},Ru=Lu(","),Du=Ru.parse,Ou=Ru.parseRows,qu=Ru.format,Uu=Ru.formatRows,Bu=Lu("\t"),Yu=Bu.parse,Hu=Bu.parseRows,Iu=Bu.format,Fu=Bu.formatRows;function ju(t){if(!t.ok)throw new Error(t.status+" "+t.statusText);return t.blob()}var Gu=function(t,n){return fetch(t,n).then(ju)};function Xu(t){if(!t.ok)throw new Error(t.status+" "+t.statusText);return t.arrayBuffer()}var Vu=function(t,n){return fetch(t,n).then(Xu)};function Wu(t){if(!t.ok)throw new Error(t.status+" "+t.statusText);return t.text()}var $u=function(t,n){return fetch(t,n).then(Wu)};function Zu(t){return function(n,e,r){return 2===arguments.length&&"function"==typeof e&&(r=e,e=void 0),$u(n,e).then(function(n){return t(n,r)})}}function Qu(t,n,e,r){3===arguments.length&&"function"==typeof e&&(r=e,e=void 0);var i=Lu(t);return $u(n,e).then(function(t){return i.parse(t,r)})}var Ju=Zu(Du),Ku=Zu(Yu),ta=function(t,n){return new Promise(function(e,r){var i=new Image;for(var o in n)i[o]=n[o];i.onerror=r,i.onload=function(){e(i)},i.src=t})};function na(t){if(!t.ok)throw new Error(t.status+" "+t.statusText);return t.json()}var ea=function(t,n){return fetch(t,n).then(na)};function ra(t){return function(n,e){return $u(n,e).then(function(n){return(new DOMParser).parseFromString(n,t)})}}var ia=ra("application/xml"),oa=ra("text/html"),ua=ra("image/svg+xml"),aa=function(t,n){var e;function r(){var r,i,o=e.length,u=0,a=0;for(r=0;r<o;++r)u+=(i=e[r]).x,a+=i.y;for(u=u/o-t,a=a/o-n,r=0;r<o;++r)(i=e[r]).x-=u,i.y-=a}return null==t&&(t=0),null==n&&(n=0),r.initialize=function(t){e=t},r.x=function(n){return arguments.length?(t=+n,r):t},r.y=function(t){return arguments.length?(n=+t,r):n},r},ca=function(t){return function(){return t}},fa=function(){return 1e-6*(Math.random()-.5)};function sa(t,n,e,r){if(isNaN(n)||isNaN(e))return t;var i,o,u,a,c,f,s,l,h,d=t._root,p={data:r},v=t._x0,g=t._y0,y=t._x1,b=t._y1;if(!d)return t._root=p,t;for(;d.length;)if((f=n>=(o=(v+y)/2))?v=o:y=o,(s=e>=(u=(g+b)/2))?g=u:b=u,i=d,!(d=d[l=s<<1|f]))return i[l]=p,t;if(a=+t._x.call(null,d.data),c=+t._y.call(null,d.data),n===a&&e===c)return p.next=d,i?i[l]=p:t._root=p,t;do{i=i?i[l]=new Array(4):t._root=new Array(4),(f=n>=(o=(v+y)/2))?v=o:y=o,(s=e>=(u=(g+b)/2))?g=u:b=u}while((l=s<<1|f)==(h=(c>=u)<<1|a>=o));return i[h]=d,i[l]=p,t}var la=function(t,n,e,r,i){this.node=t,this.x0=n,this.y0=e,this.x1=r,this.y1=i};function ha(t){return t[0]}function da(t){return t[1]}function pa(t,n,e){var r=new va(null==n?ha:n,null==e?da:e,NaN,NaN,NaN,NaN);return null==t?r:r.addAll(t)}function va(t,n,e,r,i,o){this._x=t,this._y=n,this._x0=e,this._y0=r,this._x1=i,this._y1=o,this._root=void 0}function ga(t){for(var n={data:t.data},e=n;t=t.next;)e=e.next={data:t.data};return n}var ya=pa.prototype=va.prototype;function ba(t){return t.x+t.vx}function _a(t){return t.y+t.vy}ya.copy=function(){var t,n,e=new va(this._x,this._y,this._x0,this._y0,this._x1,this._y1),r=this._root;if(!r)return e;if(!r.length)return e._root=ga(r),e;for(t=[{source:r,target:e._root=new Array(4)}];r=t.pop();)for(var i=0;i<4;++i)(n=r.source[i])&&(n.length?t.push({source:n,target:r.target[i]=new Array(4)}):r.target[i]=ga(n));return e},ya.add=function(t){var n=+this._x.call(null,t),e=+this._y.call(null,t);return sa(this.cover(n,e),n,e,t)},ya.addAll=function(t){var n,e,r,i,o=t.length,u=new Array(o),a=new Array(o),c=1/0,f=1/0,s=-1/0,l=-1/0;for(e=0;e<o;++e)isNaN(r=+this._x.call(null,n=t[e]))||isNaN(i=+this._y.call(null,n))||(u[e]=r,a[e]=i,r<c&&(c=r),r>s&&(s=r),i<f&&(f=i),i>l&&(l=i));for(s<c&&(c=this._x0,s=this._x1),l<f&&(f=this._y0,l=this._y1),this.cover(c,f).cover(s,l),e=0;e<o;++e)sa(this,u[e],a[e],t[e]);return this},ya.cover=function(t,n){if(isNaN(t=+t)||isNaN(n=+n))return this;var e=this._x0,r=this._y0,i=this._x1,o=this._y1;if(isNaN(e))i=(e=Math.floor(t))+1,o=(r=Math.floor(n))+1;else{if(!(e>t||t>i||r>n||n>o))return this;var u,a,c=i-e,f=this._root;switch(a=(n<(r+o)/2)<<1|t<(e+i)/2){case 0:do{(u=new Array(4))[a]=f,f=u}while(o=r+(c*=2),t>(i=e+c)||n>o);break;case 1:do{(u=new Array(4))[a]=f,f=u}while(o=r+(c*=2),(e=i-c)>t||n>o);break;case 2:do{(u=new Array(4))[a]=f,f=u}while(r=o-(c*=2),t>(i=e+c)||r>n);break;case 3:do{(u=new Array(4))[a]=f,f=u}while(r=o-(c*=2),(e=i-c)>t||r>n)}this._root&&this._root.length&&(this._root=f)}return this._x0=e,this._y0=r,this._x1=i,this._y1=o,this},ya.data=function(){var t=[];return this.visit(function(n){if(!n.length)do{t.push(n.data)}while(n=n.next)}),t},ya.extent=function(t){return arguments.length?this.cover(+t[0][0],+t[0][1]).cover(+t[1][0],+t[1][1]):isNaN(this._x0)?void 0:[[this._x0,this._y0],[this._x1,this._y1]]},ya.find=function(t,n,e){var r,i,o,u,a,c,f,s=this._x0,l=this._y0,h=this._x1,d=this._y1,p=[],v=this._root;for(v&&p.push(new la(v,s,l,h,d)),null==e?e=1/0:(s=t-e,l=n-e,h=t+e,d=n+e,e*=e);c=p.pop();)if(!(!(v=c.node)||(i=c.x0)>h||(o=c.y0)>d||(u=c.x1)<s||(a=c.y1)<l))if(v.length){var g=(i+u)/2,y=(o+a)/2;p.push(new la(v[3],g,y,u,a),new la(v[2],i,y,g,a),new la(v[1],g,o,u,y),new la(v[0],i,o,g,y)),(f=(n>=y)<<1|t>=g)&&(c=p[p.length-1],p[p.length-1]=p[p.length-1-f],p[p.length-1-f]=c)}else{var b=t-+this._x.call(null,v.data),_=n-+this._y.call(null,v.data),m=b*b+_*_;if(m<e){var x=Math.sqrt(e=m);s=t-x,l=n-x,h=t+x,d=n+x,r=v.data}}return r},ya.remove=function(t){if(isNaN(o=+this._x.call(null,t))||isNaN(u=+this._y.call(null,t)))return this;var n,e,r,i,o,u,a,c,f,s,l,h,d=this._root,p=this._x0,v=this._y0,g=this._x1,y=this._y1;if(!d)return this;if(d.length)for(;;){if((f=o>=(a=(p+g)/2))?p=a:g=a,(s=u>=(c=(v+y)/2))?v=c:y=c,n=d,!(d=d[l=s<<1|f]))return this;if(!d.length)break;(n[l+1&3]||n[l+2&3]||n[l+3&3])&&(e=n,h=l)}for(;d.data!==t;)if(r=d,!(d=d.next))return this;return(i=d.next)&&delete d.next,r?(i?r.next=i:delete r.next,this):n?(i?n[l]=i:delete n[l],(d=n[0]||n[1]||n[2]||n[3])&&d===(n[3]||n[2]||n[1]||n[0])&&!d.length&&(e?e[h]=d:this._root=d),this):(this._root=i,this)},ya.removeAll=function(t){for(var n=0,e=t.length;n<e;++n)this.remove(t[n]);return this},ya.root=function(){return this._root},ya.size=function(){var t=0;return this.visit(function(n){if(!n.length)do{++t}while(n=n.next)}),t},ya.visit=function(t){var n,e,r,i,o,u,a=[],c=this._root;for(c&&a.push(new la(c,this._x0,this._y0,this._x1,this._y1));n=a.pop();)if(!t(c=n.node,r=n.x0,i=n.y0,o=n.x1,u=n.y1)&&c.length){var f=(r+o)/2,s=(i+u)/2;(e=c[3])&&a.push(new la(e,f,s,o,u)),(e=c[2])&&a.push(new la(e,r,s,f,u)),(e=c[1])&&a.push(new la(e,f,i,o,s)),(e=c[0])&&a.push(new la(e,r,i,f,s))}return this},ya.visitAfter=function(t){var n,e=[],r=[];for(this._root&&e.push(new la(this._root,this._x0,this._y0,this._x1,this._y1));n=e.pop();){var i=n.node;if(i.length){var o,u=n.x0,a=n.y0,c=n.x1,f=n.y1,s=(u+c)/2,l=(a+f)/2;(o=i[0])&&e.push(new la(o,u,a,s,l)),(o=i[1])&&e.push(new la(o,s,a,c,l)),(o=i[2])&&e.push(new la(o,u,l,s,f)),(o=i[3])&&e.push(new la(o,s,l,c,f))}r.push(n)}for(;n=r.pop();)t(n.node,n.x0,n.y0,n.x1,n.y1);return this},ya.x=function(t){return arguments.length?(this._x=t,this):this._x},ya.y=function(t){return arguments.length?(this._y=t,this):this._y};var ma=function(t){var n,e,r=1,i=1;function o(){for(var t,o,a,c,f,s,l,h=n.length,d=0;d<i;++d)for(o=pa(n,ba,_a).visitAfter(u),t=0;t<h;++t)a=n[t],s=e[a.index],l=s*s,c=a.x+a.vx,f=a.y+a.vy,o.visit(p);function p(t,n,e,i,o){var u=t.data,h=t.r,d=s+h;if(!u)return n>c+d||i<c-d||e>f+d||o<f-d;if(u.index>a.index){var p=c-u.x-u.vx,v=f-u.y-u.vy,g=p*p+v*v;g<d*d&&(0===p&&(g+=(p=fa())*p),0===v&&(g+=(v=fa())*v),g=(d-(g=Math.sqrt(g)))/g*r,a.vx+=(p*=g)*(d=(h*=h)/(l+h)),a.vy+=(v*=g)*d,u.vx-=p*(d=1-d),u.vy-=v*d)}}}function u(t){if(t.data)return t.r=e[t.data.index];for(var n=t.r=0;n<4;++n)t[n]&&t[n].r>t.r&&(t.r=t[n].r)}function a(){if(n){var r,i,o=n.length;for(e=new Array(o),r=0;r<o;++r)i=n[r],e[i.index]=+t(i,r,n)}}return"function"!=typeof t&&(t=ca(null==t?1:+t)),o.initialize=function(t){n=t,a()},o.iterations=function(t){return arguments.length?(i=+t,o):i},o.strength=function(t){return arguments.length?(r=+t,o):r},o.radius=function(n){return arguments.length?(t="function"==typeof n?n:ca(+n),a(),o):t},o};function xa(t){return t.index}function wa(t,n){var e=t.get(n);if(!e)throw new Error("missing: "+n);return e}var Ma=function(t){var n,e,r,i,o,u=xa,a=function(t){return 1/Math.min(i[t.source.index],i[t.target.index])},c=ca(30),f=1;function s(r){for(var i=0,u=t.length;i<f;++i)for(var a,c,s,l,h,d,p,v=0;v<u;++v)c=(a=t[v]).source,l=(s=a.target).x+s.vx-c.x-c.vx||fa(),h=s.y+s.vy-c.y-c.vy||fa(),l*=d=((d=Math.sqrt(l*l+h*h))-e[v])/d*r*n[v],h*=d,s.vx-=l*(p=o[v]),s.vy-=h*p,c.vx+=l*(p=1-p),c.vy+=h*p}function l(){if(r){var a,c,f=r.length,s=t.length,l=Jo(r,u);for(a=0,i=new Array(f);a<s;++a)(c=t[a]).index=a,"object"!=typeof c.source&&(c.source=wa(l,c.source)),"object"!=typeof c.target&&(c.target=wa(l,c.target)),i[c.source.index]=(i[c.source.index]||0)+1,i[c.target.index]=(i[c.target.index]||0)+1;for(a=0,o=new Array(s);a<s;++a)c=t[a],o[a]=i[c.source.index]/(i[c.source.index]+i[c.target.index]);n=new Array(s),h(),e=new Array(s),d()}}function h(){if(r)for(var e=0,i=t.length;e<i;++e)n[e]=+a(t[e],e,t)}function d(){if(r)for(var n=0,i=t.length;n<i;++n)e[n]=+c(t[n],n,t)}return null==t&&(t=[]),s.initialize=function(t){r=t,l()},s.links=function(n){return arguments.length?(t=n,l(),s):t},s.id=function(t){return arguments.length?(u=t,s):u},s.iterations=function(t){return arguments.length?(f=+t,s):f},s.strength=function(t){return arguments.length?(a="function"==typeof t?t:ca(+t),h(),s):a},s.distance=function(t){return arguments.length?(c="function"==typeof t?t:ca(+t),d(),s):c},s};function Sa(t){return t.x}function Aa(t){return t.y}var Ca=10,Na=Math.PI*(3-Math.sqrt(5)),ka=function(t){var n,e=1,r=.001,i=1-Math.pow(r,1/300),o=0,u=.6,a=Jo(),c=Or(s),f=ht("tick","end");function s(){l(),f.call("tick",n),e<r&&(c.stop(),f.call("end",n))}function l(){var n,r,c=t.length;for(e+=(o-e)*i,a.each(function(t){t(e)}),n=0;n<c;++n)null==(r=t[n]).fx?r.x+=r.vx*=u:(r.x=r.fx,r.vx=0),null==r.fy?r.y+=r.vy*=u:(r.y=r.fy,r.vy=0)}function h(){for(var n,e=0,r=t.length;e<r;++e){if((n=t[e]).index=e,isNaN(n.x)||isNaN(n.y)){var i=Ca*Math.sqrt(e),o=e*Na;n.x=i*Math.cos(o),n.y=i*Math.sin(o)}(isNaN(n.vx)||isNaN(n.vy))&&(n.vx=n.vy=0)}}function d(n){return n.initialize&&n.initialize(t),n}return null==t&&(t=[]),h(),n={tick:l,restart:function(){return c.restart(s),n},stop:function(){return c.stop(),n},nodes:function(e){return arguments.length?(t=e,h(),a.each(d),n):t},alpha:function(t){return arguments.length?(e=+t,n):e},alphaMin:function(t){return arguments.length?(r=+t,n):r},alphaDecay:function(t){return arguments.length?(i=+t,n):+i},alphaTarget:function(t){return arguments.length?(o=+t,n):o},velocityDecay:function(t){return arguments.length?(u=1-t,n):1-u},force:function(t,e){return arguments.length>1?(null==e?a.remove(t):a.set(t,d(e)),n):a.get(t)},find:function(n,e,r){var i,o,u,a,c,f=0,s=t.length;for(null==r?r=1/0:r*=r,f=0;f<s;++f)(u=(i=n-(a=t[f]).x)*i+(o=e-a.y)*o)<r&&(c=a,r=u);return c},on:function(t,e){return arguments.length>1?(f.on(t,e),n):f.on(t)}}},Ta=function(){var t,n,e,r,i=ca(-30),o=1,u=1/0,a=.81;function c(r){var i,o=t.length,u=pa(t,Sa,Aa).visitAfter(s);for(e=r,i=0;i<o;++i)n=t[i],u.visit(l)}function f(){if(t){var n,e,o=t.length;for(r=new Array(o),n=0;n<o;++n)e=t[n],r[e.index]=+i(e,n,t)}}function s(t){var n,e,i,o,u,a=0,c=0;if(t.length){for(i=o=u=0;u<4;++u)(n=t[u])&&(e=Math.abs(n.value))&&(a+=n.value,c+=e,i+=e*n.x,o+=e*n.y);t.x=i/c,t.y=o/c}else{(n=t).x=n.data.x,n.y=n.data.y;do{a+=r[n.data.index]}while(n=n.next)}t.value=a}function l(t,i,c,f){if(!t.value)return!0;var s=t.x-n.x,l=t.y-n.y,h=f-i,d=s*s+l*l;if(h*h/a<d)return d<u&&(0===s&&(d+=(s=fa())*s),0===l&&(d+=(l=fa())*l),d<o&&(d=Math.sqrt(o*d)),n.vx+=s*t.value*e/d,n.vy+=l*t.value*e/d),!0;if(!(t.length||d>=u)){(t.data!==n||t.next)&&(0===s&&(d+=(s=fa())*s),0===l&&(d+=(l=fa())*l),d<o&&(d=Math.sqrt(o*d)));do{t.data!==n&&(h=r[t.data.index]*e/d,n.vx+=s*h,n.vy+=l*h)}while(t=t.next)}}return c.initialize=function(n){t=n,f()},c.strength=function(t){return arguments.length?(i="function"==typeof t?t:ca(+t),f(),c):i},c.distanceMin=function(t){return arguments.length?(o=t*t,c):Math.sqrt(o)},c.distanceMax=function(t){return arguments.length?(u=t*t,c):Math.sqrt(u)},c.theta=function(t){return arguments.length?(a=t*t,c):Math.sqrt(a)},c},Ea=function(t,n,e){var r,i,o,u=ca(.1);function a(t){for(var u=0,a=r.length;u<a;++u){var c=r[u],f=c.x-n||1e-6,s=c.y-e||1e-6,l=Math.sqrt(f*f+s*s),h=(o[u]-l)*i[u]*t/l;c.vx+=f*h,c.vy+=s*h}}function c(){if(r){var n,e=r.length;for(i=new Array(e),o=new Array(e),n=0;n<e;++n)o[n]=+t(r[n],n,r),i[n]=isNaN(o[n])?0:+u(r[n],n,r)}}return"function"!=typeof t&&(t=ca(+t)),null==n&&(n=0),null==e&&(e=0),a.initialize=function(t){r=t,c()},a.strength=function(t){return arguments.length?(u="function"==typeof t?t:ca(+t),c(),a):u},a.radius=function(n){return arguments.length?(t="function"==typeof n?n:ca(+n),c(),a):t},a.x=function(t){return arguments.length?(n=+t,a):n},a.y=function(t){return arguments.length?(e=+t,a):e},a},Pa=function(t){var n,e,r,i=ca(.1);function o(t){for(var i,o=0,u=n.length;o<u;++o)(i=n[o]).vx+=(r[o]-i.x)*e[o]*t}function u(){if(n){var o,u=n.length;for(e=new Array(u),r=new Array(u),o=0;o<u;++o)e[o]=isNaN(r[o]=+t(n[o],o,n))?0:+i(n[o],o,n)}}return"function"!=typeof t&&(t=ca(null==t?0:+t)),o.initialize=function(t){n=t,u()},o.strength=function(t){return arguments.length?(i="function"==typeof t?t:ca(+t),u(),o):i},o.x=function(n){return arguments.length?(t="function"==typeof n?n:ca(+n),u(),o):t},o},za=function(t){var n,e,r,i=ca(.1);function o(t){for(var i,o=0,u=n.length;o<u;++o)(i=n[o]).vy+=(r[o]-i.y)*e[o]*t}function u(){if(n){var o,u=n.length;for(e=new Array(u),r=new Array(u),o=0;o<u;++o)e[o]=isNaN(r[o]=+t(n[o],o,n))?0:+i(n[o],o,n)}}return"function"!=typeof t&&(t=ca(null==t?0:+t)),o.initialize=function(t){n=t,u()},o.strength=function(t){return arguments.length?(i="function"==typeof t?t:ca(+t),u(),o):i},o.y=function(n){return arguments.length?(t="function"==typeof n?n:ca(+n),u(),o):t},o},La=function(t,n){if((e=(t=n?t.toExponential(n-1):t.toExponential()).indexOf("e"))<0)return null;var e,r=t.slice(0,e);return[r.length>1?r[0]+r.slice(2):r,+t.slice(e+1)]},Ra=function(t){return(t=La(Math.abs(t)))?t[1]:NaN},Da=/^(?:(.)?([<>=^]))?([+\-( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;function Oa(t){return new qa(t)}function qa(t){if(!(n=Da.exec(t)))throw new Error("invalid format: "+t);var n;this.fill=n[1]||" ",this.align=n[2]||">",this.sign=n[3]||"-",this.symbol=n[4]||"",this.zero=!!n[5],this.width=n[6]&&+n[6],this.comma=!!n[7],this.precision=n[8]&&+n[8].slice(1),this.trim=!!n[9],this.type=n[10]||""}Oa.prototype=qa.prototype,qa.prototype.toString=function(){return this.fill+this.align+this.sign+this.symbol+(this.zero?"0":"")+(null==this.width?"":Math.max(1,0|this.width))+(this.comma?",":"")+(null==this.precision?"":"."+Math.max(0,0|this.precision))+(this.trim?"~":"")+this.type};var Ua,Ba,Ya,Ha,Ia=function(t){t:for(var n,e=t.length,r=1,i=-1;r<e;++r)switch(t[r]){case".":i=n=r;break;case"0":0===i&&(i=r),n=r;break;default:if(i>0){if(!+t[r])break t;i=0}}return i>0?t.slice(0,i)+t.slice(n+1):t},Fa=function(t,n){var e=La(t,n);if(!e)return t+"";var r=e[0],i=e[1];return i<0?"0."+new Array(-i).join("0")+r:r.length>i+1?r.slice(0,i+1)+"."+r.slice(i+1):r+new Array(i-r.length+2).join("0")},ja={"%":function(t,n){return(100*t).toFixed(n)},b:function(t){return Math.round(t).toString(2)},c:function(t){return t+""},d:function(t){return Math.round(t).toString(10)},e:function(t,n){return t.toExponential(n)},f:function(t,n){return t.toFixed(n)},g:function(t,n){return t.toPrecision(n)},o:function(t){return Math.round(t).toString(8)},p:function(t,n){return Fa(100*t,n)},r:Fa,s:function(t,n){var e=La(t,n);if(!e)return t+"";var r=e[0],i=e[1],o=i-(Ua=3*Math.max(-8,Math.min(8,Math.floor(i/3))))+1,u=r.length;return o===u?r:o>u?r+new Array(o-u+1).join("0"):o>0?r.slice(0,o)+"."+r.slice(o):"0."+new Array(1-o).join("0")+La(t,Math.max(0,n+o-1))[0]},X:function(t){return Math.round(t).toString(16).toUpperCase()},x:function(t){return Math.round(t).toString(16)}},Ga=function(t){return t},Xa=["y","z","a","f","p","n","µ","m","","k","M","G","T","P","E","Z","Y"],Va=function(t){var n=t.grouping&&t.thousands?function(t,n){return function(e,r){for(var i=e.length,o=[],u=0,a=t[0],c=0;i>0&&a>0&&(c+a+1>r&&(a=Math.max(1,r-c)),o.push(e.substring(i-=a,i+a)),!((c+=a+1)>r));)a=t[u=(u+1)%t.length];return o.reverse().join(n)}}(t.grouping,t.thousands):Ga,e=t.currency,r=t.decimal,i=t.numerals?function(t){return function(n){return n.replace(/[0-9]/g,function(n){return t[+n]})}}(t.numerals):Ga,o=t.percent||"%";function u(t){var u=(t=Oa(t)).fill,a=t.align,c=t.sign,f=t.symbol,s=t.zero,l=t.width,h=t.comma,d=t.precision,p=t.trim,v=t.type;"n"===v?(h=!0,v="g"):ja[v]||(null==d&&(d=12),p=!0,v="g"),(s||"0"===u&&"="===a)&&(s=!0,u="0",a="=");var g="$"===f?e[0]:"#"===f&&/[boxX]/.test(v)?"0"+v.toLowerCase():"",y="$"===f?e[1]:/[%p]/.test(v)?o:"",b=ja[v],_=/[defgprs%]/.test(v);function m(t){var e,o,f,m=g,x=y;if("c"===v)x=b(t)+x,t="";else{var w=(t=+t)<0;if(t=b(Math.abs(t),d),p&&(t=Ia(t)),w&&0==+t&&(w=!1),m=(w?"("===c?c:"-":"-"===c||"("===c?"":c)+m,x=("s"===v?Xa[8+Ua/3]:"")+x+(w&&"("===c?")":""),_)for(e=-1,o=t.length;++e<o;)if(48>(f=t.charCodeAt(e))||f>57){x=(46===f?r+t.slice(e+1):t.slice(e))+x,t=t.slice(0,e);break}}h&&!s&&(t=n(t,1/0));var M=m.length+t.length+x.length,S=M<l?new Array(l-M+1).join(u):"";switch(h&&s&&(t=n(S+t,S.length?l-x.length:1/0),S=""),a){case"<":t=m+t+x+S;break;case"=":t=m+S+t+x;break;case"^":t=S.slice(0,M=S.length>>1)+m+t+x+S.slice(M);break;default:t=S+m+t+x}return i(t)}return d=null==d?6:/[gprs]/.test(v)?Math.max(1,Math.min(21,d)):Math.max(0,Math.min(20,d)),m.toString=function(){return t+""},m}return{format:u,formatPrefix:function(t,n){var e=u(((t=Oa(t)).type="f",t)),r=3*Math.max(-8,Math.min(8,Math.floor(Ra(n)/3))),i=Math.pow(10,-r),o=Xa[8+r/3];return function(t){return e(i*t)+o}}}};function Wa(t){return Ba=Va(t),Ya=Ba.format,Ha=Ba.formatPrefix,Ba}Wa({decimal:".",thousands:",",grouping:[3],currency:["$",""]});var $a=function(t){return Math.max(0,-Ra(Math.abs(t)))},Za=function(t,n){return Math.max(0,3*Math.max(-8,Math.min(8,Math.floor(Ra(n)/3)))-Ra(Math.abs(t)))},Qa=function(t,n){return t=Math.abs(t),n=Math.abs(n)-t,Math.max(0,Ra(n)-Ra(t))+1},Ja=function(){return new Ka};function Ka(){this.reset()}Ka.prototype={constructor:Ka,reset:function(){this.s=this.t=0},add:function(t){nc(tc,t,this.t),nc(this,tc.s,this.s),this.s?this.t+=tc.t:this.s=tc.t},valueOf:function(){return this.s}};var tc=new Ka;function nc(t,n,e){var r=t.s=n+e,i=r-n,o=r-i;t.t=n-o+(e-i)}var ec=1e-6,rc=Math.PI,ic=rc/2,oc=rc/4,uc=2*rc,ac=180/rc,cc=rc/180,fc=Math.abs,sc=Math.atan,lc=Math.atan2,hc=Math.cos,dc=Math.ceil,pc=Math.exp,vc=(Math.floor,Math.log),gc=Math.pow,yc=Math.sin,bc=Math.sign||function(t){return t>0?1:t<0?-1:0},_c=Math.sqrt,mc=Math.tan;function xc(t){return t>1?0:t<-1?rc:Math.acos(t)}function wc(t){return t>1?ic:t<-1?-ic:Math.asin(t)}function Mc(t){return(t=yc(t/2))*t}function Sc(){}function Ac(t,n){t&&Nc.hasOwnProperty(t.type)&&Nc[t.type](t,n)}var Cc={Feature:function(t,n){Ac(t.geometry,n)},FeatureCollection:function(t,n){for(var e=t.features,r=-1,i=e.length;++r<i;)Ac(e[r].geometry,n)}},Nc={Sphere:function(t,n){n.sphere()},Point:function(t,n){t=t.coordinates,n.point(t[0],t[1],t[2])},MultiPoint:function(t,n){for(var e=t.coordinates,r=-1,i=e.length;++r<i;)t=e[r],n.point(t[0],t[1],t[2])},LineString:function(t,n){kc(t.coordinates,n,0)},MultiLineString:function(t,n){for(var e=t.coordinates,r=-1,i=e.length;++r<i;)kc(e[r],n,0)},Polygon:function(t,n){Tc(t.coordinates,n)},MultiPolygon:function(t,n){for(var e=t.coordinates,r=-1,i=e.length;++r<i;)Tc(e[r],n)},GeometryCollection:function(t,n){for(var e=t.geometries,r=-1,i=e.length;++r<i;)Ac(e[r],n)}};function kc(t,n,e){var r,i=-1,o=t.length-e;for(n.lineStart();++i<o;)r=t[i],n.point(r[0],r[1],r[2]);n.lineEnd()}function Tc(t,n){var e=-1,r=t.length;for(n.polygonStart();++e<r;)kc(t[e],n,1);n.polygonEnd()}var Ec,Pc,zc,Lc,Rc,Dc=function(t,n){t&&Cc.hasOwnProperty(t.type)?Cc[t.type](t,n):Ac(t,n)},Oc=Ja(),qc=Ja(),Uc={point:Sc,lineStart:Sc,lineEnd:Sc,polygonStart:function(){Oc.reset(),Uc.lineStart=Bc,Uc.lineEnd=Yc},polygonEnd:function(){var t=+Oc;qc.add(t<0?uc+t:t),this.lineStart=this.lineEnd=this.point=Sc},sphere:function(){qc.add(uc)}};function Bc(){Uc.point=Hc}function Yc(){Ic(Ec,Pc)}function Hc(t,n){Uc.point=Ic,Ec=t,Pc=n,zc=t*=cc,Lc=hc(n=(n*=cc)/2+oc),Rc=yc(n)}function Ic(t,n){n=(n*=cc)/2+oc;var e=(t*=cc)-zc,r=e>=0?1:-1,i=r*e,o=hc(n),u=yc(n),a=Rc*u,c=Lc*o+a*hc(i),f=a*r*yc(i);Oc.add(lc(f,c)),zc=t,Lc=o,Rc=u}var Fc=function(t){return qc.reset(),Dc(t,Uc),2*qc};function jc(t){return[lc(t[1],t[0]),wc(t[2])]}function Gc(t){var n=t[0],e=t[1],r=hc(e);return[r*hc(n),r*yc(n),yc(e)]}function Xc(t,n){return t[0]*n[0]+t[1]*n[1]+t[2]*n[2]}function Vc(t,n){return[t[1]*n[2]-t[2]*n[1],t[2]*n[0]-t[0]*n[2],t[0]*n[1]-t[1]*n[0]]}function Wc(t,n){t[0]+=n[0],t[1]+=n[1],t[2]+=n[2]}function $c(t,n){return[t[0]*n,t[1]*n,t[2]*n]}function Zc(t){var n=_c(t[0]*t[0]+t[1]*t[1]+t[2]*t[2]);t[0]/=n,t[1]/=n,t[2]/=n}var Qc,Jc,Kc,tf,nf,ef,rf,of,uf,af,cf=Ja(),ff={point:sf,lineStart:hf,lineEnd:df,polygonStart:function(){ff.point=pf,ff.lineStart=vf,ff.lineEnd=gf,cf.reset(),Uc.polygonStart()},polygonEnd:function(){Uc.polygonEnd(),ff.point=sf,ff.lineStart=hf,ff.lineEnd=df,Oc<0?(Qc=-(Kc=180),Jc=-(tf=90)):cf>ec?tf=90:cf<-ec&&(Jc=-90),af[0]=Qc,af[1]=Kc}};function sf(t,n){uf.push(af=[Qc=t,Kc=t]),n<Jc&&(Jc=n),n>tf&&(tf=n)}function lf(t,n){var e=Gc([t*cc,n*cc]);if(of){var r=Vc(of,e),i=Vc([r[1],-r[0],0],r);Zc(i),i=jc(i);var o,u=t-nf,a=u>0?1:-1,c=i[0]*ac*a,f=fc(u)>180;f^(a*nf<c&&c<a*t)?(o=i[1]*ac)>tf&&(tf=o):f^(a*nf<(c=(c+360)%360-180)&&c<a*t)?(o=-i[1]*ac)<Jc&&(Jc=o):(n<Jc&&(Jc=n),n>tf&&(tf=n)),f?t<nf?yf(Qc,t)>yf(Qc,Kc)&&(Kc=t):yf(t,Kc)>yf(Qc,Kc)&&(Qc=t):Kc>=Qc?(t<Qc&&(Qc=t),t>Kc&&(Kc=t)):t>nf?yf(Qc,t)>yf(Qc,Kc)&&(Kc=t):yf(t,Kc)>yf(Qc,Kc)&&(Qc=t)}else uf.push(af=[Qc=t,Kc=t]);n<Jc&&(Jc=n),n>tf&&(tf=n),of=e,nf=t}function hf(){ff.point=lf}function df(){af[0]=Qc,af[1]=Kc,ff.point=sf,of=null}function pf(t,n){if(of){var e=t-nf;cf.add(fc(e)>180?e+(e>0?360:-360):e)}else ef=t,rf=n;Uc.point(t,n),lf(t,n)}function vf(){Uc.lineStart()}function gf(){pf(ef,rf),Uc.lineEnd(),fc(cf)>ec&&(Qc=-(Kc=180)),af[0]=Qc,af[1]=Kc,of=null}function yf(t,n){return(n-=t)<0?n+360:n}function bf(t,n){return t[0]-n[0]}function _f(t,n){return t[0]<=t[1]?t[0]<=n&&n<=t[1]:n<t[0]||t[1]<n}var mf,xf,wf,Mf,Sf,Af,Cf,Nf,kf,Tf,Ef,Pf,zf,Lf,Rf,Df,Of=function(t){var n,e,r,i,o,u,a;if(tf=Kc=-(Qc=Jc=1/0),uf=[],Dc(t,ff),e=uf.length){for(uf.sort(bf),n=1,o=[r=uf[0]];n<e;++n)_f(r,(i=uf[n])[0])||_f(r,i[1])?(yf(r[0],i[1])>yf(r[0],r[1])&&(r[1]=i[1]),yf(i[0],r[1])>yf(r[0],r[1])&&(r[0]=i[0])):o.push(r=i);for(u=-1/0,n=0,r=o[e=o.length-1];n<=e;r=i,++n)i=o[n],(a=yf(r[1],i[0]))>u&&(u=a,Qc=i[0],Kc=r[1])}return uf=af=null,Qc===1/0||Jc===1/0?[[NaN,NaN],[NaN,NaN]]:[[Qc,Jc],[Kc,tf]]},qf={sphere:Sc,point:Uf,lineStart:Yf,lineEnd:Ff,polygonStart:function(){qf.lineStart=jf,qf.lineEnd=Gf},polygonEnd:function(){qf.lineStart=Yf,qf.lineEnd=Ff}};function Uf(t,n){t*=cc;var e=hc(n*=cc);Bf(e*hc(t),e*yc(t),yc(n))}function Bf(t,n,e){wf+=(t-wf)/++mf,Mf+=(n-Mf)/mf,Sf+=(e-Sf)/mf}function Yf(){qf.point=Hf}function Hf(t,n){t*=cc;var e=hc(n*=cc);Lf=e*hc(t),Rf=e*yc(t),Df=yc(n),qf.point=If,Bf(Lf,Rf,Df)}function If(t,n){t*=cc;var e=hc(n*=cc),r=e*hc(t),i=e*yc(t),o=yc(n),u=lc(_c((u=Rf*o-Df*i)*u+(u=Df*r-Lf*o)*u+(u=Lf*i-Rf*r)*u),Lf*r+Rf*i+Df*o);xf+=u,Af+=u*(Lf+(Lf=r)),Cf+=u*(Rf+(Rf=i)),Nf+=u*(Df+(Df=o)),Bf(Lf,Rf,Df)}function Ff(){qf.point=Uf}function jf(){qf.point=Xf}function Gf(){Vf(Pf,zf),qf.point=Uf}function Xf(t,n){Pf=t,zf=n,t*=cc,n*=cc,qf.point=Vf;var e=hc(n);Lf=e*hc(t),Rf=e*yc(t),Df=yc(n),Bf(Lf,Rf,Df)}function Vf(t,n){t*=cc;var e=hc(n*=cc),r=e*hc(t),i=e*yc(t),o=yc(n),u=Rf*o-Df*i,a=Df*r-Lf*o,c=Lf*i-Rf*r,f=_c(u*u+a*a+c*c),s=wc(f),l=f&&-s/f;kf+=l*u,Tf+=l*a,Ef+=l*c,xf+=s,Af+=s*(Lf+(Lf=r)),Cf+=s*(Rf+(Rf=i)),Nf+=s*(Df+(Df=o)),Bf(Lf,Rf,Df)}var Wf=function(t){mf=xf=wf=Mf=Sf=Af=Cf=Nf=kf=Tf=Ef=0,Dc(t,qf);var n=kf,e=Tf,r=Ef,i=n*n+e*e+r*r;return i<1e-12&&(n=Af,e=Cf,r=Nf,xf<ec&&(n=wf,e=Mf,r=Sf),(i=n*n+e*e+r*r)<1e-12)?[NaN,NaN]:[lc(e,n)*ac,wc(r/_c(i))*ac]},$f=function(t){return function(){return t}},Zf=function(t,n){function e(e,r){return e=t(e,r),n(e[0],e[1])}return t.invert&&n.invert&&(e.invert=function(e,r){return(e=n.invert(e,r))&&t.invert(e[0],e[1])}),e};function Qf(t,n){return[t>rc?t-uc:t<-rc?t+uc:t,n]}function Jf(t,n,e){return(t%=uc)?n||e?Zf(ts(t),ns(n,e)):ts(t):n||e?ns(n,e):Qf}function Kf(t){return function(n,e){return[(n+=t)>rc?n-uc:n<-rc?n+uc:n,e]}}function ts(t){var n=Kf(t);return n.invert=Kf(-t),n}function ns(t,n){var e=hc(t),r=yc(t),i=hc(n),o=yc(n);function u(t,n){var u=hc(n),a=hc(t)*u,c=yc(t)*u,f=yc(n),s=f*e+a*r;return[lc(c*i-s*o,a*e-f*r),wc(s*i+c*o)]}return u.invert=function(t,n){var u=hc(n),a=hc(t)*u,c=yc(t)*u,f=yc(n),s=f*i-c*o;return[lc(c*i+f*o,a*e+s*r),wc(s*e-a*r)]},u}Qf.invert=Qf;var es=function(t){function n(n){return(n=t(n[0]*cc,n[1]*cc))[0]*=ac,n[1]*=ac,n}return t=Jf(t[0]*cc,t[1]*cc,t.length>2?t[2]*cc:0),n.invert=function(n){return(n=t.invert(n[0]*cc,n[1]*cc))[0]*=ac,n[1]*=ac,n},n};function rs(t,n,e,r,i,o){if(e){var u=hc(n),a=yc(n),c=r*e;null==i?(i=n+r*uc,o=n-c/2):(i=is(u,i),o=is(u,o),(r>0?i<o:i>o)&&(i+=r*uc));for(var f,s=i;r>0?s>o:s<o;s-=c)f=jc([u,-a*hc(s),-a*yc(s)]),t.point(f[0],f[1])}}function is(t,n){(n=Gc(n))[0]-=t,Zc(n);var e=xc(-n[1]);return((-n[2]<0?-e:e)+uc-ec)%uc}var os=function(){var t,n,e=$f([0,0]),r=$f(90),i=$f(6),o={point:function(e,r){t.push(e=n(e,r)),e[0]*=ac,e[1]*=ac}};function u(){var u=e.apply(this,arguments),a=r.apply(this,arguments)*cc,c=i.apply(this,arguments)*cc;return t=[],n=Jf(-u[0]*cc,-u[1]*cc,0).invert,rs(o,a,c,1),u={type:"Polygon",coordinates:[t]},t=n=null,u}return u.center=function(t){return arguments.length?(e="function"==typeof t?t:$f([+t[0],+t[1]]),u):e},u.radius=function(t){return arguments.length?(r="function"==typeof t?t:$f(+t),u):r},u.precision=function(t){return arguments.length?(i="function"==typeof t?t:$f(+t),u):i},u},us=function(){var t,n=[];return{point:function(n,e){t.push([n,e])},lineStart:function(){n.push(t=[])},lineEnd:Sc,rejoin:function(){n.length>1&&n.push(n.pop().concat(n.shift()))},result:function(){var e=n;return n=[],t=null,e}}},as=function(t,n){return fc(t[0]-n[0])<ec&&fc(t[1]-n[1])<ec};function cs(t,n,e,r){this.x=t,this.z=n,this.o=e,this.e=r,this.v=!1,this.n=this.p=null}var fs=function(t,n,e,r,i){var o,u,a=[],c=[];if(t.forEach(function(t){if(!((n=t.length-1)<=0)){var n,e,r=t[0],u=t[n];if(as(r,u)){for(i.lineStart(),o=0;o<n;++o)i.point((r=t[o])[0],r[1]);i.lineEnd()}else a.push(e=new cs(r,t,null,!0)),c.push(e.o=new cs(r,null,e,!1)),a.push(e=new cs(u,t,null,!1)),c.push(e.o=new cs(u,null,e,!0))}}),a.length){for(c.sort(n),ss(a),ss(c),o=0,u=c.length;o<u;++o)c[o].e=e=!e;for(var f,s,l=a[0];;){for(var h=l,d=!0;h.v;)if((h=h.n)===l)return;f=h.z,i.lineStart();do{if(h.v=h.o.v=!0,h.e){if(d)for(o=0,u=f.length;o<u;++o)i.point((s=f[o])[0],s[1]);else r(h.x,h.n.x,1,i);h=h.n}else{if(d)for(f=h.p.z,o=f.length-1;o>=0;--o)i.point((s=f[o])[0],s[1]);else r(h.x,h.p.x,-1,i);h=h.p}f=(h=h.o).z,d=!d}while(!h.v);i.lineEnd()}}};function ss(t){if(n=t.length){for(var n,e,r=0,i=t[0];++r<n;)i.n=e=t[r],e.p=i,i=e;i.n=e=t[0],e.p=i}}var ls=Ja(),hs=function(t,n){var e=n[0],r=n[1],i=yc(r),o=[yc(e),-hc(e),0],u=0,a=0;ls.reset(),1===i?r=ic+ec:-1===i&&(r=-ic-ec);for(var c=0,f=t.length;c<f;++c)if(l=(s=t[c]).length)for(var s,l,h=s[l-1],d=h[0],p=h[1]/2+oc,v=yc(p),g=hc(p),y=0;y<l;++y,d=_,v=x,g=w,h=b){var b=s[y],_=b[0],m=b[1]/2+oc,x=yc(m),w=hc(m),M=_-d,S=M>=0?1:-1,A=S*M,C=A>rc,N=v*x;if(ls.add(lc(N*S*yc(A),g*w+N*hc(A))),u+=C?M+S*uc:M,C^d>=e^_>=e){var k=Vc(Gc(h),Gc(b));Zc(k);var T=Vc(o,k);Zc(T);var E=(C^M>=0?-1:1)*wc(T[2]);(r>E||r===E&&(k[0]||k[1]))&&(a+=C^M>=0?1:-1)}}return(u<-ec||u<ec&&ls<-ec)^1&a},ds=function(t,n,e,r){return function(i){var o,u,a,c=n(i),f=us(),s=n(f),l=!1,h={point:d,lineStart:v,lineEnd:g,polygonStart:function(){h.point=y,h.lineStart=b,h.lineEnd=_,u=[],o=[]},polygonEnd:function(){h.point=d,h.lineStart=v,h.lineEnd=g,u=q(u);var t=hs(o,r);u.length?(l||(i.polygonStart(),l=!0),fs(u,vs,t,e,i)):t&&(l||(i.polygonStart(),l=!0),i.lineStart(),e(null,null,1,i),i.lineEnd()),l&&(i.polygonEnd(),l=!1),u=o=null},sphere:function(){i.polygonStart(),i.lineStart(),e(null,null,1,i),i.lineEnd(),i.polygonEnd()}};function d(n,e){t(n,e)&&i.point(n,e)}function p(t,n){c.point(t,n)}function v(){h.point=p,c.lineStart()}function g(){h.point=d,c.lineEnd()}function y(t,n){a.push([t,n]),s.point(t,n)}function b(){s.lineStart(),a=[]}function _(){y(a[0][0],a[0][1]),s.lineEnd();var t,n,e,r,c=s.clean(),h=f.result(),d=h.length;if(a.pop(),o.push(a),a=null,d)if(1&c){if((n=(e=h[0]).length-1)>0){for(l||(i.polygonStart(),l=!0),i.lineStart(),t=0;t<n;++t)i.point((r=e[t])[0],r[1]);i.lineEnd()}}else d>1&&2&c&&h.push(h.pop().concat(h.shift())),u.push(h.filter(ps))}return h}};function ps(t){return t.length>1}function vs(t,n){return((t=t.x)[0]<0?t[1]-ic-ec:ic-t[1])-((n=n.x)[0]<0?n[1]-ic-ec:ic-n[1])}var gs=ds(function(){return!0},function(t){var n,e=NaN,r=NaN,i=NaN;return{lineStart:function(){t.lineStart(),n=1},point:function(o,u){var a=o>0?rc:-rc,c=fc(o-e);fc(c-rc)<ec?(t.point(e,r=(r+u)/2>0?ic:-ic),t.point(i,r),t.lineEnd(),t.lineStart(),t.point(a,r),t.point(o,r),n=0):i!==a&&c>=rc&&(fc(e-i)<ec&&(e-=i*ec),fc(o-a)<ec&&(o-=a*ec),r=function(t,n,e,r){var i,o,u=yc(t-e);return fc(u)>ec?sc((yc(n)*(o=hc(r))*yc(e)-yc(r)*(i=hc(n))*yc(t))/(i*o*u)):(n+r)/2}(e,r,o,u),t.point(i,r),t.lineEnd(),t.lineStart(),t.point(a,r),n=0),t.point(e=o,r=u),i=a},lineEnd:function(){t.lineEnd(),e=r=NaN},clean:function(){return 2-n}}},function(t,n,e,r){var i;if(null==t)i=e*ic,r.point(-rc,i),r.point(0,i),r.point(rc,i),r.point(rc,0),r.point(rc,-i),r.point(0,-i),r.point(-rc,-i),r.point(-rc,0),r.point(-rc,i);else if(fc(t[0]-n[0])>ec){var o=t[0]<n[0]?rc:-rc;i=e*o/2,r.point(-o,i),r.point(0,i),r.point(o,i)}else r.point(n[0],n[1])},[-rc,-ic]);var ys=function(t){var n=hc(t),e=6*cc,r=n>0,i=fc(n)>ec;function o(t,e){return hc(t)*hc(e)>n}function u(t,e,r){var i=[1,0,0],o=Vc(Gc(t),Gc(e)),u=Xc(o,o),a=o[0],c=u-a*a;if(!c)return!r&&t;var f=n*u/c,s=-n*a/c,l=Vc(i,o),h=$c(i,f);Wc(h,$c(o,s));var d=l,p=Xc(h,d),v=Xc(d,d),g=p*p-v*(Xc(h,h)-1);if(!(g<0)){var y=_c(g),b=$c(d,(-p-y)/v);if(Wc(b,h),b=jc(b),!r)return b;var _,m=t[0],x=e[0],w=t[1],M=e[1];x<m&&(_=m,m=x,x=_);var S=x-m,A=fc(S-rc)<ec;if(!A&&M<w&&(_=w,w=M,M=_),A||S<ec?A?w+M>0^b[1]<(fc(b[0]-m)<ec?w:M):w<=b[1]&&b[1]<=M:S>rc^(m<=b[0]&&b[0]<=x)){var C=$c(d,(-p+y)/v);return Wc(C,h),[b,jc(C)]}}}function a(n,e){var i=r?t:rc-t,o=0;return n<-i?o|=1:n>i&&(o|=2),e<-i?o|=4:e>i&&(o|=8),o}return ds(o,function(t){var n,e,c,f,s;return{lineStart:function(){f=c=!1,s=1},point:function(l,h){var d,p=[l,h],v=o(l,h),g=r?v?0:a(l,h):v?a(l+(l<0?rc:-rc),h):0;if(!n&&(f=c=v)&&t.lineStart(),v!==c&&(!(d=u(n,p))||as(n,d)||as(p,d))&&(p[0]+=ec,p[1]+=ec,v=o(p[0],p[1])),v!==c)s=0,v?(t.lineStart(),d=u(p,n),t.point(d[0],d[1])):(d=u(n,p),t.point(d[0],d[1]),t.lineEnd()),n=d;else if(i&&n&&r^v){var y;g&e||!(y=u(p,n,!0))||(s=0,r?(t.lineStart(),t.point(y[0][0],y[0][1]),t.point(y[1][0],y[1][1]),t.lineEnd()):(t.point(y[1][0],y[1][1]),t.lineEnd(),t.lineStart(),t.point(y[0][0],y[0][1])))}!v||n&&as(n,p)||t.point(p[0],p[1]),n=p,c=v,e=g},lineEnd:function(){c&&t.lineEnd(),n=null},clean:function(){return s|(f&&c)<<1}}},function(n,r,i,o){rs(o,t,e,i,n,r)},r?[0,-t]:[-rc,t-rc])},bs=function(t,n,e,r,i,o){var u,a=t[0],c=t[1],f=0,s=1,l=n[0]-a,h=n[1]-c;if(u=e-a,l||!(u>0)){if(u/=l,l<0){if(u<f)return;u<s&&(s=u)}else if(l>0){if(u>s)return;u>f&&(f=u)}if(u=i-a,l||!(u<0)){if(u/=l,l<0){if(u>s)return;u>f&&(f=u)}else if(l>0){if(u<f)return;u<s&&(s=u)}if(u=r-c,h||!(u>0)){if(u/=h,h<0){if(u<f)return;u<s&&(s=u)}else if(h>0){if(u>s)return;u>f&&(f=u)}if(u=o-c,h||!(u<0)){if(u/=h,h<0){if(u>s)return;u>f&&(f=u)}else if(h>0){if(u<f)return;u<s&&(s=u)}return f>0&&(t[0]=a+f*l,t[1]=c+f*h),s<1&&(n[0]=a+s*l,n[1]=c+s*h),!0}}}}},_s=1e9,ms=-_s;function xs(t,n,e,r){function i(i,o){return t<=i&&i<=e&&n<=o&&o<=r}function o(i,o,a,f){var s=0,l=0;if(null==i||(s=u(i,a))!==(l=u(o,a))||c(i,o)<0^a>0)do{f.point(0===s||3===s?t:e,s>1?r:n)}while((s=(s+a+4)%4)!==l);else f.point(o[0],o[1])}function u(r,i){return fc(r[0]-t)<ec?i>0?0:3:fc(r[0]-e)<ec?i>0?2:1:fc(r[1]-n)<ec?i>0?1:0:i>0?3:2}function a(t,n){return c(t.x,n.x)}function c(t,n){var e=u(t,1),r=u(n,1);return e!==r?e-r:0===e?n[1]-t[1]:1===e?t[0]-n[0]:2===e?t[1]-n[1]:n[0]-t[0]}return function(u){var c,f,s,l,h,d,p,v,g,y,b,_=u,m=us(),x={point:w,lineStart:function(){x.point=M,f&&f.push(s=[]);y=!0,g=!1,p=v=NaN},lineEnd:function(){c&&(M(l,h),d&&g&&m.rejoin(),c.push(m.result()));x.point=w,g&&_.lineEnd()},polygonStart:function(){_=m,c=[],f=[],b=!0},polygonEnd:function(){var n=function(){for(var n=0,e=0,i=f.length;e<i;++e)for(var o,u,a=f[e],c=1,s=a.length,l=a[0],h=l[0],d=l[1];c<s;++c)o=h,u=d,l=a[c],h=l[0],d=l[1],u<=r?d>r&&(h-o)*(r-u)>(d-u)*(t-o)&&++n:d<=r&&(h-o)*(r-u)<(d-u)*(t-o)&&--n;return n}(),e=b&&n,i=(c=q(c)).length;(e||i)&&(u.polygonStart(),e&&(u.lineStart(),o(null,null,1,u),u.lineEnd()),i&&fs(c,a,n,o,u),u.polygonEnd());_=u,c=f=s=null}};function w(t,n){i(t,n)&&_.point(t,n)}function M(o,u){var a=i(o,u);if(f&&s.push([o,u]),y)l=o,h=u,d=a,y=!1,a&&(_.lineStart(),_.point(o,u));else if(a&&g)_.point(o,u);else{var c=[p=Math.max(ms,Math.min(_s,p)),v=Math.max(ms,Math.min(_s,v))],m=[o=Math.max(ms,Math.min(_s,o)),u=Math.max(ms,Math.min(_s,u))];bs(c,m,t,n,e,r)?(g||(_.lineStart(),_.point(c[0],c[1])),_.point(m[0],m[1]),a||_.lineEnd(),b=!1):a&&(_.lineStart(),_.point(o,u),b=!1)}p=o,v=u,g=a}return x}}var ws,Ms,Ss,As=function(){var t,n,e,r=0,i=0,o=960,u=500;return e={stream:function(e){return t&&n===e?t:t=xs(r,i,o,u)(n=e)},extent:function(a){return arguments.length?(r=+a[0][0],i=+a[0][1],o=+a[1][0],u=+a[1][1],t=n=null,e):[[r,i],[o,u]]}}},Cs=Ja(),Ns={sphere:Sc,point:Sc,lineStart:function(){Ns.point=Ts,Ns.lineEnd=ks},lineEnd:Sc,polygonStart:Sc,polygonEnd:Sc};function ks(){Ns.point=Ns.lineEnd=Sc}function Ts(t,n){ws=t*=cc,Ms=yc(n*=cc),Ss=hc(n),Ns.point=Es}function Es(t,n){t*=cc;var e=yc(n*=cc),r=hc(n),i=fc(t-ws),o=hc(i),u=r*yc(i),a=Ss*e-Ms*r*o,c=Ms*e+Ss*r*o;Cs.add(lc(_c(u*u+a*a),c)),ws=t,Ms=e,Ss=r}var Ps=function(t){return Cs.reset(),Dc(t,Ns),+Cs},zs=[null,null],Ls={type:"LineString",coordinates:zs},Rs=function(t,n){return zs[0]=t,zs[1]=n,Ps(Ls)},Ds={Feature:function(t,n){return qs(t.geometry,n)},FeatureCollection:function(t,n){for(var e=t.features,r=-1,i=e.length;++r<i;)if(qs(e[r].geometry,n))return!0;return!1}},Os={Sphere:function(){return!0},Point:function(t,n){return Us(t.coordinates,n)},MultiPoint:function(t,n){for(var e=t.coordinates,r=-1,i=e.length;++r<i;)if(Us(e[r],n))return!0;return!1},LineString:function(t,n){return Bs(t.coordinates,n)},MultiLineString:function(t,n){for(var e=t.coordinates,r=-1,i=e.length;++r<i;)if(Bs(e[r],n))return!0;return!1},Polygon:function(t,n){return Ys(t.coordinates,n)},MultiPolygon:function(t,n){for(var e=t.coordinates,r=-1,i=e.length;++r<i;)if(Ys(e[r],n))return!0;return!1},GeometryCollection:function(t,n){for(var e=t.geometries,r=-1,i=e.length;++r<i;)if(qs(e[r],n))return!0;return!1}};function qs(t,n){return!(!t||!Os.hasOwnProperty(t.type))&&Os[t.type](t,n)}function Us(t,n){return 0===Rs(t,n)}function Bs(t,n){var e=Rs(t[0],t[1]);return Rs(t[0],n)+Rs(n,t[1])<=e+ec}function Ys(t,n){return!!hs(t.map(Hs),Is(n))}function Hs(t){return(t=t.map(Is)).pop(),t}function Is(t){return[t[0]*cc,t[1]*cc]}var Fs=function(t,n){return(t&&Ds.hasOwnProperty(t.type)?Ds[t.type]:qs)(t,n)};function js(t,n,e){var r=w(t,n-ec,e).concat(n);return function(t){return r.map(function(n){return[t,n]})}}function Gs(t,n,e){var r=w(t,n-ec,e).concat(n);return function(t){return r.map(function(n){return[n,t]})}}function Xs(){var t,n,e,r,i,o,u,a,c,f,s,l,h=10,d=h,p=90,v=360,g=2.5;function y(){return{type:"MultiLineString",coordinates:b()}}function b(){return w(dc(r/p)*p,e,p).map(s).concat(w(dc(a/v)*v,u,v).map(l)).concat(w(dc(n/h)*h,t,h).filter(function(t){return fc(t%p)>ec}).map(c)).concat(w(dc(o/d)*d,i,d).filter(function(t){return fc(t%v)>ec}).map(f))}return y.lines=function(){return b().map(function(t){return{type:"LineString",coordinates:t}})},y.outline=function(){return{type:"Polygon",coordinates:[s(r).concat(l(u).slice(1),s(e).reverse().slice(1),l(a).reverse().slice(1))]}},y.extent=function(t){return arguments.length?y.extentMajor(t).extentMinor(t):y.extentMinor()},y.extentMajor=function(t){return arguments.length?(r=+t[0][0],e=+t[1][0],a=+t[0][1],u=+t[1][1],r>e&&(t=r,r=e,e=t),a>u&&(t=a,a=u,u=t),y.precision(g)):[[r,a],[e,u]]},y.extentMinor=function(e){return arguments.length?(n=+e[0][0],t=+e[1][0],o=+e[0][1],i=+e[1][1],n>t&&(e=n,n=t,t=e),o>i&&(e=o,o=i,i=e),y.precision(g)):[[n,o],[t,i]]},y.step=function(t){return arguments.length?y.stepMajor(t).stepMinor(t):y.stepMinor()},y.stepMajor=function(t){return arguments.length?(p=+t[0],v=+t[1],y):[p,v]},y.stepMinor=function(t){return arguments.length?(h=+t[0],d=+t[1],y):[h,d]},y.precision=function(h){return arguments.length?(g=+h,c=js(o,i,90),f=Gs(n,t,g),s=js(a,u,90),l=Gs(r,e,g),y):g},y.extentMajor([[-180,-90+ec],[180,90-ec]]).extentMinor([[-180,-80-ec],[180,80+ec]])}function Vs(){return Xs()()}var Ws,$s,Zs,Qs,Js=function(t,n){var e=t[0]*cc,r=t[1]*cc,i=n[0]*cc,o=n[1]*cc,u=hc(r),a=yc(r),c=hc(o),f=yc(o),s=u*hc(e),l=u*yc(e),h=c*hc(i),d=c*yc(i),p=2*wc(_c(Mc(o-r)+u*c*Mc(i-e))),v=yc(p),g=p?function(t){var n=yc(t*=p)/v,e=yc(p-t)/v,r=e*s+n*h,i=e*l+n*d,o=e*a+n*f;return[lc(i,r)*ac,lc(o,_c(r*r+i*i))*ac]}:function(){return[e*ac,r*ac]};return g.distance=p,g},Ks=function(t){return t},tl=Ja(),nl=Ja(),el={point:Sc,lineStart:Sc,lineEnd:Sc,polygonStart:function(){el.lineStart=rl,el.lineEnd=ul},polygonEnd:function(){el.lineStart=el.lineEnd=el.point=Sc,tl.add(fc(nl)),nl.reset()},result:function(){var t=tl/2;return tl.reset(),t}};function rl(){el.point=il}function il(t,n){el.point=ol,Ws=Zs=t,$s=Qs=n}function ol(t,n){nl.add(Qs*t-Zs*n),Zs=t,Qs=n}function ul(){ol(Ws,$s)}var al=el,cl=1/0,fl=cl,sl=-cl,ll=sl;var hl,dl,pl,vl,gl={point:function(t,n){t<cl&&(cl=t);t>sl&&(sl=t);n<fl&&(fl=n);n>ll&&(ll=n)},lineStart:Sc,lineEnd:Sc,polygonStart:Sc,polygonEnd:Sc,result:function(){var t=[[cl,fl],[sl,ll]];return sl=ll=-(fl=cl=1/0),t}},yl=0,bl=0,_l=0,ml=0,xl=0,wl=0,Ml=0,Sl=0,Al=0,Cl={point:Nl,lineStart:kl,lineEnd:Pl,polygonStart:function(){Cl.lineStart=zl,Cl.lineEnd=Ll},polygonEnd:function(){Cl.point=Nl,Cl.lineStart=kl,Cl.lineEnd=Pl},result:function(){var t=Al?[Ml/Al,Sl/Al]:wl?[ml/wl,xl/wl]:_l?[yl/_l,bl/_l]:[NaN,NaN];return yl=bl=_l=ml=xl=wl=Ml=Sl=Al=0,t}};function Nl(t,n){yl+=t,bl+=n,++_l}function kl(){Cl.point=Tl}function Tl(t,n){Cl.point=El,Nl(pl=t,vl=n)}function El(t,n){var e=t-pl,r=n-vl,i=_c(e*e+r*r);ml+=i*(pl+t)/2,xl+=i*(vl+n)/2,wl+=i,Nl(pl=t,vl=n)}function Pl(){Cl.point=Nl}function zl(){Cl.point=Rl}function Ll(){Dl(hl,dl)}function Rl(t,n){Cl.point=Dl,Nl(hl=pl=t,dl=vl=n)}function Dl(t,n){var e=t-pl,r=n-vl,i=_c(e*e+r*r);ml+=i*(pl+t)/2,xl+=i*(vl+n)/2,wl+=i,Ml+=(i=vl*t-pl*n)*(pl+t),Sl+=i*(vl+n),Al+=3*i,Nl(pl=t,vl=n)}var Ol=Cl;function ql(t){this._context=t}ql.prototype={_radius:4.5,pointRadius:function(t){return this._radius=t,this},polygonStart:function(){this._line=0},polygonEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){0===this._line&&this._context.closePath(),this._point=NaN},point:function(t,n){switch(this._point){case 0:this._context.moveTo(t,n),this._point=1;break;case 1:this._context.lineTo(t,n);break;default:this._context.moveTo(t+this._radius,n),this._context.arc(t,n,this._radius,0,uc)}},result:Sc};var Ul,Bl,Yl,Hl,Il,Fl=Ja(),jl={point:Sc,lineStart:function(){jl.point=Gl},lineEnd:function(){Ul&&Xl(Bl,Yl),jl.point=Sc},polygonStart:function(){Ul=!0},polygonEnd:function(){Ul=null},result:function(){var t=+Fl;return Fl.reset(),t}};function Gl(t,n){jl.point=Xl,Bl=Hl=t,Yl=Il=n}function Xl(t,n){Hl-=t,Il-=n,Fl.add(_c(Hl*Hl+Il*Il)),Hl=t,Il=n}var Vl=jl;function Wl(){this._string=[]}function $l(t){return"m0,"+t+"a"+t+","+t+" 0 1,1 0,"+-2*t+"a"+t+","+t+" 0 1,1 0,"+2*t+"z"}Wl.prototype={_radius:4.5,_circle:$l(4.5),pointRadius:function(t){return(t=+t)!==this._radius&&(this._radius=t,this._circle=null),this},polygonStart:function(){this._line=0},polygonEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){0===this._line&&this._string.push("Z"),this._point=NaN},point:function(t,n){switch(this._point){case 0:this._string.push("M",t,",",n),this._point=1;break;case 1:this._string.push("L",t,",",n);break;default:null==this._circle&&(this._circle=$l(this._radius)),this._string.push("M",t,",",n,this._circle)}},result:function(){if(this._string.length){var t=this._string.join("");return this._string=[],t}return null}};var Zl=function(t,n){var e,r,i=4.5;function o(t){return t&&("function"==typeof i&&r.pointRadius(+i.apply(this,arguments)),Dc(t,e(r))),r.result()}return o.area=function(t){return Dc(t,e(al)),al.result()},o.measure=function(t){return Dc(t,e(Vl)),Vl.result()},o.bounds=function(t){return Dc(t,e(gl)),gl.result()},o.centroid=function(t){return Dc(t,e(Ol)),Ol.result()},o.projection=function(n){return arguments.length?(e=null==n?(t=null,Ks):(t=n).stream,o):t},o.context=function(t){return arguments.length?(r=null==t?(n=null,new Wl):new ql(n=t),"function"!=typeof i&&r.pointRadius(i),o):n},o.pointRadius=function(t){return arguments.length?(i="function"==typeof t?t:(r.pointRadius(+t),+t),o):i},o.projection(t).context(n)},Ql=function(t){return{stream:Jl(t)}};function Jl(t){return function(n){var e=new Kl;for(var r in t)e[r]=t[r];return e.stream=n,e}}function Kl(){}function th(t,n,e){var r=t.clipExtent&&t.clipExtent();return t.scale(150).translate([0,0]),null!=r&&t.clipExtent(null),Dc(e,t.stream(gl)),n(gl.result()),null!=r&&t.clipExtent(r),t}function nh(t,n,e){return th(t,function(e){var r=n[1][0]-n[0][0],i=n[1][1]-n[0][1],o=Math.min(r/(e[1][0]-e[0][0]),i/(e[1][1]-e[0][1])),u=+n[0][0]+(r-o*(e[1][0]+e[0][0]))/2,a=+n[0][1]+(i-o*(e[1][1]+e[0][1]))/2;t.scale(150*o).translate([u,a])},e)}function eh(t,n,e){return nh(t,[[0,0],n],e)}function rh(t,n,e){return th(t,function(e){var r=+n,i=r/(e[1][0]-e[0][0]),o=(r-i*(e[1][0]+e[0][0]))/2,u=-i*e[0][1];t.scale(150*i).translate([o,u])},e)}function ih(t,n,e){return th(t,function(e){var r=+n,i=r/(e[1][1]-e[0][1]),o=-i*e[0][0],u=(r-i*(e[1][1]+e[0][1]))/2;t.scale(150*i).translate([o,u])},e)}Kl.prototype={constructor:Kl,point:function(t,n){this.stream.point(t,n)},sphere:function(){this.stream.sphere()},lineStart:function(){this.stream.lineStart()},lineEnd:function(){this.stream.lineEnd()},polygonStart:function(){this.stream.polygonStart()},polygonEnd:function(){this.stream.polygonEnd()}};var oh=16,uh=hc(30*cc),ah=function(t,n){return+n?function(t,n){function e(r,i,o,u,a,c,f,s,l,h,d,p,v,g){var y=f-r,b=s-i,_=y*y+b*b;if(_>4*n&&v--){var m=u+h,x=a+d,w=c+p,M=_c(m*m+x*x+w*w),S=wc(w/=M),A=fc(fc(w)-1)<ec||fc(o-l)<ec?(o+l)/2:lc(x,m),C=t(A,S),N=C[0],k=C[1],T=N-r,E=k-i,P=b*T-y*E;(P*P/_>n||fc((y*T+b*E)/_-.5)>.3||u*h+a*d+c*p<uh)&&(e(r,i,o,u,a,c,N,k,A,m/=M,x/=M,w,v,g),g.point(N,k),e(N,k,A,m,x,w,f,s,l,h,d,p,v,g))}}return function(n){var r,i,o,u,a,c,f,s,l,h,d,p,v={point:g,lineStart:y,lineEnd:_,polygonStart:function(){n.polygonStart(),v.lineStart=m},polygonEnd:function(){n.polygonEnd(),v.lineStart=y}};function g(e,r){e=t(e,r),n.point(e[0],e[1])}function y(){s=NaN,v.point=b,n.lineStart()}function b(r,i){var o=Gc([r,i]),u=t(r,i);e(s,l,f,h,d,p,s=u[0],l=u[1],f=r,h=o[0],d=o[1],p=o[2],oh,n),n.point(s,l)}function _(){v.point=g,n.lineEnd()}function m(){y(),v.point=x,v.lineEnd=w}function x(t,n){b(r=t,n),i=s,o=l,u=h,a=d,c=p,v.point=b}function w(){e(s,l,f,h,d,p,i,o,r,u,a,c,oh,n),v.lineEnd=_,_()}return v}}(t,n):function(t){return Jl({point:function(n,e){n=t(n,e),this.stream.point(n[0],n[1])}})}(t)};var ch=Jl({point:function(t,n){this.stream.point(t*cc,n*cc)}});function fh(t,n,e,r){var i=hc(r),o=yc(r),u=i*t,a=o*t,c=i/t,f=o/t,s=(o*e-i*n)/t,l=(o*n+i*e)/t;function h(t,r){return[u*t-a*r+n,e-a*t-u*r]}return h.invert=function(t,n){return[c*t-f*n+s,l-f*t-c*n]},h}function sh(t){return lh(function(){return t})()}function lh(t){var n,e,r,i,o,u,a,c,f,s,l=150,h=480,d=250,p=0,v=0,g=0,y=0,b=0,_=0,m=null,x=gs,w=null,M=Ks,S=.5;function A(t){return c(t[0]*cc,t[1]*cc)}function C(t){return(t=c.invert(t[0],t[1]))&&[t[0]*ac,t[1]*ac]}function N(){var t=fh(l,0,0,_).apply(null,n(p,v)),r=(_?fh:function(t,n,e){function r(r,i){return[n+t*r,e-t*i]}return r.invert=function(r,i){return[(r-n)/t,(e-i)/t]},r})(l,h-t[0],d-t[1],_);return e=Jf(g,y,b),a=Zf(n,r),c=Zf(e,a),u=ah(a,S),k()}function k(){return f=s=null,A}return A.stream=function(t){return f&&s===t?f:f=ch(function(t){return Jl({point:function(n,e){var r=t(n,e);return this.stream.point(r[0],r[1])}})}(e)(x(u(M(s=t)))))},A.preclip=function(t){return arguments.length?(x=t,m=void 0,k()):x},A.postclip=function(t){return arguments.length?(M=t,w=r=i=o=null,k()):M},A.clipAngle=function(t){return arguments.length?(x=+t?ys(m=t*cc):(m=null,gs),k()):m*ac},A.clipExtent=function(t){return arguments.length?(M=null==t?(w=r=i=o=null,Ks):xs(w=+t[0][0],r=+t[0][1],i=+t[1][0],o=+t[1][1]),k()):null==w?null:[[w,r],[i,o]]},A.scale=function(t){return arguments.length?(l=+t,N()):l},A.translate=function(t){return arguments.length?(h=+t[0],d=+t[1],N()):[h,d]},A.center=function(t){return arguments.length?(p=t[0]%360*cc,v=t[1]%360*cc,N()):[p*ac,v*ac]},A.rotate=function(t){return arguments.length?(g=t[0]%360*cc,y=t[1]%360*cc,b=t.length>2?t[2]%360*cc:0,N()):[g*ac,y*ac,b*ac]},A.angle=function(t){return arguments.length?(_=t%360*cc,N()):_*ac},A.precision=function(t){return arguments.length?(u=ah(a,S=t*t),k()):_c(S)},A.fitExtent=function(t,n){return nh(A,t,n)},A.fitSize=function(t,n){return eh(A,t,n)},A.fitWidth=function(t,n){return rh(A,t,n)},A.fitHeight=function(t,n){return ih(A,t,n)},function(){return n=t.apply(this,arguments),A.invert=n.invert&&C,N()}}function hh(t){var n=0,e=rc/3,r=lh(t),i=r(n,e);return i.parallels=function(t){return arguments.length?r(n=t[0]*cc,e=t[1]*cc):[n*ac,e*ac]},i}function dh(t,n){var e=yc(t),r=(e+yc(n))/2;if(fc(r)<ec)return function(t){var n=hc(t);function e(t,e){return[t*n,yc(e)/n]}return e.invert=function(t,e){return[t/n,wc(e*n)]},e}(t);var i=1+e*(2*r-e),o=_c(i)/r;function u(t,n){var e=_c(i-2*r*yc(n))/r;return[e*yc(t*=r),o-e*hc(t)]}return u.invert=function(t,n){var e=o-n;return[lc(t,fc(e))/r*bc(e),wc((i-(t*t+e*e)*r*r)/(2*r))]},u}var ph=function(){return hh(dh).scale(155.424).center([0,33.6442])},vh=function(){return ph().parallels([29.5,45.5]).scale(1070).translate([480,250]).rotate([96,0]).center([-.6,38.7])};var gh=function(){var t,n,e,r,i,o,u=vh(),a=ph().rotate([154,0]).center([-2,58.5]).parallels([55,65]),c=ph().rotate([157,0]).center([-3,19.9]).parallels([8,18]),f={point:function(t,n){o=[t,n]}};function s(t){var n=t[0],u=t[1];return o=null,e.point(n,u),o||(r.point(n,u),o)||(i.point(n,u),o)}function l(){return t=n=null,s}return s.invert=function(t){var n=u.scale(),e=u.translate(),r=(t[0]-e[0])/n,i=(t[1]-e[1])/n;return(i>=.12&&i<.234&&r>=-.425&&r<-.214?a:i>=.166&&i<.234&&r>=-.214&&r<-.115?c:u).invert(t)},s.stream=function(e){return t&&n===e?t:t=function(t){var n=t.length;return{point:function(e,r){for(var i=-1;++i<n;)t[i].point(e,r)},sphere:function(){for(var e=-1;++e<n;)t[e].sphere()},lineStart:function(){for(var e=-1;++e<n;)t[e].lineStart()},lineEnd:function(){for(var e=-1;++e<n;)t[e].lineEnd()},polygonStart:function(){for(var e=-1;++e<n;)t[e].polygonStart()},polygonEnd:function(){for(var e=-1;++e<n;)t[e].polygonEnd()}}}([u.stream(n=e),a.stream(e),c.stream(e)])},s.precision=function(t){return arguments.length?(u.precision(t),a.precision(t),c.precision(t),l()):u.precision()},s.scale=function(t){return arguments.length?(u.scale(t),a.scale(.35*t),c.scale(t),s.translate(u.translate())):u.scale()},s.translate=function(t){if(!arguments.length)return u.translate();var n=u.scale(),o=+t[0],s=+t[1];return e=u.translate(t).clipExtent([[o-.455*n,s-.238*n],[o+.455*n,s+.238*n]]).stream(f),r=a.translate([o-.307*n,s+.201*n]).clipExtent([[o-.425*n+ec,s+.12*n+ec],[o-.214*n-ec,s+.234*n-ec]]).stream(f),i=c.translate([o-.205*n,s+.212*n]).clipExtent([[o-.214*n+ec,s+.166*n+ec],[o-.115*n-ec,s+.234*n-ec]]).stream(f),l()},s.fitExtent=function(t,n){return nh(s,t,n)},s.fitSize=function(t,n){return eh(s,t,n)},s.fitWidth=function(t,n){return rh(s,t,n)},s.fitHeight=function(t,n){return ih(s,t,n)},s.scale(1070)};function yh(t){return function(n,e){var r=hc(n),i=hc(e),o=t(r*i);return[o*i*yc(n),o*yc(e)]}}function bh(t){return function(n,e){var r=_c(n*n+e*e),i=t(r),o=yc(i),u=hc(i);return[lc(n*o,r*u),wc(r&&e*o/r)]}}var _h=yh(function(t){return _c(2/(1+t))});_h.invert=bh(function(t){return 2*wc(t/2)});var mh=function(){return sh(_h).scale(124.75).clipAngle(179.999)},xh=yh(function(t){return(t=xc(t))&&t/yc(t)});xh.invert=bh(function(t){return t});var wh=function(){return sh(xh).scale(79.4188).clipAngle(179.999)};function Mh(t,n){return[t,vc(mc((ic+n)/2))]}Mh.invert=function(t,n){return[t,2*sc(pc(n))-ic]};var Sh=function(){return Ah(Mh).scale(961/uc)};function Ah(t){var n,e,r,i=sh(t),o=i.center,u=i.scale,a=i.translate,c=i.clipExtent,f=null;function s(){var o=rc*u(),a=i(es(i.rotate()).invert([0,0]));return c(null==f?[[a[0]-o,a[1]-o],[a[0]+o,a[1]+o]]:t===Mh?[[Math.max(a[0]-o,f),n],[Math.min(a[0]+o,e),r]]:[[f,Math.max(a[1]-o,n)],[e,Math.min(a[1]+o,r)]])}return i.scale=function(t){return arguments.length?(u(t),s()):u()},i.translate=function(t){return arguments.length?(a(t),s()):a()},i.center=function(t){return arguments.length?(o(t),s()):o()},i.clipExtent=function(t){return arguments.length?(null==t?f=n=e=r=null:(f=+t[0][0],n=+t[0][1],e=+t[1][0],r=+t[1][1]),s()):null==f?null:[[f,n],[e,r]]},s()}function Ch(t){return mc((ic+t)/2)}function Nh(t,n){var e=hc(t),r=t===n?yc(t):vc(e/hc(n))/vc(Ch(n)/Ch(t)),i=e*gc(Ch(t),r)/r;if(!r)return Mh;function o(t,n){i>0?n<-ic+ec&&(n=-ic+ec):n>ic-ec&&(n=ic-ec);var e=i/gc(Ch(n),r);return[e*yc(r*t),i-e*hc(r*t)]}return o.invert=function(t,n){var e=i-n,o=bc(r)*_c(t*t+e*e);return[lc(t,fc(e))/r*bc(e),2*sc(gc(i/o,1/r))-ic]},o}var kh=function(){return hh(Nh).scale(109.5).parallels([30,30])};function Th(t,n){return[t,n]}Th.invert=Th;var Eh=function(){return sh(Th).scale(152.63)};function Ph(t,n){var e=hc(t),r=t===n?yc(t):(e-hc(n))/(n-t),i=e/r+t;if(fc(r)<ec)return Th;function o(t,n){var e=i-n,o=r*t;return[e*yc(o),i-e*hc(o)]}return o.invert=function(t,n){var e=i-n;return[lc(t,fc(e))/r*bc(e),i-bc(r)*_c(t*t+e*e)]},o}var zh=function(){return hh(Ph).scale(131.154).center([0,13.9389])},Lh=1.340264,Rh=-.081106,Dh=893e-6,Oh=.003796,qh=_c(3)/2;function Uh(t,n){var e=wc(qh*yc(n)),r=e*e,i=r*r*r;return[t*hc(e)/(qh*(Lh+3*Rh*r+i*(7*Dh+9*Oh*r))),e*(Lh+Rh*r+i*(Dh+Oh*r))]}Uh.invert=function(t,n){for(var e,r=n,i=r*r,o=i*i*i,u=0;u<12&&(o=(i=(r-=e=(r*(Lh+Rh*i+o*(Dh+Oh*i))-n)/(Lh+3*Rh*i+o*(7*Dh+9*Oh*i)))*r)*i*i,!(fc(e)<1e-12));++u);return[qh*t*(Lh+3*Rh*i+o*(7*Dh+9*Oh*i))/hc(r),wc(yc(r)/qh)]};var Bh=function(){return sh(Uh).scale(177.158)};function Yh(t,n){var e=hc(n),r=hc(t)*e;return[e*yc(t)/r,yc(n)/r]}Yh.invert=bh(sc);var Hh=function(){return sh(Yh).scale(144.049).clipAngle(60)};function Ih(t,n,e,r){return 1===t&&1===n&&0===e&&0===r?Ks:Jl({point:function(i,o){this.stream.point(i*t+e,o*n+r)}})}var Fh=function(){var t,n,e,r,i,o,u=1,a=0,c=0,f=1,s=1,l=Ks,h=null,d=Ks;function p(){return r=i=null,o}return o={stream:function(t){return r&&i===t?r:r=l(d(i=t))},postclip:function(r){return arguments.length?(d=r,h=t=n=e=null,p()):d},clipExtent:function(r){return arguments.length?(d=null==r?(h=t=n=e=null,Ks):xs(h=+r[0][0],t=+r[0][1],n=+r[1][0],e=+r[1][1]),p()):null==h?null:[[h,t],[n,e]]},scale:function(t){return arguments.length?(l=Ih((u=+t)*f,u*s,a,c),p()):u},translate:function(t){return arguments.length?(l=Ih(u*f,u*s,a=+t[0],c=+t[1]),p()):[a,c]},reflectX:function(t){return arguments.length?(l=Ih(u*(f=t?-1:1),u*s,a,c),p()):f<0},reflectY:function(t){return arguments.length?(l=Ih(u*f,u*(s=t?-1:1),a,c),p()):s<0},fitExtent:function(t,n){return nh(o,t,n)},fitSize:function(t,n){return eh(o,t,n)},fitWidth:function(t,n){return rh(o,t,n)},fitHeight:function(t,n){return ih(o,t,n)}}};function jh(t,n){var e=n*n,r=e*e;return[t*(.8707-.131979*e+r*(r*(.003971*e-.001529*r)-.013791)),n*(1.007226+e*(.015085+r*(.028874*e-.044475-.005916*r)))]}jh.invert=function(t,n){var e,r=n,i=25;do{var o=r*r,u=o*o;r-=e=(r*(1.007226+o*(.015085+u*(.028874*o-.044475-.005916*u)))-n)/(1.007226+o*(.045255+u*(.259866*o-.311325-.005916*11*u)))}while(fc(e)>ec&&--i>0);return[t/(.8707+(o=r*r)*(o*(o*o*o*(.003971-.001529*o)-.013791)-.131979)),r]};var Gh=function(){return sh(jh).scale(175.295)};function Xh(t,n){return[hc(n)*yc(t),yc(n)]}Xh.invert=bh(wc);var Vh=function(){return sh(Xh).scale(249.5).clipAngle(90+ec)};function Wh(t,n){var e=hc(n),r=1+hc(t)*e;return[e*yc(t)/r,yc(n)/r]}Wh.invert=bh(function(t){return 2*sc(t)});var $h=function(){return sh(Wh).scale(250).clipAngle(142)};function Zh(t,n){return[vc(mc((ic+n)/2)),-t]}Zh.invert=function(t,n){return[-n,2*sc(pc(t))-ic]};var Qh=function(){var t=Ah(Zh),n=t.center,e=t.rotate;return t.center=function(t){return arguments.length?n([-t[1],t[0]]):[(t=n())[1],-t[0]]},t.rotate=function(t){return arguments.length?e([t[0],t[1],t.length>2?t[2]+90:90]):[(t=e())[0],t[1],t[2]-90]},e([0,0,90]).scale(159.155)};function Jh(t,n){return t.parent===n.parent?1:2}function Kh(t,n){return t+n.x}function td(t,n){return Math.max(t,n.y)}var nd=function(){var t=Jh,n=1,e=1,r=!1;function i(i){var o,u=0;i.eachAfter(function(n){var e=n.children;e?(n.x=function(t){return t.reduce(Kh,0)/t.length}(e),n.y=function(t){return 1+t.reduce(td,0)}(e)):(n.x=o?u+=t(n,o):0,n.y=0,o=n)});var a=function(t){for(var n;n=t.children;)t=n[0];return t}(i),c=function(t){for(var n;n=t.children;)t=n[n.length-1];return t}(i),f=a.x-t(a,c)/2,s=c.x+t(c,a)/2;return i.eachAfter(r?function(t){t.x=(t.x-i.x)*n,t.y=(i.y-t.y)*e}:function(t){t.x=(t.x-f)/(s-f)*n,t.y=(1-(i.y?t.y/i.y:1))*e})}return i.separation=function(n){return arguments.length?(t=n,i):t},i.size=function(t){return arguments.length?(r=!1,n=+t[0],e=+t[1],i):r?null:[n,e]},i.nodeSize=function(t){return arguments.length?(r=!0,n=+t[0],e=+t[1],i):r?[n,e]:null},i};function ed(t){var n=0,e=t.children,r=e&&e.length;if(r)for(;--r>=0;)n+=e[r].value;else n=1;t.value=n}function rd(t,n){var e,r,i,o,u,a=new ad(t),c=+t.value&&(a.value=t.value),f=[a];for(null==n&&(n=id);e=f.pop();)if(c&&(e.value=+e.data.value),(i=n(e.data))&&(u=i.length))for(e.children=new Array(u),o=u-1;o>=0;--o)f.push(r=e.children[o]=new ad(i[o])),r.parent=e,r.depth=e.depth+1;return a.eachBefore(ud)}function id(t){return t.children}function od(t){t.data=t.data.data}function ud(t){var n=0;do{t.height=n}while((t=t.parent)&&t.height<++n)}function ad(t){this.data=t,this.depth=this.height=0,this.parent=null}ad.prototype=rd.prototype={constructor:ad,count:function(){return this.eachAfter(ed)},each:function(t){var n,e,r,i,o=this,u=[o];do{for(n=u.reverse(),u=[];o=n.pop();)if(t(o),e=o.children)for(r=0,i=e.length;r<i;++r)u.push(e[r])}while(u.length);return this},eachAfter:function(t){for(var n,e,r,i=this,o=[i],u=[];i=o.pop();)if(u.push(i),n=i.children)for(e=0,r=n.length;e<r;++e)o.push(n[e]);for(;i=u.pop();)t(i);return this},eachBefore:function(t){for(var n,e,r=this,i=[r];r=i.pop();)if(t(r),n=r.children)for(e=n.length-1;e>=0;--e)i.push(n[e]);return this},sum:function(t){return this.eachAfter(function(n){for(var e=+t(n.data)||0,r=n.children,i=r&&r.length;--i>=0;)e+=r[i].value;n.value=e})},sort:function(t){return this.eachBefore(function(n){n.children&&n.children.sort(t)})},path:function(t){for(var n=this,e=function(t,n){if(t===n)return t;var e=t.ancestors(),r=n.ancestors(),i=null;for(t=e.pop(),n=r.pop();t===n;)i=t,t=e.pop(),n=r.pop();return i}(n,t),r=[n];n!==e;)n=n.parent,r.push(n);for(var i=r.length;t!==e;)r.splice(i,0,t),t=t.parent;return r},ancestors:function(){for(var t=this,n=[t];t=t.parent;)n.push(t);return n},descendants:function(){var t=[];return this.each(function(n){t.push(n)}),t},leaves:function(){var t=[];return this.eachBefore(function(n){n.children||t.push(n)}),t},links:function(){var t=this,n=[];return t.each(function(e){e!==t&&n.push({source:e.parent,target:e})}),n},copy:function(){return rd(this).eachBefore(od)}};var cd=Array.prototype.slice;var fd=function(t){for(var n,e,r=0,i=(t=function(t){for(var n,e,r=t.length;r;)e=Math.random()*r--|0,n=t[r],t[r]=t[e],t[e]=n;return t}(cd.call(t))).length,o=[];r<i;)n=t[r],e&&hd(e,n)?++r:(e=pd(o=sd(o,n)),r=0);return e};function sd(t,n){var e,r;if(dd(n,t))return[n];for(e=0;e<t.length;++e)if(ld(n,t[e])&&dd(vd(t[e],n),t))return[t[e],n];for(e=0;e<t.length-1;++e)for(r=e+1;r<t.length;++r)if(ld(vd(t[e],t[r]),n)&&ld(vd(t[e],n),t[r])&&ld(vd(t[r],n),t[e])&&dd(gd(t[e],t[r],n),t))return[t[e],t[r],n];throw new Error}function ld(t,n){var e=t.r-n.r,r=n.x-t.x,i=n.y-t.y;return e<0||e*e<r*r+i*i}function hd(t,n){var e=t.r-n.r+1e-6,r=n.x-t.x,i=n.y-t.y;return e>0&&e*e>r*r+i*i}function dd(t,n){for(var e=0;e<n.length;++e)if(!hd(t,n[e]))return!1;return!0}function pd(t){switch(t.length){case 1:return function(t){return{x:t.x,y:t.y,r:t.r}}(t[0]);case 2:return vd(t[0],t[1]);case 3:return gd(t[0],t[1],t[2])}}function vd(t,n){var e=t.x,r=t.y,i=t.r,o=n.x,u=n.y,a=n.r,c=o-e,f=u-r,s=a-i,l=Math.sqrt(c*c+f*f);return{x:(e+o+c/l*s)/2,y:(r+u+f/l*s)/2,r:(l+i+a)/2}}function gd(t,n,e){var r=t.x,i=t.y,o=t.r,u=n.x,a=n.y,c=n.r,f=e.x,s=e.y,l=e.r,h=r-u,d=r-f,p=i-a,v=i-s,g=c-o,y=l-o,b=r*r+i*i-o*o,_=b-u*u-a*a+c*c,m=b-f*f-s*s+l*l,x=d*p-h*v,w=(p*m-v*_)/(2*x)-r,M=(v*g-p*y)/x,S=(d*_-h*m)/(2*x)-i,A=(h*y-d*g)/x,C=M*M+A*A-1,N=2*(o+w*M+S*A),k=w*w+S*S-o*o,T=-(C?(N+Math.sqrt(N*N-4*C*k))/(2*C):k/N);return{x:r+w+M*T,y:i+S+A*T,r:T}}function yd(t,n,e){var r,i,o,u,a=t.x-n.x,c=t.y-n.y,f=a*a+c*c;f?(i=n.r+e.r,i*=i,u=t.r+e.r,i>(u*=u)?(r=(f+u-i)/(2*f),o=Math.sqrt(Math.max(0,u/f-r*r)),e.x=t.x-r*a-o*c,e.y=t.y-r*c+o*a):(r=(f+i-u)/(2*f),o=Math.sqrt(Math.max(0,i/f-r*r)),e.x=n.x+r*a-o*c,e.y=n.y+r*c+o*a)):(e.x=n.x+e.r,e.y=n.y)}function bd(t,n){var e=t.r+n.r-1e-6,r=n.x-t.x,i=n.y-t.y;return e>0&&e*e>r*r+i*i}function _d(t){var n=t._,e=t.next._,r=n.r+e.r,i=(n.x*e.r+e.x*n.r)/r,o=(n.y*e.r+e.y*n.r)/r;return i*i+o*o}function md(t){this._=t,this.next=null,this.previous=null}function xd(t){if(!(i=t.length))return 0;var n,e,r,i,o,u,a,c,f,s,l;if((n=t[0]).x=0,n.y=0,!(i>1))return n.r;if(e=t[1],n.x=-e.r,e.x=n.r,e.y=0,!(i>2))return n.r+e.r;yd(e,n,r=t[2]),n=new md(n),e=new md(e),r=new md(r),n.next=r.previous=e,e.next=n.previous=r,r.next=e.previous=n;t:for(a=3;a<i;++a){yd(n._,e._,r=t[a]),r=new md(r),c=e.next,f=n.previous,s=e._.r,l=n._.r;do{if(s<=l){if(bd(c._,r._)){e=c,n.next=e,e.previous=n,--a;continue t}s+=c._.r,c=c.next}else{if(bd(f._,r._)){(n=f).next=e,e.previous=n,--a;continue t}l+=f._.r,f=f.previous}}while(c!==f.next);for(r.previous=n,r.next=e,n.next=e.previous=e=r,o=_d(n);(r=r.next)!==e;)(u=_d(r))<o&&(n=r,o=u);e=n.next}for(n=[e._],r=e;(r=r.next)!==e;)n.push(r._);for(r=fd(n),a=0;a<i;++a)(n=t[a]).x-=r.x,n.y-=r.y;return r.r}var wd=function(t){return xd(t),t};function Md(t){if("function"!=typeof t)throw new Error;return t}function Sd(){return 0}var Ad=function(t){return function(){return t}};function Cd(t){return Math.sqrt(t.value)}var Nd=function(){var t=null,n=1,e=1,r=Sd;function i(i){return i.x=n/2,i.y=e/2,t?i.eachBefore(kd(t)).eachAfter(Td(r,.5)).eachBefore(Ed(1)):i.eachBefore(kd(Cd)).eachAfter(Td(Sd,1)).eachAfter(Td(r,i.r/Math.min(n,e))).eachBefore(Ed(Math.min(n,e)/(2*i.r))),i}return i.radius=function(n){return arguments.length?(t=function(t){return null==t?null:Md(t)}(n),i):t},i.size=function(t){return arguments.length?(n=+t[0],e=+t[1],i):[n,e]},i.padding=function(t){return arguments.length?(r="function"==typeof t?t:Ad(+t),i):r},i};function kd(t){return function(n){n.children||(n.r=Math.max(0,+t(n)||0))}}function Td(t,n){return function(e){if(r=e.children){var r,i,o,u=r.length,a=t(e)*n||0;if(a)for(i=0;i<u;++i)r[i].r+=a;if(o=xd(r),a)for(i=0;i<u;++i)r[i].r-=a;e.r=o+a}}}function Ed(t){return function(n){var e=n.parent;n.r*=t,e&&(n.x=e.x+t*n.x,n.y=e.y+t*n.y)}}var Pd=function(t){t.x0=Math.round(t.x0),t.y0=Math.round(t.y0),t.x1=Math.round(t.x1),t.y1=Math.round(t.y1)},zd=function(t,n,e,r,i){for(var o,u=t.children,a=-1,c=u.length,f=t.value&&(r-n)/t.value;++a<c;)(o=u[a]).y0=e,o.y1=i,o.x0=n,o.x1=n+=o.value*f},Ld=function(){var t=1,n=1,e=0,r=!1;function i(i){var o=i.height+1;return i.x0=i.y0=e,i.x1=t,i.y1=n/o,i.eachBefore(function(t,n){return function(r){r.children&&zd(r,r.x0,t*(r.depth+1)/n,r.x1,t*(r.depth+2)/n);var i=r.x0,o=r.y0,u=r.x1-e,a=r.y1-e;u<i&&(i=u=(i+u)/2),a<o&&(o=a=(o+a)/2),r.x0=i,r.y0=o,r.x1=u,r.y1=a}}(n,o)),r&&i.eachBefore(Pd),i}return i.round=function(t){return arguments.length?(r=!!t,i):r},i.size=function(e){return arguments.length?(t=+e[0],n=+e[1],i):[t,n]},i.padding=function(t){return arguments.length?(e=+t,i):e},i},Rd="$",Dd={depth:-1},Od={};function qd(t){return t.id}function Ud(t){return t.parentId}var Bd=function(){var t=qd,n=Ud;function e(e){var r,i,o,u,a,c,f,s=e.length,l=new Array(s),h={};for(i=0;i<s;++i)r=e[i],a=l[i]=new ad(r),null!=(c=t(r,i,e))&&(c+="")&&(h[f=Rd+(a.id=c)]=f in h?Od:a);for(i=0;i<s;++i)if(a=l[i],null!=(c=n(e[i],i,e))&&(c+="")){if(!(u=h[Rd+c]))throw new Error("missing: "+c);if(u===Od)throw new Error("ambiguous: "+c);u.children?u.children.push(a):u.children=[a],a.parent=u}else{if(o)throw new Error("multiple roots");o=a}if(!o)throw new Error("no root");if(o.parent=Dd,o.eachBefore(function(t){t.depth=t.parent.depth+1,--s}).eachBefore(ud),o.parent=null,s>0)throw new Error("cycle");return o}return e.id=function(n){return arguments.length?(t=Md(n),e):t},e.parentId=function(t){return arguments.length?(n=Md(t),e):n},e};function Yd(t,n){return t.parent===n.parent?1:2}function Hd(t){var n=t.children;return n?n[0]:t.t}function Id(t){var n=t.children;return n?n[n.length-1]:t.t}function Fd(t,n,e){var r=e/(n.i-t.i);n.c-=r,n.s+=e,t.c+=r,n.z+=e,n.m+=e}function jd(t,n,e){return t.a.parent===n.parent?t.a:e}function Gd(t,n){this._=t,this.parent=null,this.children=null,this.A=null,this.a=this,this.z=0,this.m=0,this.c=0,this.s=0,this.t=null,this.i=n}Gd.prototype=Object.create(ad.prototype);var Xd=function(){var t=Yd,n=1,e=1,r=null;function i(i){var c=function(t){for(var n,e,r,i,o,u=new Gd(t,0),a=[u];n=a.pop();)if(r=n._.children)for(n.children=new Array(o=r.length),i=o-1;i>=0;--i)a.push(e=n.children[i]=new Gd(r[i],i)),e.parent=n;return(u.parent=new Gd(null,0)).children=[u],u}(i);if(c.eachAfter(o),c.parent.m=-c.z,c.eachBefore(u),r)i.eachBefore(a);else{var f=i,s=i,l=i;i.eachBefore(function(t){t.x<f.x&&(f=t),t.x>s.x&&(s=t),t.depth>l.depth&&(l=t)});var h=f===s?1:t(f,s)/2,d=h-f.x,p=n/(s.x+h+d),v=e/(l.depth||1);i.eachBefore(function(t){t.x=(t.x+d)*p,t.y=t.depth*v})}return i}function o(n){var e=n.children,r=n.parent.children,i=n.i?r[n.i-1]:null;if(e){!function(t){for(var n,e=0,r=0,i=t.children,o=i.length;--o>=0;)(n=i[o]).z+=e,n.m+=e,e+=n.s+(r+=n.c)}(n);var o=(e[0].z+e[e.length-1].z)/2;i?(n.z=i.z+t(n._,i._),n.m=n.z-o):n.z=o}else i&&(n.z=i.z+t(n._,i._));n.parent.A=function(n,e,r){if(e){for(var i,o=n,u=n,a=e,c=o.parent.children[0],f=o.m,s=u.m,l=a.m,h=c.m;a=Id(a),o=Hd(o),a&&o;)c=Hd(c),(u=Id(u)).a=n,(i=a.z+l-o.z-f+t(a._,o._))>0&&(Fd(jd(a,n,r),n,i),f+=i,s+=i),l+=a.m,f+=o.m,h+=c.m,s+=u.m;a&&!Id(u)&&(u.t=a,u.m+=l-s),o&&!Hd(c)&&(c.t=o,c.m+=f-h,r=n)}return r}(n,i,n.parent.A||r[0])}function u(t){t._.x=t.z+t.parent.m,t.m+=t.parent.m}function a(t){t.x*=n,t.y=t.depth*e}return i.separation=function(n){return arguments.length?(t=n,i):t},i.size=function(t){return arguments.length?(r=!1,n=+t[0],e=+t[1],i):r?null:[n,e]},i.nodeSize=function(t){return arguments.length?(r=!0,n=+t[0],e=+t[1],i):r?[n,e]:null},i},Vd=function(t,n,e,r,i){for(var o,u=t.children,a=-1,c=u.length,f=t.value&&(i-e)/t.value;++a<c;)(o=u[a]).x0=n,o.x1=r,o.y0=e,o.y1=e+=o.value*f},Wd=(1+Math.sqrt(5))/2;function $d(t,n,e,r,i,o){for(var u,a,c,f,s,l,h,d,p,v,g,y=[],b=n.children,_=0,m=0,x=b.length,w=n.value;_<x;){c=i-e,f=o-r;do{s=b[m++].value}while(!s&&m<x);for(l=h=s,g=s*s*(v=Math.max(f/c,c/f)/(w*t)),p=Math.max(h/g,g/l);m<x;++m){if(s+=a=b[m].value,a<l&&(l=a),a>h&&(h=a),g=s*s*v,(d=Math.max(h/g,g/l))>p){s-=a;break}p=d}y.push(u={value:s,dice:c<f,children:b.slice(_,m)}),u.dice?zd(u,e,r,i,w?r+=f*s/w:o):Vd(u,e,r,w?e+=c*s/w:i,o),w-=s,_=m}return y}var Zd=function t(n){function e(t,e,r,i,o){$d(n,t,e,r,i,o)}return e.ratio=function(n){return t((n=+n)>1?n:1)},e}(Wd),Qd=function(){var t=Zd,n=!1,e=1,r=1,i=[0],o=Sd,u=Sd,a=Sd,c=Sd,f=Sd;function s(t){return t.x0=t.y0=0,t.x1=e,t.y1=r,t.eachBefore(l),i=[0],n&&t.eachBefore(Pd),t}function l(n){var e=i[n.depth],r=n.x0+e,s=n.y0+e,l=n.x1-e,h=n.y1-e;l<r&&(r=l=(r+l)/2),h<s&&(s=h=(s+h)/2),n.x0=r,n.y0=s,n.x1=l,n.y1=h,n.children&&(e=i[n.depth+1]=o(n)/2,r+=f(n)-e,s+=u(n)-e,l-=a(n)-e,h-=c(n)-e,l<r&&(r=l=(r+l)/2),h<s&&(s=h=(s+h)/2),t(n,r,s,l,h))}return s.round=function(t){return arguments.length?(n=!!t,s):n},s.size=function(t){return arguments.length?(e=+t[0],r=+t[1],s):[e,r]},s.tile=function(n){return arguments.length?(t=Md(n),s):t},s.padding=function(t){return arguments.length?s.paddingInner(t).paddingOuter(t):s.paddingInner()},s.paddingInner=function(t){return arguments.length?(o="function"==typeof t?t:Ad(+t),s):o},s.paddingOuter=function(t){return arguments.length?s.paddingTop(t).paddingRight(t).paddingBottom(t).paddingLeft(t):s.paddingTop()},s.paddingTop=function(t){return arguments.length?(u="function"==typeof t?t:Ad(+t),s):u},s.paddingRight=function(t){return arguments.length?(a="function"==typeof t?t:Ad(+t),s):a},s.paddingBottom=function(t){return arguments.length?(c="function"==typeof t?t:Ad(+t),s):c},s.paddingLeft=function(t){return arguments.length?(f="function"==typeof t?t:Ad(+t),s):f},s},Jd=function(t,n,e,r,i){var o,u,a=t.children,c=a.length,f=new Array(c+1);for(f[0]=u=o=0;o<c;++o)f[o+1]=u+=a[o].value;!function t(n,e,r,i,o,u,c){if(n>=e-1){var s=a[n];return s.x0=i,s.y0=o,s.x1=u,void(s.y1=c)}var l=f[n],h=r/2+l,d=n+1,p=e-1;for(;d<p;){var v=d+p>>>1;f[v]<h?d=v+1:p=v}h-f[d-1]<f[d]-h&&n+1<d&&--d;var g=f[d]-l,y=r-g;if(u-i>c-o){var b=(i*y+u*g)/r;t(n,d,g,i,o,b,c),t(d,e,y,b,o,u,c)}else{var _=(o*y+c*g)/r;t(n,d,g,i,o,u,_),t(d,e,y,i,_,u,c)}}(0,c,t.value,n,e,r,i)},Kd=function(t,n,e,r,i){(1&t.depth?Vd:zd)(t,n,e,r,i)},tp=function t(n){function e(t,e,r,i,o){if((u=t._squarify)&&u.ratio===n)for(var u,a,c,f,s,l=-1,h=u.length,d=t.value;++l<h;){for(c=(a=u[l]).children,f=a.value=0,s=c.length;f<s;++f)a.value+=c[f].value;a.dice?zd(a,e,r,i,r+=(o-r)*a.value/d):Vd(a,e,r,e+=(i-e)*a.value/d,o),d-=a.value}else t._squarify=u=$d(n,t,e,r,i,o),u.ratio=n}return e.ratio=function(n){return t((n=+n)>1?n:1)},e}(Wd),np=function(t){for(var n,e=-1,r=t.length,i=t[r-1],o=0;++e<r;)n=i,i=t[e],o+=n[1]*i[0]-n[0]*i[1];return o/2},ep=function(t){for(var n,e,r=-1,i=t.length,o=0,u=0,a=t[i-1],c=0;++r<i;)n=a,a=t[r],c+=e=n[0]*a[1]-a[0]*n[1],o+=(n[0]+a[0])*e,u+=(n[1]+a[1])*e;return[o/(c*=3),u/c]},rp=function(t,n,e){return(n[0]-t[0])*(e[1]-t[1])-(n[1]-t[1])*(e[0]-t[0])};function ip(t,n){return t[0]-n[0]||t[1]-n[1]}function op(t){for(var n=t.length,e=[0,1],r=2,i=2;i<n;++i){for(;r>1&&rp(t[e[r-2]],t[e[r-1]],t[i])<=0;)--r;e[r++]=i}return e.slice(0,r)}var up=function(t){if((e=t.length)<3)return null;var n,e,r=new Array(e),i=new Array(e);for(n=0;n<e;++n)r[n]=[+t[n][0],+t[n][1],n];for(r.sort(ip),n=0;n<e;++n)i[n]=[r[n][0],-r[n][1]];var o=op(r),u=op(i),a=u[0]===o[0],c=u[u.length-1]===o[o.length-1],f=[];for(n=o.length-1;n>=0;--n)f.push(t[r[o[n]][2]]);for(n=+a;n<u.length-c;++n)f.push(t[r[u[n]][2]]);return f},ap=function(t,n){for(var e,r,i=t.length,o=t[i-1],u=n[0],a=n[1],c=o[0],f=o[1],s=!1,l=0;l<i;++l)e=(o=t[l])[0],(r=o[1])>a!=f>a&&u<(c-e)*(a-r)/(f-r)+e&&(s=!s),c=e,f=r;return s},cp=function(t){for(var n,e,r=-1,i=t.length,o=t[i-1],u=o[0],a=o[1],c=0;++r<i;)n=u,e=a,n-=u=(o=t[r])[0],e-=a=o[1],c+=Math.sqrt(n*n+e*e);return c},fp=function(){return Math.random()},sp=function t(n){function e(t,e){return t=null==t?0:+t,e=null==e?1:+e,1===arguments.length?(e=t,t=0):e-=t,function(){return n()*e+t}}return e.source=t,e}(fp),lp=function t(n){function e(t,e){var r,i;return t=null==t?0:+t,e=null==e?1:+e,function(){var o;if(null!=r)o=r,r=null;else do{r=2*n()-1,o=2*n()-1,i=r*r+o*o}while(!i||i>1);return t+e*o*Math.sqrt(-2*Math.log(i)/i)}}return e.source=t,e}(fp),hp=function t(n){function e(){var t=lp.source(n).apply(this,arguments);return function(){return Math.exp(t())}}return e.source=t,e}(fp),dp=function t(n){function e(t){return function(){for(var e=0,r=0;r<t;++r)e+=n();return e}}return e.source=t,e}(fp),pp=function t(n){function e(t){var e=dp.source(n)(t);return function(){return e()/t}}return e.source=t,e}(fp),vp=function t(n){function e(t){return function(){return-Math.log(1-n())/t}}return e.source=t,e}(fp),gp=Array.prototype,yp=gp.map,bp=gp.slice,_p={name:"implicit"};function mp(t){var n=Jo(),e=[],r=_p;function i(i){var o=i+"",u=n.get(o);if(!u){if(r!==_p)return r;n.set(o,u=e.push(i))}return t[(u-1)%t.length]}return t=null==t?[]:bp.call(t),i.domain=function(t){if(!arguments.length)return e.slice();e=[],n=Jo();for(var r,o,u=-1,a=t.length;++u<a;)n.has(o=(r=t[u])+"")||n.set(o,e.push(r));return i},i.range=function(n){return arguments.length?(t=bp.call(n),i):t.slice()},i.unknown=function(t){return arguments.length?(r=t,i):r},i.copy=function(){return mp().domain(e).range(t).unknown(r)},i}function xp(){var t,n,e=mp().unknown(void 0),r=e.domain,i=e.range,o=[0,1],u=!1,a=0,c=0,f=.5;function s(){var e=r().length,s=o[1]<o[0],l=o[s-0],h=o[1-s];t=(h-l)/Math.max(1,e-a+2*c),u&&(t=Math.floor(t)),l+=(h-l-t*(e-a))*f,n=t*(1-a),u&&(l=Math.round(l),n=Math.round(n));var d=w(e).map(function(n){return l+t*n});return i(s?d.reverse():d)}return delete e.unknown,e.domain=function(t){return arguments.length?(r(t),s()):r()},e.range=function(t){return arguments.length?(o=[+t[0],+t[1]],s()):o.slice()},e.rangeRound=function(t){return o=[+t[0],+t[1]],u=!0,s()},e.bandwidth=function(){return n},e.step=function(){return t},e.round=function(t){return arguments.length?(u=!!t,s()):u},e.padding=function(t){return arguments.length?(a=c=Math.max(0,Math.min(1,t)),s()):a},e.paddingInner=function(t){return arguments.length?(a=Math.max(0,Math.min(1,t)),s()):a},e.paddingOuter=function(t){return arguments.length?(c=Math.max(0,Math.min(1,t)),s()):c},e.align=function(t){return arguments.length?(f=Math.max(0,Math.min(1,t)),s()):f},e.copy=function(){return xp().domain(r()).range(o).round(u).paddingInner(a).paddingOuter(c).align(f)},s()}function wp(){return function t(n){var e=n.copy;return n.padding=n.paddingOuter,delete n.paddingInner,delete n.paddingOuter,n.copy=function(){return t(e())},n}(xp().paddingInner(1))}var Mp=function(t){return function(){return t}},Sp=function(t){return+t},Ap=[0,1];function Cp(t,n){return(n-=t=+t)?function(e){return(e-t)/n}:Mp(n)}function Np(t,n,e,r){var i=t[0],o=t[1],u=n[0],a=n[1];return o<i?(i=e(o,i),u=r(a,u)):(i=e(i,o),u=r(u,a)),function(t){return u(i(t))}}function kp(t,n,e,r){var i=Math.min(t.length,n.length)-1,o=new Array(i),u=new Array(i),a=-1;for(t[i]<t[0]&&(t=t.slice().reverse(),n=n.slice().reverse());++a<i;)o[a]=e(t[a],t[a+1]),u[a]=r(n[a],n[a+1]);return function(n){var e=c(t,n,1,i)-1;return u[e](o[e](n))}}function Tp(t,n){return n.domain(t.domain()).range(t.range()).interpolate(t.interpolate()).clamp(t.clamp())}function Ep(t,n){var e,r,i,o=Ap,u=Ap,a=Qe,c=!1;function f(){return e=Math.min(o.length,u.length)>2?kp:Np,r=i=null,s}function s(n){return(r||(r=e(o,u,c?function(t){return function(n,e){var r=t(n=+n,e=+e);return function(t){return t<=n?0:t>=e?1:r(t)}}}(t):t,a)))(+n)}return s.invert=function(t){return(i||(i=e(u,o,Cp,c?function(t){return function(n,e){var r=t(n=+n,e=+e);return function(t){return t<=0?n:t>=1?e:r(t)}}}(n):n)))(+t)},s.domain=function(t){return arguments.length?(o=yp.call(t,Sp),f()):o.slice()},s.range=function(t){return arguments.length?(u=bp.call(t),f()):u.slice()},s.rangeRound=function(t){return u=bp.call(t),a=tr,f()},s.clamp=function(t){return arguments.length?(c=!!t,f()):c},s.interpolate=function(t){return arguments.length?(a=t,f()):a},f()}var Pp=function(t,n,e){var r,i=t[0],o=t[t.length-1],u=k(i,o,null==n?10:n);switch((e=Oa(null==e?",f":e)).type){case"s":var a=Math.max(Math.abs(i),Math.abs(o));return null!=e.precision||isNaN(r=Za(u,a))||(e.precision=r),Ha(e,a);case"":case"e":case"g":case"p":case"r":null!=e.precision||isNaN(r=Qa(u,Math.max(Math.abs(i),Math.abs(o))))||(e.precision=r-("e"===e.type));break;case"f":case"%":null!=e.precision||isNaN(r=$a(u))||(e.precision=r-2*("%"===e.type))}return Ya(e)};function zp(t){var n=t.domain;return t.ticks=function(t){var e=n();return C(e[0],e[e.length-1],null==t?10:t)},t.tickFormat=function(t,e){return Pp(n(),t,e)},t.nice=function(e){null==e&&(e=10);var r,i=n(),o=0,u=i.length-1,a=i[o],c=i[u];return c<a&&(r=a,a=c,c=r,r=o,o=u,u=r),(r=N(a,c,e))>0?r=N(a=Math.floor(a/r)*r,c=Math.ceil(c/r)*r,e):r<0&&(r=N(a=Math.ceil(a*r)/r,c=Math.floor(c*r)/r,e)),r>0?(i[o]=Math.floor(a/r)*r,i[u]=Math.ceil(c/r)*r,n(i)):r<0&&(i[o]=Math.ceil(a*r)/r,i[u]=Math.floor(c*r)/r,n(i)),t},t}function Lp(){var t=Ep(Cp,Ie);return t.copy=function(){return Tp(t,Lp())},zp(t)}function Rp(){var t=[0,1];function n(t){return+t}return n.invert=n,n.domain=n.range=function(e){return arguments.length?(t=yp.call(e,Sp),n):t.slice()},n.copy=function(){return Rp().domain(t)},zp(n)}var Dp=function(t,n){var e,r=0,i=(t=t.slice()).length-1,o=t[r],u=t[i];return u<o&&(e=r,r=i,i=e,e=o,o=u,u=e),t[r]=n.floor(o),t[i]=n.ceil(u),t};function Op(t,n){return(n=Math.log(n/t))?function(e){return Math.log(e/t)/n}:Mp(n)}function qp(t,n){return t<0?function(e){return-Math.pow(-n,e)*Math.pow(-t,1-e)}:function(e){return Math.pow(n,e)*Math.pow(t,1-e)}}function Up(t){return isFinite(t)?+("1e"+t):t<0?0:t}function Bp(t){return 10===t?Up:t===Math.E?Math.exp:function(n){return Math.pow(t,n)}}function Yp(t){return t===Math.E?Math.log:10===t&&Math.log10||2===t&&Math.log2||(t=Math.log(t),function(n){return Math.log(n)/t})}function Hp(t){return function(n){return-t(-n)}}function Ip(){var t=Ep(Op,qp).domain([1,10]),n=t.domain,e=10,r=Yp(10),i=Bp(10);function o(){return r=Yp(e),i=Bp(e),n()[0]<0&&(r=Hp(r),i=Hp(i)),t}return t.base=function(t){return arguments.length?(e=+t,o()):e},t.domain=function(t){return arguments.length?(n(t),o()):n()},t.ticks=function(t){var o,u=n(),a=u[0],c=u[u.length-1];(o=c<a)&&(h=a,a=c,c=h);var f,s,l,h=r(a),d=r(c),p=null==t?10:+t,v=[];if(!(e%1)&&d-h<p){if(h=Math.round(h)-1,d=Math.round(d)+1,a>0){for(;h<d;++h)for(s=1,f=i(h);s<e;++s)if(!((l=f*s)<a)){if(l>c)break;v.push(l)}}else for(;h<d;++h)for(s=e-1,f=i(h);s>=1;--s)if(!((l=f*s)<a)){if(l>c)break;v.push(l)}}else v=C(h,d,Math.min(d-h,p)).map(i);return o?v.reverse():v},t.tickFormat=function(n,o){if(null==o&&(o=10===e?".0e":","),"function"!=typeof o&&(o=Ya(o)),n===1/0)return o;null==n&&(n=10);var u=Math.max(1,e*n/t.ticks().length);return function(t){var n=t/i(Math.round(r(t)));return n*e<e-.5&&(n*=e),n<=u?o(t):""}},t.nice=function(){return n(Dp(n(),{floor:function(t){return i(Math.floor(r(t)))},ceil:function(t){return i(Math.ceil(r(t)))}}))},t.copy=function(){return Tp(t,Ip().base(e))},t}function Fp(t,n){return t<0?-Math.pow(-t,n):Math.pow(t,n)}function jp(){var t=1,n=Ep(function(n,e){return(e=Fp(e,t)-(n=Fp(n,t)))?function(r){return(Fp(r,t)-n)/e}:Mp(e)},function(n,e){return e=Fp(e,t)-(n=Fp(n,t)),function(r){return Fp(n+e*r,1/t)}}),e=n.domain;return n.exponent=function(n){return arguments.length?(t=+n,e(e())):t},n.copy=function(){return Tp(n,jp().exponent(t))},zp(n)}function Gp(){return jp().exponent(.5)}function Xp(){var t=[],n=[],e=[];function i(){var r=0,i=Math.max(1,n.length);for(e=new Array(i-1);++r<i;)e[r-1]=P(t,r/i);return o}function o(t){if(!isNaN(t=+t))return n[c(e,t)]}return o.invertExtent=function(r){var i=n.indexOf(r);return i<0?[NaN,NaN]:[i>0?e[i-1]:t[0],i<e.length?e[i]:t[t.length-1]]},o.domain=function(n){if(!arguments.length)return t.slice();t=[];for(var e,o=0,u=n.length;o<u;++o)null==(e=n[o])||isNaN(e=+e)||t.push(e);return t.sort(r),i()},o.range=function(t){return arguments.length?(n=bp.call(t),i()):n.slice()},o.quantiles=function(){return e.slice()},o.copy=function(){return Xp().domain(t).range(n)},o}function Vp(){var t=0,n=1,e=1,r=[.5],i=[0,1];function o(t){if(t<=t)return i[c(r,t,0,e)]}function u(){var i=-1;for(r=new Array(e);++i<e;)r[i]=((i+1)*n-(i-e)*t)/(e+1);return o}return o.domain=function(e){return arguments.length?(t=+e[0],n=+e[1],u()):[t,n]},o.range=function(t){return arguments.length?(e=(i=bp.call(t)).length-1,u()):i.slice()},o.invertExtent=function(o){var u=i.indexOf(o);return u<0?[NaN,NaN]:u<1?[t,r[0]]:u>=e?[r[e-1],n]:[r[u-1],r[u]]},o.copy=function(){return Vp().domain([t,n]).range(i)},zp(o)}function Wp(){var t=[.5],n=[0,1],e=1;function r(r){if(r<=r)return n[c(t,r,0,e)]}return r.domain=function(i){return arguments.length?(t=bp.call(i),e=Math.min(t.length,n.length-1),r):t.slice()},r.range=function(i){return arguments.length?(n=bp.call(i),e=Math.min(t.length,n.length-1),r):n.slice()},r.invertExtent=function(e){var r=n.indexOf(e);return[t[r-1],t[r]]},r.copy=function(){return Wp().domain(t).range(n)},r}var $p=new Date,Zp=new Date;function Qp(t,n,e,r){function i(n){return t(n=new Date(+n)),n}return i.floor=i,i.ceil=function(e){return t(e=new Date(e-1)),n(e,1),t(e),e},i.round=function(t){var n=i(t),e=i.ceil(t);return t-n<e-t?n:e},i.offset=function(t,e){return n(t=new Date(+t),null==e?1:Math.floor(e)),t},i.range=function(e,r,o){var u,a=[];if(e=i.ceil(e),o=null==o?1:Math.floor(o),!(e<r&&o>0))return a;do{a.push(u=new Date(+e)),n(e,o),t(e)}while(u<e&&e<r);return a},i.filter=function(e){return Qp(function(n){if(n>=n)for(;t(n),!e(n);)n.setTime(n-1)},function(t,r){if(t>=t)if(r<0)for(;++r<=0;)for(;n(t,-1),!e(t););else for(;--r>=0;)for(;n(t,1),!e(t););})},e&&(i.count=function(n,r){return $p.setTime(+n),Zp.setTime(+r),t($p),t(Zp),Math.floor(e($p,Zp))},i.every=function(t){return t=Math.floor(t),isFinite(t)&&t>0?t>1?i.filter(r?function(n){return r(n)%t==0}:function(n){return i.count(0,n)%t==0}):i:null}),i}var Jp=Qp(function(){},function(t,n){t.setTime(+t+n)},function(t,n){return n-t});Jp.every=function(t){return t=Math.floor(t),isFinite(t)&&t>0?t>1?Qp(function(n){n.setTime(Math.floor(n/t)*t)},function(n,e){n.setTime(+n+e*t)},function(n,e){return(e-n)/t}):Jp:null};var Kp=Jp,tv=Jp.range,nv=6e4,ev=6048e5,rv=Qp(function(t){t.setTime(1e3*Math.floor(t/1e3))},function(t,n){t.setTime(+t+1e3*n)},function(t,n){return(n-t)/1e3},function(t){return t.getUTCSeconds()}),iv=rv,ov=rv.range,uv=Qp(function(t){t.setTime(Math.floor(t/nv)*nv)},function(t,n){t.setTime(+t+n*nv)},function(t,n){return(n-t)/nv},function(t){return t.getMinutes()}),av=uv,cv=uv.range,fv=Qp(function(t){var n=t.getTimezoneOffset()*nv%36e5;n<0&&(n+=36e5),t.setTime(36e5*Math.floor((+t-n)/36e5)+n)},function(t,n){t.setTime(+t+36e5*n)},function(t,n){return(n-t)/36e5},function(t){return t.getHours()}),sv=fv,lv=fv.range,hv=Qp(function(t){t.setHours(0,0,0,0)},function(t,n){t.setDate(t.getDate()+n)},function(t,n){return(n-t-(n.getTimezoneOffset()-t.getTimezoneOffset())*nv)/864e5},function(t){return t.getDate()-1}),dv=hv,pv=hv.range;function vv(t){return Qp(function(n){n.setDate(n.getDate()-(n.getDay()+7-t)%7),n.setHours(0,0,0,0)},function(t,n){t.setDate(t.getDate()+7*n)},function(t,n){return(n-t-(n.getTimezoneOffset()-t.getTimezoneOffset())*nv)/ev})}var gv=vv(0),yv=vv(1),bv=vv(2),_v=vv(3),mv=vv(4),xv=vv(5),wv=vv(6),Mv=gv.range,Sv=yv.range,Av=bv.range,Cv=_v.range,Nv=mv.range,kv=xv.range,Tv=wv.range,Ev=Qp(function(t){t.setDate(1),t.setHours(0,0,0,0)},function(t,n){t.setMonth(t.getMonth()+n)},function(t,n){return n.getMonth()-t.getMonth()+12*(n.getFullYear()-t.getFullYear())},function(t){return t.getMonth()}),Pv=Ev,zv=Ev.range,Lv=Qp(function(t){t.setMonth(0,1),t.setHours(0,0,0,0)},function(t,n){t.setFullYear(t.getFullYear()+n)},function(t,n){return n.getFullYear()-t.getFullYear()},function(t){return t.getFullYear()});Lv.every=function(t){return isFinite(t=Math.floor(t))&&t>0?Qp(function(n){n.setFullYear(Math.floor(n.getFullYear()/t)*t),n.setMonth(0,1),n.setHours(0,0,0,0)},function(n,e){n.setFullYear(n.getFullYear()+e*t)}):null};var Rv=Lv,Dv=Lv.range,Ov=Qp(function(t){t.setUTCSeconds(0,0)},function(t,n){t.setTime(+t+n*nv)},function(t,n){return(n-t)/nv},function(t){return t.getUTCMinutes()}),qv=Ov,Uv=Ov.range,Bv=Qp(function(t){t.setUTCMinutes(0,0,0)},function(t,n){t.setTime(+t+36e5*n)},function(t,n){return(n-t)/36e5},function(t){return t.getUTCHours()}),Yv=Bv,Hv=Bv.range,Iv=Qp(function(t){t.setUTCHours(0,0,0,0)},function(t,n){t.setUTCDate(t.getUTCDate()+n)},function(t,n){return(n-t)/864e5},function(t){return t.getUTCDate()-1}),Fv=Iv,jv=Iv.range;function Gv(t){return Qp(function(n){n.setUTCDate(n.getUTCDate()-(n.getUTCDay()+7-t)%7),n.setUTCHours(0,0,0,0)},function(t,n){t.setUTCDate(t.getUTCDate()+7*n)},function(t,n){return(n-t)/ev})}var Xv=Gv(0),Vv=Gv(1),Wv=Gv(2),$v=Gv(3),Zv=Gv(4),Qv=Gv(5),Jv=Gv(6),Kv=Xv.range,tg=Vv.range,ng=Wv.range,eg=$v.range,rg=Zv.range,ig=Qv.range,og=Jv.range,ug=Qp(function(t){t.setUTCDate(1),t.setUTCHours(0,0,0,0)},function(t,n){t.setUTCMonth(t.getUTCMonth()+n)},function(t,n){return n.getUTCMonth()-t.getUTCMonth()+12*(n.getUTCFullYear()-t.getUTCFullYear())},function(t){return t.getUTCMonth()}),ag=ug,cg=ug.range,fg=Qp(function(t){t.setUTCMonth(0,1),t.setUTCHours(0,0,0,0)},function(t,n){t.setUTCFullYear(t.getUTCFullYear()+n)},function(t,n){return n.getUTCFullYear()-t.getUTCFullYear()},function(t){return t.getUTCFullYear()});fg.every=function(t){return isFinite(t=Math.floor(t))&&t>0?Qp(function(n){n.setUTCFullYear(Math.floor(n.getUTCFullYear()/t)*t),n.setUTCMonth(0,1),n.setUTCHours(0,0,0,0)},function(n,e){n.setUTCFullYear(n.getUTCFullYear()+e*t)}):null};var sg=fg,lg=fg.range;function hg(t){if(0<=t.y&&t.y<100){var n=new Date(-1,t.m,t.d,t.H,t.M,t.S,t.L);return n.setFullYear(t.y),n}return new Date(t.y,t.m,t.d,t.H,t.M,t.S,t.L)}function dg(t){if(0<=t.y&&t.y<100){var n=new Date(Date.UTC(-1,t.m,t.d,t.H,t.M,t.S,t.L));return n.setUTCFullYear(t.y),n}return new Date(Date.UTC(t.y,t.m,t.d,t.H,t.M,t.S,t.L))}function pg(t){return{y:t,m:0,d:1,H:0,M:0,S:0,L:0}}function vg(t){var n=t.dateTime,e=t.date,r=t.time,i=t.periods,o=t.days,u=t.shortDays,a=t.months,c=t.shortMonths,f=Ng(i),s=kg(i),l=Ng(o),h=kg(o),d=Ng(u),p=kg(u),v=Ng(a),g=kg(a),y=Ng(c),b=kg(c),_={a:function(t){return u[t.getDay()]},A:function(t){return o[t.getDay()]},b:function(t){return c[t.getMonth()]},B:function(t){return a[t.getMonth()]},c:null,d:Wg,e:Wg,f:Kg,H:$g,I:Zg,j:Qg,L:Jg,m:ty,M:ny,p:function(t){return i[+(t.getHours()>=12)]},Q:Ty,s:Ey,S:ey,u:ry,U:iy,V:oy,w:uy,W:ay,x:null,X:null,y:cy,Y:fy,Z:sy,"%":ky},m={a:function(t){return u[t.getUTCDay()]},A:function(t){return o[t.getUTCDay()]},b:function(t){return c[t.getUTCMonth()]},B:function(t){return a[t.getUTCMonth()]},c:null,d:ly,e:ly,f:gy,H:hy,I:dy,j:py,L:vy,m:yy,M:by,p:function(t){return i[+(t.getUTCHours()>=12)]},Q:Ty,s:Ey,S:_y,u:my,U:xy,V:wy,w:My,W:Sy,x:null,X:null,y:Ay,Y:Cy,Z:Ny,"%":ky},x={a:function(t,n,e){var r=d.exec(n.slice(e));return r?(t.w=p[r[0].toLowerCase()],e+r[0].length):-1},A:function(t,n,e){var r=l.exec(n.slice(e));return r?(t.w=h[r[0].toLowerCase()],e+r[0].length):-1},b:function(t,n,e){var r=y.exec(n.slice(e));return r?(t.m=b[r[0].toLowerCase()],e+r[0].length):-1},B:function(t,n,e){var r=v.exec(n.slice(e));return r?(t.m=g[r[0].toLowerCase()],e+r[0].length):-1},c:function(t,e,r){return S(t,n,e,r)},d:Ug,e:Ug,f:jg,H:Yg,I:Yg,j:Bg,L:Fg,m:qg,M:Hg,p:function(t,n,e){var r=f.exec(n.slice(e));return r?(t.p=s[r[0].toLowerCase()],e+r[0].length):-1},Q:Xg,s:Vg,S:Ig,u:Eg,U:Pg,V:zg,w:Tg,W:Lg,x:function(t,n,r){return S(t,e,n,r)},X:function(t,n,e){return S(t,r,n,e)},y:Dg,Y:Rg,Z:Og,"%":Gg};function w(t,n){return function(e){var r,i,o,u=[],a=-1,c=0,f=t.length;for(e instanceof Date||(e=new Date(+e));++a<f;)37===t.charCodeAt(a)&&(u.push(t.slice(c,a)),null!=(i=xg[r=t.charAt(++a)])?r=t.charAt(++a):i="e"===r?" ":"0",(o=n[r])&&(r=o(e,i)),u.push(r),c=a+1);return u.push(t.slice(c,a)),u.join("")}}function M(t,n){return function(e){var r,i,o=pg(1900);if(S(o,t,e+="",0)!=e.length)return null;if("Q"in o)return new Date(o.Q);if("p"in o&&(o.H=o.H%12+12*o.p),"V"in o){if(o.V<1||o.V>53)return null;"w"in o||(o.w=1),"Z"in o?(r=(i=(r=dg(pg(o.y))).getUTCDay())>4||0===i?Vv.ceil(r):Vv(r),r=Fv.offset(r,7*(o.V-1)),o.y=r.getUTCFullYear(),o.m=r.getUTCMonth(),o.d=r.getUTCDate()+(o.w+6)%7):(r=(i=(r=n(pg(o.y))).getDay())>4||0===i?yv.ceil(r):yv(r),r=dv.offset(r,7*(o.V-1)),o.y=r.getFullYear(),o.m=r.getMonth(),o.d=r.getDate()+(o.w+6)%7)}else("W"in o||"U"in o)&&("w"in o||(o.w="u"in o?o.u%7:"W"in o?1:0),i="Z"in o?dg(pg(o.y)).getUTCDay():n(pg(o.y)).getDay(),o.m=0,o.d="W"in o?(o.w+6)%7+7*o.W-(i+5)%7:o.w+7*o.U-(i+6)%7);return"Z"in o?(o.H+=o.Z/100|0,o.M+=o.Z%100,dg(o)):n(o)}}function S(t,n,e,r){for(var i,o,u=0,a=n.length,c=e.length;u<a;){if(r>=c)return-1;if(37===(i=n.charCodeAt(u++))){if(i=n.charAt(u++),!(o=x[i in xg?n.charAt(u++):i])||(r=o(t,e,r))<0)return-1}else if(i!=e.charCodeAt(r++))return-1}return r}return _.x=w(e,_),_.X=w(r,_),_.c=w(n,_),m.x=w(e,m),m.X=w(r,m),m.c=w(n,m),{format:function(t){var n=w(t+="",_);return n.toString=function(){return t},n},parse:function(t){var n=M(t+="",hg);return n.toString=function(){return t},n},utcFormat:function(t){var n=w(t+="",m);return n.toString=function(){return t},n},utcParse:function(t){var n=M(t,dg);return n.toString=function(){return t},n}}}var gg,yg,bg,_g,mg,xg={"-":"",_:" ",0:"0"},wg=/^\s*\d+/,Mg=/^%/,Sg=/[\\^$*+?|[\]().{}]/g;function Ag(t,n,e){var r=t<0?"-":"",i=(r?-t:t)+"",o=i.length;return r+(o<e?new Array(e-o+1).join(n)+i:i)}function Cg(t){return t.replace(Sg,"\\$&")}function Ng(t){return new RegExp("^(?:"+t.map(Cg).join("|")+")","i")}function kg(t){for(var n={},e=-1,r=t.length;++e<r;)n[t[e].toLowerCase()]=e;return n}function Tg(t,n,e){var r=wg.exec(n.slice(e,e+1));return r?(t.w=+r[0],e+r[0].length):-1}function Eg(t,n,e){var r=wg.exec(n.slice(e,e+1));return r?(t.u=+r[0],e+r[0].length):-1}function Pg(t,n,e){var r=wg.exec(n.slice(e,e+2));return r?(t.U=+r[0],e+r[0].length):-1}function zg(t,n,e){var r=wg.exec(n.slice(e,e+2));return r?(t.V=+r[0],e+r[0].length):-1}function Lg(t,n,e){var r=wg.exec(n.slice(e,e+2));return r?(t.W=+r[0],e+r[0].length):-1}function Rg(t,n,e){var r=wg.exec(n.slice(e,e+4));return r?(t.y=+r[0],e+r[0].length):-1}function Dg(t,n,e){var r=wg.exec(n.slice(e,e+2));return r?(t.y=+r[0]+(+r[0]>68?1900:2e3),e+r[0].length):-1}function Og(t,n,e){var r=/^(Z)|([+-]\d\d)(?::?(\d\d))?/.exec(n.slice(e,e+6));return r?(t.Z=r[1]?0:-(r[2]+(r[3]||"00")),e+r[0].length):-1}function qg(t,n,e){var r=wg.exec(n.slice(e,e+2));return r?(t.m=r[0]-1,e+r[0].length):-1}function Ug(t,n,e){var r=wg.exec(n.slice(e,e+2));return r?(t.d=+r[0],e+r[0].length):-1}function Bg(t,n,e){var r=wg.exec(n.slice(e,e+3));return r?(t.m=0,t.d=+r[0],e+r[0].length):-1}function Yg(t,n,e){var r=wg.exec(n.slice(e,e+2));return r?(t.H=+r[0],e+r[0].length):-1}function Hg(t,n,e){var r=wg.exec(n.slice(e,e+2));return r?(t.M=+r[0],e+r[0].length):-1}function Ig(t,n,e){var r=wg.exec(n.slice(e,e+2));return r?(t.S=+r[0],e+r[0].length):-1}function Fg(t,n,e){var r=wg.exec(n.slice(e,e+3));return r?(t.L=+r[0],e+r[0].length):-1}function jg(t,n,e){var r=wg.exec(n.slice(e,e+6));return r?(t.L=Math.floor(r[0]/1e3),e+r[0].length):-1}function Gg(t,n,e){var r=Mg.exec(n.slice(e,e+1));return r?e+r[0].length:-1}function Xg(t,n,e){var r=wg.exec(n.slice(e));return r?(t.Q=+r[0],e+r[0].length):-1}function Vg(t,n,e){var r=wg.exec(n.slice(e));return r?(t.Q=1e3*+r[0],e+r[0].length):-1}function Wg(t,n){return Ag(t.getDate(),n,2)}function $g(t,n){return Ag(t.getHours(),n,2)}function Zg(t,n){return Ag(t.getHours()%12||12,n,2)}function Qg(t,n){return Ag(1+dv.count(Rv(t),t),n,3)}function Jg(t,n){return Ag(t.getMilliseconds(),n,3)}function Kg(t,n){return Jg(t,n)+"000"}function ty(t,n){return Ag(t.getMonth()+1,n,2)}function ny(t,n){return Ag(t.getMinutes(),n,2)}function ey(t,n){return Ag(t.getSeconds(),n,2)}function ry(t){var n=t.getDay();return 0===n?7:n}function iy(t,n){return Ag(gv.count(Rv(t),t),n,2)}function oy(t,n){var e=t.getDay();return t=e>=4||0===e?mv(t):mv.ceil(t),Ag(mv.count(Rv(t),t)+(4===Rv(t).getDay()),n,2)}function uy(t){return t.getDay()}function ay(t,n){return Ag(yv.count(Rv(t),t),n,2)}function cy(t,n){return Ag(t.getFullYear()%100,n,2)}function fy(t,n){return Ag(t.getFullYear()%1e4,n,4)}function sy(t){var n=t.getTimezoneOffset();return(n>0?"-":(n*=-1,"+"))+Ag(n/60|0,"0",2)+Ag(n%60,"0",2)}function ly(t,n){return Ag(t.getUTCDate(),n,2)}function hy(t,n){return Ag(t.getUTCHours(),n,2)}function dy(t,n){return Ag(t.getUTCHours()%12||12,n,2)}function py(t,n){return Ag(1+Fv.count(sg(t),t),n,3)}function vy(t,n){return Ag(t.getUTCMilliseconds(),n,3)}function gy(t,n){return vy(t,n)+"000"}function yy(t,n){return Ag(t.getUTCMonth()+1,n,2)}function by(t,n){return Ag(t.getUTCMinutes(),n,2)}function _y(t,n){return Ag(t.getUTCSeconds(),n,2)}function my(t){var n=t.getUTCDay();return 0===n?7:n}function xy(t,n){return Ag(Xv.count(sg(t),t),n,2)}function wy(t,n){var e=t.getUTCDay();return t=e>=4||0===e?Zv(t):Zv.ceil(t),Ag(Zv.count(sg(t),t)+(4===sg(t).getUTCDay()),n,2)}function My(t){return t.getUTCDay()}function Sy(t,n){return Ag(Vv.count(sg(t),t),n,2)}function Ay(t,n){return Ag(t.getUTCFullYear()%100,n,2)}function Cy(t,n){return Ag(t.getUTCFullYear()%1e4,n,4)}function Ny(){return"+0000"}function ky(){return"%"}function Ty(t){return+t}function Ey(t){return Math.floor(+t/1e3)}function Py(t){return gg=vg(t),yg=gg.format,bg=gg.parse,_g=gg.utcFormat,mg=gg.utcParse,gg}Py({dateTime:"%x, %X",date:"%-m/%-d/%Y",time:"%-I:%M:%S %p",periods:["AM","PM"],days:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],shortDays:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],months:["January","February","March","April","May","June","July","August","September","October","November","December"],shortMonths:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]});var zy=Date.prototype.toISOString?function(t){return t.toISOString()}:_g("%Y-%m-%dT%H:%M:%S.%LZ");var Ly=+new Date("2000-01-01T00:00:00.000Z")?function(t){var n=new Date(t);return isNaN(n)?null:n}:mg("%Y-%m-%dT%H:%M:%S.%LZ"),Ry=1e3,Dy=60*Ry,Oy=60*Dy,qy=24*Oy,Uy=7*qy,By=30*qy,Yy=365*qy;function Hy(t){return new Date(t)}function Iy(t){return t instanceof Date?+t:+new Date(+t)}function Fy(t,n,e,r,o,u,a,c,f){var s=Ep(Cp,Ie),l=s.invert,h=s.domain,d=f(".%L"),p=f(":%S"),v=f("%I:%M"),g=f("%I %p"),y=f("%a %d"),b=f("%b %d"),_=f("%B"),m=f("%Y"),x=[[a,1,Ry],[a,5,5*Ry],[a,15,15*Ry],[a,30,30*Ry],[u,1,Dy],[u,5,5*Dy],[u,15,15*Dy],[u,30,30*Dy],[o,1,Oy],[o,3,3*Oy],[o,6,6*Oy],[o,12,12*Oy],[r,1,qy],[r,2,2*qy],[e,1,Uy],[n,1,By],[n,3,3*By],[t,1,Yy]];function w(i){return(a(i)<i?d:u(i)<i?p:o(i)<i?v:r(i)<i?g:n(i)<i?e(i)<i?y:b:t(i)<i?_:m)(i)}function M(n,e,r,o){if(null==n&&(n=10),"number"==typeof n){var u=Math.abs(r-e)/n,a=i(function(t){return t[2]}).right(x,u);a===x.length?(o=k(e/Yy,r/Yy,n),n=t):a?(o=(a=x[u/x[a-1][2]<x[a][2]/u?a-1:a])[1],n=a[0]):(o=Math.max(k(e,r,n),1),n=c)}return null==o?n:n.every(o)}return s.invert=function(t){return new Date(l(t))},s.domain=function(t){return arguments.length?h(yp.call(t,Iy)):h().map(Hy)},s.ticks=function(t,n){var e,r=h(),i=r[0],o=r[r.length-1],u=o<i;return u&&(e=i,i=o,o=e),e=(e=M(t,i,o,n))?e.range(i,o+1):[],u?e.reverse():e},s.tickFormat=function(t,n){return null==n?w:f(n)},s.nice=function(t,n){var e=h();return(t=M(t,e[0],e[e.length-1],n))?h(Dp(e,t)):s},s.copy=function(){return Tp(s,Fy(t,n,e,r,o,u,a,c,f))},s}var jy=function(){return Fy(Rv,Pv,gv,dv,sv,av,iv,Kp,yg).domain([new Date(2e3,0,1),new Date(2e3,0,2)])},Gy=function(){return Fy(sg,ag,Xv,Fv,Yv,qv,iv,Kp,_g).domain([Date.UTC(2e3,0,1),Date.UTC(2e3,0,2)])};function Xy(t){var n=0,e=1,r=1,i=!1;function o(e){var o=(e-n)*r;return t(i?Math.max(0,Math.min(1,o)):o)}return o.domain=function(t){return arguments.length?(n=+t[0],e=+t[1],r=n===e?0:1/(e-n),o):[n,e]},o.clamp=function(t){return arguments.length?(i=!!t,o):i},o.interpolator=function(n){return arguments.length?(t=n,o):t},o.copy=function(){return Xy(t).domain([n,e]).clamp(i)},zp(o)}function Vy(t){var n=0,e=.5,r=1,i=1,o=1,u=!1;function a(n){var r=.5+((n=+n)-e)*(n<e?i:o);return t(u?Math.max(0,Math.min(1,r)):r)}return a.domain=function(t){return arguments.length?(n=+t[0],e=+t[1],r=+t[2],i=n===e?0:.5/(e-n),o=e===r?0:.5/(r-e),a):[n,e,r]},a.clamp=function(t){return arguments.length?(u=!!t,a):u},a.interpolator=function(n){return arguments.length?(t=n,a):t},a.copy=function(){return Vy(t).domain([n,e,r]).clamp(u)},zp(a)}var Wy=function(t){for(var n=t.length/6|0,e=new Array(n),r=0;r<n;)e[r]="#"+t.slice(6*r,6*++r);return e},$y=Wy("1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf"),Zy=Wy("7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666"),Qy=Wy("1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666"),Jy=Wy("a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928"),Ky=Wy("fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2"),tb=Wy("b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc"),nb=Wy("e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999"),eb=Wy("66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3"),rb=Wy("8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f"),ib=function(t){return Ue(t[t.length-1])},ob=new Array(3).concat("d8b365f5f5f55ab4ac","a6611adfc27d80cdc1018571","a6611adfc27df5f5f580cdc1018571","8c510ad8b365f6e8c3c7eae55ab4ac01665e","8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e","8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e","8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e","5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30","5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30").map(Wy),ub=ib(ob),ab=new Array(3).concat("af8dc3f7f7f77fbf7b","7b3294c2a5cfa6dba0008837","7b3294c2a5cff7f7f7a6dba0008837","762a83af8dc3e7d4e8d9f0d37fbf7b1b7837","762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837","762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837","762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837","40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b","40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b").map(Wy),cb=ib(ab),fb=new Array(3).concat("e9a3c9f7f7f7a1d76a","d01c8bf1b6dab8e1864dac26","d01c8bf1b6daf7f7f7b8e1864dac26","c51b7de9a3c9fde0efe6f5d0a1d76a4d9221","c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221","c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221","c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221","8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419","8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419").map(Wy),sb=ib(fb),lb=new Array(3).concat("998ec3f7f7f7f1a340","5e3c99b2abd2fdb863e66101","5e3c99b2abd2f7f7f7fdb863e66101","542788998ec3d8daebfee0b6f1a340b35806","542788998ec3d8daebf7f7f7fee0b6f1a340b35806","5427888073acb2abd2d8daebfee0b6fdb863e08214b35806","5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806","2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08","2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08").map(Wy),hb=ib(lb),db=new Array(3).concat("ef8a62f7f7f767a9cf","ca0020f4a58292c5de0571b0","ca0020f4a582f7f7f792c5de0571b0","b2182bef8a62fddbc7d1e5f067a9cf2166ac","b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac","b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac","b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac","67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061","67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061").map(Wy),pb=ib(db),vb=new Array(3).concat("ef8a62ffffff999999","ca0020f4a582bababa404040","ca0020f4a582ffffffbababa404040","b2182bef8a62fddbc7e0e0e09999994d4d4d","b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d","b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d","b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d","67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a","67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a").map(Wy),gb=ib(vb),yb=new Array(3).concat("fc8d59ffffbf91bfdb","d7191cfdae61abd9e92c7bb6","d7191cfdae61ffffbfabd9e92c7bb6","d73027fc8d59fee090e0f3f891bfdb4575b4","d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4","d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4","d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4","a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695","a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695").map(Wy),bb=ib(yb),_b=new Array(3).concat("fc8d59ffffbf91cf60","d7191cfdae61a6d96a1a9641","d7191cfdae61ffffbfa6d96a1a9641","d73027fc8d59fee08bd9ef8b91cf601a9850","d73027fc8d59fee08bffffbfd9ef8b91cf601a9850","d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850","d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850","a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837","a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837").map(Wy),mb=ib(_b),xb=new Array(3).concat("fc8d59ffffbf99d594","d7191cfdae61abdda42b83ba","d7191cfdae61ffffbfabdda42b83ba","d53e4ffc8d59fee08be6f59899d5943288bd","d53e4ffc8d59fee08bffffbfe6f59899d5943288bd","d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd","d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd","9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2","9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2").map(Wy),wb=ib(xb),Mb=new Array(3).concat("e5f5f999d8c92ca25f","edf8fbb2e2e266c2a4238b45","edf8fbb2e2e266c2a42ca25f006d2c","edf8fbccece699d8c966c2a42ca25f006d2c","edf8fbccece699d8c966c2a441ae76238b45005824","f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824","f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b").map(Wy),Sb=ib(Mb),Ab=new Array(3).concat("e0ecf49ebcda8856a7","edf8fbb3cde38c96c688419d","edf8fbb3cde38c96c68856a7810f7c","edf8fbbfd3e69ebcda8c96c68856a7810f7c","edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b","f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b","f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b").map(Wy),Cb=ib(Ab),Nb=new Array(3).concat("e0f3dba8ddb543a2ca","f0f9e8bae4bc7bccc42b8cbe","f0f9e8bae4bc7bccc443a2ca0868ac","f0f9e8ccebc5a8ddb57bccc443a2ca0868ac","f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e","f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e","f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081").map(Wy),kb=ib(Nb),Tb=new Array(3).concat("fee8c8fdbb84e34a33","fef0d9fdcc8afc8d59d7301f","fef0d9fdcc8afc8d59e34a33b30000","fef0d9fdd49efdbb84fc8d59e34a33b30000","fef0d9fdd49efdbb84fc8d59ef6548d7301f990000","fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000","fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000").map(Wy),Eb=ib(Tb),Pb=new Array(3).concat("ece2f0a6bddb1c9099","f6eff7bdc9e167a9cf02818a","f6eff7bdc9e167a9cf1c9099016c59","f6eff7d0d1e6a6bddb67a9cf1c9099016c59","f6eff7d0d1e6a6bddb67a9cf3690c002818a016450","fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450","fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636").map(Wy),zb=ib(Pb),Lb=new Array(3).concat("ece7f2a6bddb2b8cbe","f1eef6bdc9e174a9cf0570b0","f1eef6bdc9e174a9cf2b8cbe045a8d","f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d","f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b","fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b","fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858").map(Wy),Rb=ib(Lb),Db=new Array(3).concat("e7e1efc994c7dd1c77","f1eef6d7b5d8df65b0ce1256","f1eef6d7b5d8df65b0dd1c77980043","f1eef6d4b9dac994c7df65b0dd1c77980043","f1eef6d4b9dac994c7df65b0e7298ace125691003f","f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f","f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f").map(Wy),Ob=ib(Db),qb=new Array(3).concat("fde0ddfa9fb5c51b8a","feebe2fbb4b9f768a1ae017e","feebe2fbb4b9f768a1c51b8a7a0177","feebe2fcc5c0fa9fb5f768a1c51b8a7a0177","feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177","fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177","fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a").map(Wy),Ub=ib(qb),Bb=new Array(3).concat("edf8b17fcdbb2c7fb8","ffffcca1dab441b6c4225ea8","ffffcca1dab441b6c42c7fb8253494","ffffccc7e9b47fcdbb41b6c42c7fb8253494","ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84","ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84","ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58").map(Wy),Yb=ib(Bb),Hb=new Array(3).concat("f7fcb9addd8e31a354","ffffccc2e69978c679238443","ffffccc2e69978c67931a354006837","ffffccd9f0a3addd8e78c67931a354006837","ffffccd9f0a3addd8e78c67941ab5d238443005a32","ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32","ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529").map(Wy),Ib=ib(Hb),Fb=new Array(3).concat("fff7bcfec44fd95f0e","ffffd4fed98efe9929cc4c02","ffffd4fed98efe9929d95f0e993404","ffffd4fee391fec44ffe9929d95f0e993404","ffffd4fee391fec44ffe9929ec7014cc4c028c2d04","ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04","ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506").map(Wy),jb=ib(Fb),Gb=new Array(3).concat("ffeda0feb24cf03b20","ffffb2fecc5cfd8d3ce31a1c","ffffb2fecc5cfd8d3cf03b20bd0026","ffffb2fed976feb24cfd8d3cf03b20bd0026","ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026","ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026","ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026").map(Wy),Xb=ib(Gb),Vb=new Array(3).concat("deebf79ecae13182bd","eff3ffbdd7e76baed62171b5","eff3ffbdd7e76baed63182bd08519c","eff3ffc6dbef9ecae16baed63182bd08519c","eff3ffc6dbef9ecae16baed64292c62171b5084594","f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594","f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b").map(Wy),Wb=ib(Vb),$b=new Array(3).concat("e5f5e0a1d99b31a354","edf8e9bae4b374c476238b45","edf8e9bae4b374c47631a354006d2c","edf8e9c7e9c0a1d99b74c47631a354006d2c","edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32","f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32","f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b").map(Wy),Zb=ib($b),Qb=new Array(3).concat("f0f0f0bdbdbd636363","f7f7f7cccccc969696525252","f7f7f7cccccc969696636363252525","f7f7f7d9d9d9bdbdbd969696636363252525","f7f7f7d9d9d9bdbdbd969696737373525252252525","fffffff0f0f0d9d9d9bdbdbd969696737373525252252525","fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000").map(Wy),Jb=ib(Qb),Kb=new Array(3).concat("efedf5bcbddc756bb1","f2f0f7cbc9e29e9ac86a51a3","f2f0f7cbc9e29e9ac8756bb154278f","f2f0f7dadaebbcbddc9e9ac8756bb154278f","f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486","fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486","fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d").map(Wy),t_=ib(Kb),n_=new Array(3).concat("fee0d2fc9272de2d26","fee5d9fcae91fb6a4acb181d","fee5d9fcae91fb6a4ade2d26a50f15","fee5d9fcbba1fc9272fb6a4ade2d26a50f15","fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d","fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d","fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d").map(Wy),e_=ib(n_),r_=new Array(3).concat("fee6cefdae6be6550d","feeddefdbe85fd8d3cd94701","feeddefdbe85fd8d3ce6550da63603","feeddefdd0a2fdae6bfd8d3ce6550da63603","feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04","fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04","fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704").map(Wy),i_=ib(r_),o_=_r(Ce(300,.5,0),Ce(-240,.5,1)),u_=_r(Ce(-100,.75,.35),Ce(80,1.5,.8)),a_=_r(Ce(260,.75,.35),Ce(80,1.5,.8)),c_=Ce(),f_=function(t){(t<0||t>1)&&(t-=Math.floor(t));var n=Math.abs(t-.5);return c_.h=360*t-100,c_.s=1.5-1.5*n,c_.l=.8-.9*n,c_+""},s_=Xn(),l_=Math.PI/3,h_=2*Math.PI/3,d_=function(t){var n;return t=(.5-t)*Math.PI,s_.r=255*(n=Math.sin(t))*n,s_.g=255*(n=Math.sin(t+l_))*n,s_.b=255*(n=Math.sin(t+h_))*n,s_+""};function p_(t){var n=t.length;return function(e){return t[Math.max(0,Math.min(n-1,Math.floor(e*n)))]}}var v_=p_(Wy("44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725")),g_=p_(Wy("00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf")),y_=p_(Wy("00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4")),b_=p_(Wy("0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921")),__=function(t){return function(){return t}},m_=Math.abs,x_=Math.atan2,w_=Math.cos,M_=Math.max,S_=Math.min,A_=Math.sin,C_=Math.sqrt,N_=1e-12,k_=Math.PI,T_=k_/2,E_=2*k_;function P_(t){return t>=1?T_:t<=-1?-T_:Math.asin(t)}function z_(t){return t.innerRadius}function L_(t){return t.outerRadius}function R_(t){return t.startAngle}function D_(t){return t.endAngle}function O_(t){return t&&t.padAngle}function q_(t,n,e,r,i,o,u){var a=t-e,c=n-r,f=(u?o:-o)/C_(a*a+c*c),s=f*c,l=-f*a,h=t+s,d=n+l,p=e+s,v=r+l,g=(h+p)/2,y=(d+v)/2,b=p-h,_=v-d,m=b*b+_*_,x=i-o,w=h*v-p*d,M=(_<0?-1:1)*C_(M_(0,x*x*m-w*w)),S=(w*_-b*M)/m,A=(-w*b-_*M)/m,C=(w*_+b*M)/m,N=(-w*b+_*M)/m,k=S-g,T=A-y,E=C-g,P=N-y;return k*k+T*T>E*E+P*P&&(S=C,A=N),{cx:S,cy:A,x01:-s,y01:-l,x11:S*(i/x-1),y11:A*(i/x-1)}}var U_=function(){var t=z_,n=L_,e=__(0),r=null,i=R_,o=D_,u=O_,a=null;function c(){var c,f,s=+t.apply(this,arguments),l=+n.apply(this,arguments),h=i.apply(this,arguments)-T_,d=o.apply(this,arguments)-T_,p=m_(d-h),v=d>h;if(a||(a=c=Fo()),l<s&&(f=l,l=s,s=f),l>N_)if(p>E_-N_)a.moveTo(l*w_(h),l*A_(h)),a.arc(0,0,l,h,d,!v),s>N_&&(a.moveTo(s*w_(d),s*A_(d)),a.arc(0,0,s,d,h,v));else{var g,y,b=h,_=d,m=h,x=d,w=p,M=p,S=u.apply(this,arguments)/2,A=S>N_&&(r?+r.apply(this,arguments):C_(s*s+l*l)),C=S_(m_(l-s)/2,+e.apply(this,arguments)),N=C,k=C;if(A>N_){var T=P_(A/s*A_(S)),E=P_(A/l*A_(S));(w-=2*T)>N_?(m+=T*=v?1:-1,x-=T):(w=0,m=x=(h+d)/2),(M-=2*E)>N_?(b+=E*=v?1:-1,_-=E):(M=0,b=_=(h+d)/2)}var P=l*w_(b),z=l*A_(b),L=s*w_(x),R=s*A_(x);if(C>N_){var D=l*w_(_),O=l*A_(_),q=s*w_(m),U=s*A_(m);if(p<k_){var B=w>N_?function(t,n,e,r,i,o,u,a){var c=e-t,f=r-n,s=u-i,l=a-o,h=(s*(n-o)-l*(t-i))/(l*c-s*f);return[t+h*c,n+h*f]}(P,z,q,U,D,O,L,R):[L,R],Y=P-B[0],H=z-B[1],I=D-B[0],F=O-B[1],j=1/A_(function(t){return t>1?0:t<-1?k_:Math.acos(t)}((Y*I+H*F)/(C_(Y*Y+H*H)*C_(I*I+F*F)))/2),G=C_(B[0]*B[0]+B[1]*B[1]);N=S_(C,(s-G)/(j-1)),k=S_(C,(l-G)/(j+1))}}M>N_?k>N_?(g=q_(q,U,P,z,l,k,v),y=q_(D,O,L,R,l,k,v),a.moveTo(g.cx+g.x01,g.cy+g.y01),k<C?a.arc(g.cx,g.cy,k,x_(g.y01,g.x01),x_(y.y01,y.x01),!v):(a.arc(g.cx,g.cy,k,x_(g.y01,g.x01),x_(g.y11,g.x11),!v),a.arc(0,0,l,x_(g.cy+g.y11,g.cx+g.x11),x_(y.cy+y.y11,y.cx+y.x11),!v),a.arc(y.cx,y.cy,k,x_(y.y11,y.x11),x_(y.y01,y.x01),!v))):(a.moveTo(P,z),a.arc(0,0,l,b,_,!v)):a.moveTo(P,z),s>N_&&w>N_?N>N_?(g=q_(L,R,D,O,s,-N,v),y=q_(P,z,q,U,s,-N,v),a.lineTo(g.cx+g.x01,g.cy+g.y01),N<C?a.arc(g.cx,g.cy,N,x_(g.y01,g.x01),x_(y.y01,y.x01),!v):(a.arc(g.cx,g.cy,N,x_(g.y01,g.x01),x_(g.y11,g.x11),!v),a.arc(0,0,s,x_(g.cy+g.y11,g.cx+g.x11),x_(y.cy+y.y11,y.cx+y.x11),v),a.arc(y.cx,y.cy,N,x_(y.y11,y.x11),x_(y.y01,y.x01),!v))):a.arc(0,0,s,x,m,v):a.lineTo(L,R)}else a.moveTo(0,0);if(a.closePath(),c)return a=null,c+""||null}return c.centroid=function(){var e=(+t.apply(this,arguments)+ +n.apply(this,arguments))/2,r=(+i.apply(this,arguments)+ +o.apply(this,arguments))/2-k_/2;return[w_(r)*e,A_(r)*e]},c.innerRadius=function(n){return arguments.length?(t="function"==typeof n?n:__(+n),c):t},c.outerRadius=function(t){return arguments.length?(n="function"==typeof t?t:__(+t),c):n},c.cornerRadius=function(t){return arguments.length?(e="function"==typeof t?t:__(+t),c):e},c.padRadius=function(t){return arguments.length?(r=null==t?null:"function"==typeof t?t:__(+t),c):r},c.startAngle=function(t){return arguments.length?(i="function"==typeof t?t:__(+t),c):i},c.endAngle=function(t){return arguments.length?(o="function"==typeof t?t:__(+t),c):o},c.padAngle=function(t){return arguments.length?(u="function"==typeof t?t:__(+t),c):u},c.context=function(t){return arguments.length?(a=null==t?null:t,c):a},c};function B_(t){this._context=t}B_.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2;default:this._context.lineTo(t,n)}}};var Y_=function(t){return new B_(t)};function H_(t){return t[0]}function I_(t){return t[1]}var F_=function(){var t=H_,n=I_,e=__(!0),r=null,i=Y_,o=null;function u(u){var a,c,f,s=u.length,l=!1;for(null==r&&(o=i(f=Fo())),a=0;a<=s;++a)!(a<s&&e(c=u[a],a,u))===l&&((l=!l)?o.lineStart():o.lineEnd()),l&&o.point(+t(c,a,u),+n(c,a,u));if(f)return o=null,f+""||null}return u.x=function(n){return arguments.length?(t="function"==typeof n?n:__(+n),u):t},u.y=function(t){return arguments.length?(n="function"==typeof t?t:__(+t),u):n},u.defined=function(t){return arguments.length?(e="function"==typeof t?t:__(!!t),u):e},u.curve=function(t){return arguments.length?(i=t,null!=r&&(o=i(r)),u):i},u.context=function(t){return arguments.length?(null==t?r=o=null:o=i(r=t),u):r},u},j_=function(){var t=H_,n=null,e=__(0),r=I_,i=__(!0),o=null,u=Y_,a=null;function c(c){var f,s,l,h,d,p=c.length,v=!1,g=new Array(p),y=new Array(p);for(null==o&&(a=u(d=Fo())),f=0;f<=p;++f){if(!(f<p&&i(h=c[f],f,c))===v)if(v=!v)s=f,a.areaStart(),a.lineStart();else{for(a.lineEnd(),a.lineStart(),l=f-1;l>=s;--l)a.point(g[l],y[l]);a.lineEnd(),a.areaEnd()}v&&(g[f]=+t(h,f,c),y[f]=+e(h,f,c),a.point(n?+n(h,f,c):g[f],r?+r(h,f,c):y[f]))}if(d)return a=null,d+""||null}function f(){return F_().defined(i).curve(u).context(o)}return c.x=function(e){return arguments.length?(t="function"==typeof e?e:__(+e),n=null,c):t},c.x0=function(n){return arguments.length?(t="function"==typeof n?n:__(+n),c):t},c.x1=function(t){return arguments.length?(n=null==t?null:"function"==typeof t?t:__(+t),c):n},c.y=function(t){return arguments.length?(e="function"==typeof t?t:__(+t),r=null,c):e},c.y0=function(t){return arguments.length?(e="function"==typeof t?t:__(+t),c):e},c.y1=function(t){return arguments.length?(r=null==t?null:"function"==typeof t?t:__(+t),c):r},c.lineX0=c.lineY0=function(){return f().x(t).y(e)},c.lineY1=function(){return f().x(t).y(r)},c.lineX1=function(){return f().x(n).y(e)},c.defined=function(t){return arguments.length?(i="function"==typeof t?t:__(!!t),c):i},c.curve=function(t){return arguments.length?(u=t,null!=o&&(a=u(o)),c):u},c.context=function(t){return arguments.length?(null==t?o=a=null:a=u(o=t),c):o},c},G_=function(t,n){return n<t?-1:n>t?1:n>=t?0:NaN},X_=function(t){return t},V_=function(){var t=X_,n=G_,e=null,r=__(0),i=__(E_),o=__(0);function u(u){var a,c,f,s,l,h=u.length,d=0,p=new Array(h),v=new Array(h),g=+r.apply(this,arguments),y=Math.min(E_,Math.max(-E_,i.apply(this,arguments)-g)),b=Math.min(Math.abs(y)/h,o.apply(this,arguments)),_=b*(y<0?-1:1);for(a=0;a<h;++a)(l=v[p[a]=a]=+t(u[a],a,u))>0&&(d+=l);for(null!=n?p.sort(function(t,e){return n(v[t],v[e])}):null!=e&&p.sort(function(t,n){return e(u[t],u[n])}),a=0,f=d?(y-h*_)/d:0;a<h;++a,g=s)c=p[a],s=g+((l=v[c])>0?l*f:0)+_,v[c]={data:u[c],index:a,value:l,startAngle:g,endAngle:s,padAngle:b};return v}return u.value=function(n){return arguments.length?(t="function"==typeof n?n:__(+n),u):t},u.sortValues=function(t){return arguments.length?(n=t,e=null,u):n},u.sort=function(t){return arguments.length?(e=t,n=null,u):e},u.startAngle=function(t){return arguments.length?(r="function"==typeof t?t:__(+t),u):r},u.endAngle=function(t){return arguments.length?(i="function"==typeof t?t:__(+t),u):i},u.padAngle=function(t){return arguments.length?(o="function"==typeof t?t:__(+t),u):o},u},W_=Z_(Y_);function $_(t){this._curve=t}function Z_(t){function n(n){return new $_(t(n))}return n._curve=t,n}function Q_(t){var n=t.curve;return t.angle=t.x,delete t.x,t.radius=t.y,delete t.y,t.curve=function(t){return arguments.length?n(Z_(t)):n()._curve},t}$_.prototype={areaStart:function(){this._curve.areaStart()},areaEnd:function(){this._curve.areaEnd()},lineStart:function(){this._curve.lineStart()},lineEnd:function(){this._curve.lineEnd()},point:function(t,n){this._curve.point(n*Math.sin(t),n*-Math.cos(t))}};var J_=function(){return Q_(F_().curve(W_))},K_=function(){var t=j_().curve(W_),n=t.curve,e=t.lineX0,r=t.lineX1,i=t.lineY0,o=t.lineY1;return t.angle=t.x,delete t.x,t.startAngle=t.x0,delete t.x0,t.endAngle=t.x1,delete t.x1,t.radius=t.y,delete t.y,t.innerRadius=t.y0,delete t.y0,t.outerRadius=t.y1,delete t.y1,t.lineStartAngle=function(){return Q_(e())},delete t.lineX0,t.lineEndAngle=function(){return Q_(r())},delete t.lineX1,t.lineInnerRadius=function(){return Q_(i())},delete t.lineY0,t.lineOuterRadius=function(){return Q_(o())},delete t.lineY1,t.curve=function(t){return arguments.length?n(Z_(t)):n()._curve},t},tm=function(t,n){return[(n=+n)*Math.cos(t-=Math.PI/2),n*Math.sin(t)]},nm=Array.prototype.slice;function em(t){return t.source}function rm(t){return t.target}function im(t){var n=em,e=rm,r=H_,i=I_,o=null;function u(){var u,a=nm.call(arguments),c=n.apply(this,a),f=e.apply(this,a);if(o||(o=u=Fo()),t(o,+r.apply(this,(a[0]=c,a)),+i.apply(this,a),+r.apply(this,(a[0]=f,a)),+i.apply(this,a)),u)return o=null,u+""||null}return u.source=function(t){return arguments.length?(n=t,u):n},u.target=function(t){return arguments.length?(e=t,u):e},u.x=function(t){return arguments.length?(r="function"==typeof t?t:__(+t),u):r},u.y=function(t){return arguments.length?(i="function"==typeof t?t:__(+t),u):i},u.context=function(t){return arguments.length?(o=null==t?null:t,u):o},u}function om(t,n,e,r,i){t.moveTo(n,e),t.bezierCurveTo(n=(n+r)/2,e,n,i,r,i)}function um(t,n,e,r,i){t.moveTo(n,e),t.bezierCurveTo(n,e=(e+i)/2,r,e,r,i)}function am(t,n,e,r,i){var o=tm(n,e),u=tm(n,e=(e+i)/2),a=tm(r,e),c=tm(r,i);t.moveTo(o[0],o[1]),t.bezierCurveTo(u[0],u[1],a[0],a[1],c[0],c[1])}function cm(){return im(om)}function fm(){return im(um)}function sm(){var t=im(am);return t.angle=t.x,delete t.x,t.radius=t.y,delete t.y,t}var lm={draw:function(t,n){var e=Math.sqrt(n/k_);t.moveTo(e,0),t.arc(0,0,e,0,E_)}},hm={draw:function(t,n){var e=Math.sqrt(n/5)/2;t.moveTo(-3*e,-e),t.lineTo(-e,-e),t.lineTo(-e,-3*e),t.lineTo(e,-3*e),t.lineTo(e,-e),t.lineTo(3*e,-e),t.lineTo(3*e,e),t.lineTo(e,e),t.lineTo(e,3*e),t.lineTo(-e,3*e),t.lineTo(-e,e),t.lineTo(-3*e,e),t.closePath()}},dm=Math.sqrt(1/3),pm=2*dm,vm={draw:function(t,n){var e=Math.sqrt(n/pm),r=e*dm;t.moveTo(0,-e),t.lineTo(r,0),t.lineTo(0,e),t.lineTo(-r,0),t.closePath()}},gm=Math.sin(k_/10)/Math.sin(7*k_/10),ym=Math.sin(E_/10)*gm,bm=-Math.cos(E_/10)*gm,_m={draw:function(t,n){var e=Math.sqrt(.8908130915292852*n),r=ym*e,i=bm*e;t.moveTo(0,-e),t.lineTo(r,i);for(var o=1;o<5;++o){var u=E_*o/5,a=Math.cos(u),c=Math.sin(u);t.lineTo(c*e,-a*e),t.lineTo(a*r-c*i,c*r+a*i)}t.closePath()}},mm={draw:function(t,n){var e=Math.sqrt(n),r=-e/2;t.rect(r,r,e,e)}},xm=Math.sqrt(3),wm={draw:function(t,n){var e=-Math.sqrt(n/(3*xm));t.moveTo(0,2*e),t.lineTo(-xm*e,-e),t.lineTo(xm*e,-e),t.closePath()}},Mm=Math.sqrt(3)/2,Sm=1/Math.sqrt(12),Am=3*(Sm/2+1),Cm={draw:function(t,n){var e=Math.sqrt(n/Am),r=e/2,i=e*Sm,o=r,u=e*Sm+e,a=-o,c=u;t.moveTo(r,i),t.lineTo(o,u),t.lineTo(a,c),t.lineTo(-.5*r-Mm*i,Mm*r+-.5*i),t.lineTo(-.5*o-Mm*u,Mm*o+-.5*u),t.lineTo(-.5*a-Mm*c,Mm*a+-.5*c),t.lineTo(-.5*r+Mm*i,-.5*i-Mm*r),t.lineTo(-.5*o+Mm*u,-.5*u-Mm*o),t.lineTo(-.5*a+Mm*c,-.5*c-Mm*a),t.closePath()}},Nm=[lm,hm,vm,mm,_m,wm,Cm],km=function(){var t=__(lm),n=__(64),e=null;function r(){var r;if(e||(e=r=Fo()),t.apply(this,arguments).draw(e,+n.apply(this,arguments)),r)return e=null,r+""||null}return r.type=function(n){return arguments.length?(t="function"==typeof n?n:__(n),r):t},r.size=function(t){return arguments.length?(n="function"==typeof t?t:__(+t),r):n},r.context=function(t){return arguments.length?(e=null==t?null:t,r):e},r},Tm=function(){};function Em(t,n,e){t._context.bezierCurveTo((2*t._x0+t._x1)/3,(2*t._y0+t._y1)/3,(t._x0+2*t._x1)/3,(t._y0+2*t._y1)/3,(t._x0+4*t._x1+n)/6,(t._y0+4*t._y1+e)/6)}function Pm(t){this._context=t}Pm.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._y0=this._y1=NaN,this._point=0},lineEnd:function(){switch(this._point){case 3:Em(this,this._x1,this._y1);case 2:this._context.lineTo(this._x1,this._y1)}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2;break;case 2:this._point=3,this._context.lineTo((5*this._x0+this._x1)/6,(5*this._y0+this._y1)/6);default:Em(this,t,n)}this._x0=this._x1,this._x1=t,this._y0=this._y1,this._y1=n}};var zm=function(t){return new Pm(t)};function Lm(t){this._context=t}Lm.prototype={areaStart:Tm,areaEnd:Tm,lineStart:function(){this._x0=this._x1=this._x2=this._x3=this._x4=this._y0=this._y1=this._y2=this._y3=this._y4=NaN,this._point=0},lineEnd:function(){switch(this._point){case 1:this._context.moveTo(this._x2,this._y2),this._context.closePath();break;case 2:this._context.moveTo((this._x2+2*this._x3)/3,(this._y2+2*this._y3)/3),this._context.lineTo((this._x3+2*this._x2)/3,(this._y3+2*this._y2)/3),this._context.closePath();break;case 3:this.point(this._x2,this._y2),this.point(this._x3,this._y3),this.point(this._x4,this._y4)}},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._x2=t,this._y2=n;break;case 1:this._point=2,this._x3=t,this._y3=n;break;case 2:this._point=3,this._x4=t,this._y4=n,this._context.moveTo((this._x0+4*this._x1+t)/6,(this._y0+4*this._y1+n)/6);break;default:Em(this,t,n)}this._x0=this._x1,this._x1=t,this._y0=this._y1,this._y1=n}};var Rm=function(t){return new Lm(t)};function Dm(t){this._context=t}Dm.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._y0=this._y1=NaN,this._point=0},lineEnd:function(){(this._line||0!==this._line&&3===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1;break;case 1:this._point=2;break;case 2:this._point=3;var e=(this._x0+4*this._x1+t)/6,r=(this._y0+4*this._y1+n)/6;this._line?this._context.lineTo(e,r):this._context.moveTo(e,r);break;case 3:this._point=4;default:Em(this,t,n)}this._x0=this._x1,this._x1=t,this._y0=this._y1,this._y1=n}};var Om=function(t){return new Dm(t)};function qm(t,n){this._basis=new Pm(t),this._beta=n}qm.prototype={lineStart:function(){this._x=[],this._y=[],this._basis.lineStart()},lineEnd:function(){var t=this._x,n=this._y,e=t.length-1;if(e>0)for(var r,i=t[0],o=n[0],u=t[e]-i,a=n[e]-o,c=-1;++c<=e;)r=c/e,this._basis.point(this._beta*t[c]+(1-this._beta)*(i+r*u),this._beta*n[c]+(1-this._beta)*(o+r*a));this._x=this._y=null,this._basis.lineEnd()},point:function(t,n){this._x.push(+t),this._y.push(+n)}};var Um=function t(n){function e(t){return 1===n?new Pm(t):new qm(t,n)}return e.beta=function(n){return t(+n)},e}(.85);function Bm(t,n,e){t._context.bezierCurveTo(t._x1+t._k*(t._x2-t._x0),t._y1+t._k*(t._y2-t._y0),t._x2+t._k*(t._x1-n),t._y2+t._k*(t._y1-e),t._x2,t._y2)}function Ym(t,n){this._context=t,this._k=(1-n)/6}Ym.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._point=0},lineEnd:function(){switch(this._point){case 2:this._context.lineTo(this._x2,this._y2);break;case 3:Bm(this,this._x1,this._y1)}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2,this._x1=t,this._y1=n;break;case 2:this._point=3;default:Bm(this,t,n)}this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}};var Hm=function t(n){function e(t){return new Ym(t,n)}return e.tension=function(n){return t(+n)},e}(0);function Im(t,n){this._context=t,this._k=(1-n)/6}Im.prototype={areaStart:Tm,areaEnd:Tm,lineStart:function(){this._x0=this._x1=this._x2=this._x3=this._x4=this._x5=this._y0=this._y1=this._y2=this._y3=this._y4=this._y5=NaN,this._point=0},lineEnd:function(){switch(this._point){case 1:this._context.moveTo(this._x3,this._y3),this._context.closePath();break;case 2:this._context.lineTo(this._x3,this._y3),this._context.closePath();break;case 3:this.point(this._x3,this._y3),this.point(this._x4,this._y4),this.point(this._x5,this._y5)}},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._x3=t,this._y3=n;break;case 1:this._point=2,this._context.moveTo(this._x4=t,this._y4=n);break;case 2:this._point=3,this._x5=t,this._y5=n;break;default:Bm(this,t,n)}this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}};var Fm=function t(n){function e(t){return new Im(t,n)}return e.tension=function(n){return t(+n)},e}(0);function jm(t,n){this._context=t,this._k=(1-n)/6}jm.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._point=0},lineEnd:function(){(this._line||0!==this._line&&3===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1;break;case 1:this._point=2;break;case 2:this._point=3,this._line?this._context.lineTo(this._x2,this._y2):this._context.moveTo(this._x2,this._y2);break;case 3:this._point=4;default:Bm(this,t,n)}this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}};var Gm=function t(n){function e(t){return new jm(t,n)}return e.tension=function(n){return t(+n)},e}(0);function Xm(t,n,e){var r=t._x1,i=t._y1,o=t._x2,u=t._y2;if(t._l01_a>N_){var a=2*t._l01_2a+3*t._l01_a*t._l12_a+t._l12_2a,c=3*t._l01_a*(t._l01_a+t._l12_a);r=(r*a-t._x0*t._l12_2a+t._x2*t._l01_2a)/c,i=(i*a-t._y0*t._l12_2a+t._y2*t._l01_2a)/c}if(t._l23_a>N_){var f=2*t._l23_2a+3*t._l23_a*t._l12_a+t._l12_2a,s=3*t._l23_a*(t._l23_a+t._l12_a);o=(o*f+t._x1*t._l23_2a-n*t._l12_2a)/s,u=(u*f+t._y1*t._l23_2a-e*t._l12_2a)/s}t._context.bezierCurveTo(r,i,o,u,t._x2,t._y2)}function Vm(t,n){this._context=t,this._alpha=n}Vm.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._l01_a=this._l12_a=this._l23_a=this._l01_2a=this._l12_2a=this._l23_2a=this._point=0},lineEnd:function(){switch(this._point){case 2:this._context.lineTo(this._x2,this._y2);break;case 3:this.point(this._x2,this._y2)}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){if(t=+t,n=+n,this._point){var e=this._x2-t,r=this._y2-n;this._l23_a=Math.sqrt(this._l23_2a=Math.pow(e*e+r*r,this._alpha))}switch(this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2;break;case 2:this._point=3;default:Xm(this,t,n)}this._l01_a=this._l12_a,this._l12_a=this._l23_a,this._l01_2a=this._l12_2a,this._l12_2a=this._l23_2a,this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}};var Wm=function t(n){function e(t){return n?new Vm(t,n):new Ym(t,0)}return e.alpha=function(n){return t(+n)},e}(.5);function $m(t,n){this._context=t,this._alpha=n}$m.prototype={areaStart:Tm,areaEnd:Tm,lineStart:function(){this._x0=this._x1=this._x2=this._x3=this._x4=this._x5=this._y0=this._y1=this._y2=this._y3=this._y4=this._y5=NaN,this._l01_a=this._l12_a=this._l23_a=this._l01_2a=this._l12_2a=this._l23_2a=this._point=0},lineEnd:function(){switch(this._point){case 1:this._context.moveTo(this._x3,this._y3),this._context.closePath();break;case 2:this._context.lineTo(this._x3,this._y3),this._context.closePath();break;case 3:this.point(this._x3,this._y3),this.point(this._x4,this._y4),this.point(this._x5,this._y5)}},point:function(t,n){if(t=+t,n=+n,this._point){var e=this._x2-t,r=this._y2-n;this._l23_a=Math.sqrt(this._l23_2a=Math.pow(e*e+r*r,this._alpha))}switch(this._point){case 0:this._point=1,this._x3=t,this._y3=n;break;case 1:this._point=2,this._context.moveTo(this._x4=t,this._y4=n);break;case 2:this._point=3,this._x5=t,this._y5=n;break;default:Xm(this,t,n)}this._l01_a=this._l12_a,this._l12_a=this._l23_a,this._l01_2a=this._l12_2a,this._l12_2a=this._l23_2a,this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}};var Zm=function t(n){function e(t){return n?new $m(t,n):new Im(t,0)}return e.alpha=function(n){return t(+n)},e}(.5);function Qm(t,n){this._context=t,this._alpha=n}Qm.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._l01_a=this._l12_a=this._l23_a=this._l01_2a=this._l12_2a=this._l23_2a=this._point=0},lineEnd:function(){(this._line||0!==this._line&&3===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){if(t=+t,n=+n,this._point){var e=this._x2-t,r=this._y2-n;this._l23_a=Math.sqrt(this._l23_2a=Math.pow(e*e+r*r,this._alpha))}switch(this._point){case 0:this._point=1;break;case 1:this._point=2;break;case 2:this._point=3,this._line?this._context.lineTo(this._x2,this._y2):this._context.moveTo(this._x2,this._y2);break;case 3:this._point=4;default:Xm(this,t,n)}this._l01_a=this._l12_a,this._l12_a=this._l23_a,this._l01_2a=this._l12_2a,this._l12_2a=this._l23_2a,this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}};var Jm=function t(n){function e(t){return n?new Qm(t,n):new jm(t,0)}return e.alpha=function(n){return t(+n)},e}(.5);function Km(t){this._context=t}Km.prototype={areaStart:Tm,areaEnd:Tm,lineStart:function(){this._point=0},lineEnd:function(){this._point&&this._context.closePath()},point:function(t,n){t=+t,n=+n,this._point?this._context.lineTo(t,n):(this._point=1,this._context.moveTo(t,n))}};var tx=function(t){return new Km(t)};function nx(t){return t<0?-1:1}function ex(t,n,e){var r=t._x1-t._x0,i=n-t._x1,o=(t._y1-t._y0)/(r||i<0&&-0),u=(e-t._y1)/(i||r<0&&-0),a=(o*i+u*r)/(r+i);return(nx(o)+nx(u))*Math.min(Math.abs(o),Math.abs(u),.5*Math.abs(a))||0}function rx(t,n){var e=t._x1-t._x0;return e?(3*(t._y1-t._y0)/e-n)/2:n}function ix(t,n,e){var r=t._x0,i=t._y0,o=t._x1,u=t._y1,a=(o-r)/3;t._context.bezierCurveTo(r+a,i+a*n,o-a,u-a*e,o,u)}function ox(t){this._context=t}function ux(t){this._context=new ax(t)}function ax(t){this._context=t}function cx(t){return new ox(t)}function fx(t){return new ux(t)}function sx(t){this._context=t}function lx(t){var n,e,r=t.length-1,i=new Array(r),o=new Array(r),u=new Array(r);for(i[0]=0,o[0]=2,u[0]=t[0]+2*t[1],n=1;n<r-1;++n)i[n]=1,o[n]=4,u[n]=4*t[n]+2*t[n+1];for(i[r-1]=2,o[r-1]=7,u[r-1]=8*t[r-1]+t[r],n=1;n<r;++n)e=i[n]/o[n-1],o[n]-=e,u[n]-=e*u[n-1];for(i[r-1]=u[r-1]/o[r-1],n=r-2;n>=0;--n)i[n]=(u[n]-i[n+1])/o[n];for(o[r-1]=(t[r]+i[r-1])/2,n=0;n<r-1;++n)o[n]=2*t[n+1]-i[n+1];return[i,o]}ox.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._y0=this._y1=this._t0=NaN,this._point=0},lineEnd:function(){switch(this._point){case 2:this._context.lineTo(this._x1,this._y1);break;case 3:ix(this,this._t0,rx(this,this._t0))}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){var e=NaN;if(n=+n,(t=+t)!==this._x1||n!==this._y1){switch(this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2;break;case 2:this._point=3,ix(this,rx(this,e=ex(this,t,n)),e);break;default:ix(this,this._t0,e=ex(this,t,n))}this._x0=this._x1,this._x1=t,this._y0=this._y1,this._y1=n,this._t0=e}}},(ux.prototype=Object.create(ox.prototype)).point=function(t,n){ox.prototype.point.call(this,n,t)},ax.prototype={moveTo:function(t,n){this._context.moveTo(n,t)},closePath:function(){this._context.closePath()},lineTo:function(t,n){this._context.lineTo(n,t)},bezierCurveTo:function(t,n,e,r,i,o){this._context.bezierCurveTo(n,t,r,e,o,i)}},sx.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x=[],this._y=[]},lineEnd:function(){var t=this._x,n=this._y,e=t.length;if(e)if(this._line?this._context.lineTo(t[0],n[0]):this._context.moveTo(t[0],n[0]),2===e)this._context.lineTo(t[1],n[1]);else for(var r=lx(t),i=lx(n),o=0,u=1;u<e;++o,++u)this._context.bezierCurveTo(r[0][o],i[0][o],r[1][o],i[1][o],t[u],n[u]);(this._line||0!==this._line&&1===e)&&this._context.closePath(),this._line=1-this._line,this._x=this._y=null},point:function(t,n){this._x.push(+t),this._y.push(+n)}};var hx=function(t){return new sx(t)};function dx(t,n){this._context=t,this._t=n}dx.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x=this._y=NaN,this._point=0},lineEnd:function(){0<this._t&&this._t<1&&2===this._point&&this._context.lineTo(this._x,this._y),(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line>=0&&(this._t=1-this._t,this._line=1-this._line)},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2;default:if(this._t<=0)this._context.lineTo(this._x,n),this._context.lineTo(t,n);else{var e=this._x*(1-this._t)+t*this._t;this._context.lineTo(e,this._y),this._context.lineTo(e,n)}}this._x=t,this._y=n}};var px=function(t){return new dx(t,.5)};function vx(t){return new dx(t,0)}function gx(t){return new dx(t,1)}var yx=function(t,n){if((i=t.length)>1)for(var e,r,i,o=1,u=t[n[0]],a=u.length;o<i;++o)for(r=u,u=t[n[o]],e=0;e<a;++e)u[e][1]+=u[e][0]=isNaN(r[e][1])?r[e][0]:r[e][1]},bx=function(t){for(var n=t.length,e=new Array(n);--n>=0;)e[n]=n;return e};function _x(t,n){return t[n]}var mx=function(){var t=__([]),n=bx,e=yx,r=_x;function i(i){var o,u,a=t.apply(this,arguments),c=i.length,f=a.length,s=new Array(f);for(o=0;o<f;++o){for(var l,h=a[o],d=s[o]=new Array(c),p=0;p<c;++p)d[p]=l=[0,+r(i[p],h,p,i)],l.data=i[p];d.key=h}for(o=0,u=n(s);o<f;++o)s[u[o]].index=o;return e(s,u),s}return i.keys=function(n){return arguments.length?(t="function"==typeof n?n:__(nm.call(n)),i):t},i.value=function(t){return arguments.length?(r="function"==typeof t?t:__(+t),i):r},i.order=function(t){return arguments.length?(n=null==t?bx:"function"==typeof t?t:__(nm.call(t)),i):n},i.offset=function(t){return arguments.length?(e=null==t?yx:t,i):e},i},xx=function(t,n){if((r=t.length)>0){for(var e,r,i,o=0,u=t[0].length;o<u;++o){for(i=e=0;e<r;++e)i+=t[e][o][1]||0;if(i)for(e=0;e<r;++e)t[e][o][1]/=i}yx(t,n)}},wx=function(t,n){if((a=t.length)>1)for(var e,r,i,o,u,a,c=0,f=t[n[0]].length;c<f;++c)for(o=u=0,e=0;e<a;++e)(i=(r=t[n[e]][c])[1]-r[0])>=0?(r[0]=o,r[1]=o+=i):i<0?(r[1]=u,r[0]=u+=i):r[0]=o},Mx=function(t,n){if((e=t.length)>0){for(var e,r=0,i=t[n[0]],o=i.length;r<o;++r){for(var u=0,a=0;u<e;++u)a+=t[u][r][1]||0;i[r][1]+=i[r][0]=-a/2}yx(t,n)}},Sx=function(t,n){if((i=t.length)>0&&(r=(e=t[n[0]]).length)>0){for(var e,r,i,o=0,u=1;u<r;++u){for(var a=0,c=0,f=0;a<i;++a){for(var s=t[n[a]],l=s[u][1]||0,h=(l-(s[u-1][1]||0))/2,d=0;d<a;++d){var p=t[n[d]];h+=(p[u][1]||0)-(p[u-1][1]||0)}c+=l,f+=h*l}e[u-1][1]+=e[u-1][0]=o,c&&(o-=f/c)}e[u-1][1]+=e[u-1][0]=o,yx(t,n)}},Ax=function(t){var n=t.map(Cx);return bx(t).sort(function(t,e){return n[t]-n[e]})};function Cx(t){for(var n,e=0,r=-1,i=t.length;++r<i;)(n=+t[r][1])&&(e+=n);return e}var Nx=function(t){return Ax(t).reverse()},kx=function(t){var n,e,r=t.length,i=t.map(Cx),o=bx(t).sort(function(t,n){return i[n]-i[t]}),u=0,a=0,c=[],f=[];for(n=0;n<r;++n)e=o[n],u<a?(u+=i[e],c.push(e)):(a+=i[e],f.push(e));return f.reverse().concat(c)},Tx=function(t){return bx(t).reverse()},Ex=function(t){return function(){return t}};function Px(t){return t[0]}function zx(t){return t[1]}function Lx(){this._=null}function Rx(t){t.U=t.C=t.L=t.R=t.P=t.N=null}function Dx(t,n){var e=n,r=n.R,i=e.U;i?i.L===e?i.L=r:i.R=r:t._=r,r.U=i,e.U=r,e.R=r.L,e.R&&(e.R.U=e),r.L=e}function Ox(t,n){var e=n,r=n.L,i=e.U;i?i.L===e?i.L=r:i.R=r:t._=r,r.U=i,e.U=r,e.L=r.R,e.L&&(e.L.U=e),r.R=e}function qx(t){for(;t.L;)t=t.L;return t}Lx.prototype={constructor:Lx,insert:function(t,n){var e,r,i;if(t){if(n.P=t,n.N=t.N,t.N&&(t.N.P=n),t.N=n,t.R){for(t=t.R;t.L;)t=t.L;t.L=n}else t.R=n;e=t}else this._?(t=qx(this._),n.P=null,n.N=t,t.P=t.L=n,e=t):(n.P=n.N=null,this._=n,e=null);for(n.L=n.R=null,n.U=e,n.C=!0,t=n;e&&e.C;)e===(r=e.U).L?(i=r.R)&&i.C?(e.C=i.C=!1,r.C=!0,t=r):(t===e.R&&(Dx(this,e),e=(t=e).U),e.C=!1,r.C=!0,Ox(this,r)):(i=r.L)&&i.C?(e.C=i.C=!1,r.C=!0,t=r):(t===e.L&&(Ox(this,e),e=(t=e).U),e.C=!1,r.C=!0,Dx(this,r)),e=t.U;this._.C=!1},remove:function(t){t.N&&(t.N.P=t.P),t.P&&(t.P.N=t.N),t.N=t.P=null;var n,e,r,i=t.U,o=t.L,u=t.R;if(e=o?u?qx(u):o:u,i?i.L===t?i.L=e:i.R=e:this._=e,o&&u?(r=e.C,e.C=t.C,e.L=o,o.U=e,e!==u?(i=e.U,e.U=t.U,t=e.R,i.L=t,e.R=u,u.U=e):(e.U=i,i=e,t=e.R)):(r=t.C,t=e),t&&(t.U=i),!r)if(t&&t.C)t.C=!1;else{do{if(t===this._)break;if(t===i.L){if((n=i.R).C&&(n.C=!1,i.C=!0,Dx(this,i),n=i.R),n.L&&n.L.C||n.R&&n.R.C){n.R&&n.R.C||(n.L.C=!1,n.C=!0,Ox(this,n),n=i.R),n.C=i.C,i.C=n.R.C=!1,Dx(this,i),t=this._;break}}else if((n=i.L).C&&(n.C=!1,i.C=!0,Ox(this,i),n=i.L),n.L&&n.L.C||n.R&&n.R.C){n.L&&n.L.C||(n.R.C=!1,n.C=!0,Dx(this,n),n=i.L),n.C=i.C,i.C=n.L.C=!1,Ox(this,i),t=this._;break}n.C=!0,t=i,i=i.U}while(!t.C);t&&(t.C=!1)}}};var Ux=Lx;function Bx(t,n,e,r){var i=[null,null],o=aw.push(i)-1;return i.left=t,i.right=n,e&&Hx(i,t,n,e),r&&Hx(i,n,t,r),ow[t.index].halfedges.push(o),ow[n.index].halfedges.push(o),i}function Yx(t,n,e){var r=[n,e];return r.left=t,r}function Hx(t,n,e,r){t[0]||t[1]?t.left===e?t[1]=r:t[0]=r:(t[0]=r,t.left=n,t.right=e)}function Ix(t,n,e,r,i){var o,u=t[0],a=t[1],c=u[0],f=u[1],s=0,l=1,h=a[0]-c,d=a[1]-f;if(o=n-c,h||!(o>0)){if(o/=h,h<0){if(o<s)return;o<l&&(l=o)}else if(h>0){if(o>l)return;o>s&&(s=o)}if(o=r-c,h||!(o<0)){if(o/=h,h<0){if(o>l)return;o>s&&(s=o)}else if(h>0){if(o<s)return;o<l&&(l=o)}if(o=e-f,d||!(o>0)){if(o/=d,d<0){if(o<s)return;o<l&&(l=o)}else if(d>0){if(o>l)return;o>s&&(s=o)}if(o=i-f,d||!(o<0)){if(o/=d,d<0){if(o>l)return;o>s&&(s=o)}else if(d>0){if(o<s)return;o<l&&(l=o)}return!(s>0||l<1)||(s>0&&(t[0]=[c+s*h,f+s*d]),l<1&&(t[1]=[c+l*h,f+l*d]),!0)}}}}}function Fx(t,n,e,r,i){var o=t[1];if(o)return!0;var u,a,c=t[0],f=t.left,s=t.right,l=f[0],h=f[1],d=s[0],p=s[1],v=(l+d)/2,g=(h+p)/2;if(p===h){if(v<n||v>=r)return;if(l>d){if(c){if(c[1]>=i)return}else c=[v,e];o=[v,i]}else{if(c){if(c[1]<e)return}else c=[v,i];o=[v,e]}}else if(a=g-(u=(l-d)/(p-h))*v,u<-1||u>1)if(l>d){if(c){if(c[1]>=i)return}else c=[(e-a)/u,e];o=[(i-a)/u,i]}else{if(c){if(c[1]<e)return}else c=[(i-a)/u,i];o=[(e-a)/u,e]}else if(h<p){if(c){if(c[0]>=r)return}else c=[n,u*n+a];o=[r,u*r+a]}else{if(c){if(c[0]<n)return}else c=[r,u*r+a];o=[n,u*n+a]}return t[0]=c,t[1]=o,!0}function jx(t,n){var e=t.site,r=n.left,i=n.right;return e===i&&(i=r,r=e),i?Math.atan2(i[1]-r[1],i[0]-r[0]):(e===r?(r=n[1],i=n[0]):(r=n[0],i=n[1]),Math.atan2(r[0]-i[0],i[1]-r[1]))}function Gx(t,n){return n[+(n.left!==t.site)]}function Xx(t,n){return n[+(n.left===t.site)]}var Vx,Wx=[];function $x(t){var n=t.P,e=t.N;if(n&&e){var r=n.site,i=t.site,o=e.site;if(r!==o){var u=i[0],a=i[1],c=r[0]-u,f=r[1]-a,s=o[0]-u,l=o[1]-a,h=2*(c*l-f*s);if(!(h>=-fw)){var d=c*c+f*f,p=s*s+l*l,v=(l*d-f*p)/h,g=(c*p-s*d)/h,y=Wx.pop()||new function(){Rx(this),this.x=this.y=this.arc=this.site=this.cy=null};y.arc=t,y.site=i,y.x=v+u,y.y=(y.cy=g+a)+Math.sqrt(v*v+g*g),t.circle=y;for(var b=null,_=uw._;_;)if(y.y<_.y||y.y===_.y&&y.x<=_.x){if(!_.L){b=_.P;break}_=_.L}else{if(!_.R){b=_;break}_=_.R}uw.insert(b,y),b||(Vx=y)}}}}function Zx(t){var n=t.circle;n&&(n.P||(Vx=n.N),uw.remove(n),Wx.push(n),Rx(n),t.circle=null)}var Qx=[];function Jx(t){var n=Qx.pop()||new function(){Rx(this),this.edge=this.site=this.circle=null};return n.site=t,n}function Kx(t){Zx(t),iw.remove(t),Qx.push(t),Rx(t)}function tw(t){var n=t.circle,e=n.x,r=n.cy,i=[e,r],o=t.P,u=t.N,a=[t];Kx(t);for(var c=o;c.circle&&Math.abs(e-c.circle.x)<cw&&Math.abs(r-c.circle.cy)<cw;)o=c.P,a.unshift(c),Kx(c),c=o;a.unshift(c),Zx(c);for(var f=u;f.circle&&Math.abs(e-f.circle.x)<cw&&Math.abs(r-f.circle.cy)<cw;)u=f.N,a.push(f),Kx(f),f=u;a.push(f),Zx(f);var s,l=a.length;for(s=1;s<l;++s)f=a[s],c=a[s-1],Hx(f.edge,c.site,f.site,i);c=a[0],(f=a[l-1]).edge=Bx(c.site,f.site,null,i),$x(c),$x(f)}function nw(t){for(var n,e,r,i,o=t[0],u=t[1],a=iw._;a;)if((r=ew(a,u)-o)>cw)a=a.L;else{if(!((i=o-rw(a,u))>cw)){r>-cw?(n=a.P,e=a):i>-cw?(n=a,e=a.N):n=e=a;break}if(!a.R){n=a;break}a=a.R}!function(t){ow[t.index]={site:t,halfedges:[]}}(t);var c=Jx(t);if(iw.insert(n,c),n||e){if(n===e)return Zx(n),e=Jx(n.site),iw.insert(c,e),c.edge=e.edge=Bx(n.site,c.site),$x(n),void $x(e);if(e){Zx(n),Zx(e);var f=n.site,s=f[0],l=f[1],h=t[0]-s,d=t[1]-l,p=e.site,v=p[0]-s,g=p[1]-l,y=2*(h*g-d*v),b=h*h+d*d,_=v*v+g*g,m=[(g*b-d*_)/y+s,(h*_-v*b)/y+l];Hx(e.edge,f,p,m),c.edge=Bx(f,t,null,m),e.edge=Bx(t,p,null,m),$x(n),$x(e)}else c.edge=Bx(n.site,c.site)}}function ew(t,n){var e=t.site,r=e[0],i=e[1],o=i-n;if(!o)return r;var u=t.P;if(!u)return-1/0;var a=(e=u.site)[0],c=e[1],f=c-n;if(!f)return a;var s=a-r,l=1/o-1/f,h=s/f;return l?(-h+Math.sqrt(h*h-2*l*(s*s/(-2*f)-c+f/2+i-o/2)))/l+r:(r+a)/2}function rw(t,n){var e=t.N;if(e)return ew(e,n);var r=t.site;return r[1]===n?r[0]:1/0}var iw,ow,uw,aw,cw=1e-6,fw=1e-12;function sw(t,n,e){return(t[0]-e[0])*(n[1]-t[1])-(t[0]-n[0])*(e[1]-t[1])}function lw(t,n){return n[1]-t[1]||n[0]-t[0]}function hw(t,n){var e,r,i,o=t.sort(lw).pop();for(aw=[],ow=new Array(t.length),iw=new Ux,uw=new Ux;;)if(i=Vx,o&&(!i||o[1]<i.y||o[1]===i.y&&o[0]<i.x))o[0]===e&&o[1]===r||(nw(o),e=o[0],r=o[1]),o=t.pop();else{if(!i)break;tw(i.arc)}if(function(){for(var t,n,e,r,i=0,o=ow.length;i<o;++i)if((t=ow[i])&&(r=(n=t.halfedges).length)){var u=new Array(r),a=new Array(r);for(e=0;e<r;++e)u[e]=e,a[e]=jx(t,aw[n[e]]);for(u.sort(function(t,n){return a[n]-a[t]}),e=0;e<r;++e)a[e]=n[u[e]];for(e=0;e<r;++e)n[e]=a[e]}}(),n){var u=+n[0][0],a=+n[0][1],c=+n[1][0],f=+n[1][1];!function(t,n,e,r){for(var i,o=aw.length;o--;)Fx(i=aw[o],t,n,e,r)&&Ix(i,t,n,e,r)&&(Math.abs(i[0][0]-i[1][0])>cw||Math.abs(i[0][1]-i[1][1])>cw)||delete aw[o]}(u,a,c,f),function(t,n,e,r){var i,o,u,a,c,f,s,l,h,d,p,v,g=ow.length,y=!0;for(i=0;i<g;++i)if(o=ow[i]){for(u=o.site,a=(c=o.halfedges).length;a--;)aw[c[a]]||c.splice(a,1);for(a=0,f=c.length;a<f;)p=(d=Xx(o,aw[c[a]]))[0],v=d[1],l=(s=Gx(o,aw[c[++a%f]]))[0],h=s[1],(Math.abs(p-l)>cw||Math.abs(v-h)>cw)&&(c.splice(a,0,aw.push(Yx(u,d,Math.abs(p-t)<cw&&r-v>cw?[t,Math.abs(l-t)<cw?h:r]:Math.abs(v-r)<cw&&e-p>cw?[Math.abs(h-r)<cw?l:e,r]:Math.abs(p-e)<cw&&v-n>cw?[e,Math.abs(l-e)<cw?h:n]:Math.abs(v-n)<cw&&p-t>cw?[Math.abs(h-n)<cw?l:t,n]:null))-1),++f);f&&(y=!1)}if(y){var b,_,m,x=1/0;for(i=0,y=null;i<g;++i)(o=ow[i])&&(m=(b=(u=o.site)[0]-t)*b+(_=u[1]-n)*_)<x&&(x=m,y=o);if(y){var w=[t,n],M=[t,r],S=[e,r],A=[e,n];y.halfedges.push(aw.push(Yx(u=y.site,w,M))-1,aw.push(Yx(u,M,S))-1,aw.push(Yx(u,S,A))-1,aw.push(Yx(u,A,w))-1)}}for(i=0;i<g;++i)(o=ow[i])&&(o.halfedges.length||delete ow[i])}(u,a,c,f)}this.edges=aw,this.cells=ow,iw=uw=aw=ow=null}hw.prototype={constructor:hw,polygons:function(){var t=this.edges;return this.cells.map(function(n){var e=n.halfedges.map(function(e){return Gx(n,t[e])});return e.data=n.site.data,e})},triangles:function(){var t=[],n=this.edges;return this.cells.forEach(function(e,r){if(o=(i=e.halfedges).length)for(var i,o,u,a=e.site,c=-1,f=n[i[o-1]],s=f.left===a?f.right:f.left;++c<o;)u=s,s=(f=n[i[c]]).left===a?f.right:f.left,u&&s&&r<u.index&&r<s.index&&sw(a,u,s)<0&&t.push([a.data,u.data,s.data])}),t},links:function(){return this.edges.filter(function(t){return t.right}).map(function(t){return{source:t.left.data,target:t.right.data}})},find:function(t,n,e){for(var r,i,o=this,u=o._found||0,a=o.cells.length;!(i=o.cells[u]);)if(++u>=a)return null;var c=t-i.site[0],f=n-i.site[1],s=c*c+f*f;do{i=o.cells[r=u],u=null,i.halfedges.forEach(function(e){var r=o.edges[e],a=r.left;if(a!==i.site&&a||(a=r.right)){var c=t-a[0],f=n-a[1],l=c*c+f*f;l<s&&(s=l,u=a.index)}})}while(null!==u);return o._found=r,null==e||s<=e*e?i.site:null}};var dw=function(){var t=Px,n=zx,e=null;function r(r){return new hw(r.map(function(e,i){var o=[Math.round(t(e,i,r)/cw)*cw,Math.round(n(e,i,r)/cw)*cw];return o.index=i,o.data=e,o}),e)}return r.polygons=function(t){return r(t).polygons()},r.links=function(t){return r(t).links()},r.triangles=function(t){return r(t).triangles()},r.x=function(n){return arguments.length?(t="function"==typeof n?n:Ex(+n),r):t},r.y=function(t){return arguments.length?(n="function"==typeof t?t:Ex(+t),r):n},r.extent=function(t){return arguments.length?(e=null==t?null:[[+t[0][0],+t[0][1]],[+t[1][0],+t[1][1]]],r):e&&[[e[0][0],e[0][1]],[e[1][0],e[1][1]]]},r.size=function(t){return arguments.length?(e=null==t?null:[[0,0],[+t[0],+t[1]]],r):e&&[e[1][0]-e[0][0],e[1][1]-e[0][1]]},r},pw=function(t){return function(){return t}};function vw(t,n,e){this.k=t,this.x=n,this.y=e}vw.prototype={constructor:vw,scale:function(t){return 1===t?this:new vw(this.k*t,this.x,this.y)},translate:function(t,n){return 0===t&0===n?this:new vw(this.k,this.x+this.k*t,this.y+this.k*n)},apply:function(t){return[t[0]*this.k+this.x,t[1]*this.k+this.y]},applyX:function(t){return t*this.k+this.x},applyY:function(t){return t*this.k+this.y},invert:function(t){return[(t[0]-this.x)/this.k,(t[1]-this.y)/this.k]},invertX:function(t){return(t-this.x)/this.k},invertY:function(t){return(t-this.y)/this.k},rescaleX:function(t){return t.copy().domain(t.range().map(this.invertX,this).map(t.invert,t))},rescaleY:function(t){return t.copy().domain(t.range().map(this.invertY,this).map(t.invert,t))},toString:function(){return"translate("+this.x+","+this.y+") scale("+this.k+")"}};var gw=new vw(1,0,0);function yw(t){return t.__zoom||gw}function bw(){Vt.stopImmediatePropagation()}yw.prototype=vw.prototype;var _w=function(){Vt.preventDefault(),Vt.stopImmediatePropagation()};function mw(){return!Vt.button}function xw(){var t,n,e=this;return e instanceof SVGElement?(t=(e=e.ownerSVGElement||e).width.baseVal.value,n=e.height.baseVal.value):(t=e.clientWidth,n=e.clientHeight),[[0,0],[t,n]]}function ww(){return this.__zoom||gw}function Mw(){return-Vt.deltaY*(Vt.deltaMode?120:1)/500}function Sw(){return"ontouchstart"in this}function Aw(t,n,e){var r=t.invertX(n[0][0])-e[0][0],i=t.invertX(n[1][0])-e[1][0],o=t.invertY(n[0][1])-e[0][1],u=t.invertY(n[1][1])-e[1][1];return t.translate(i>r?(r+i)/2:Math.min(0,r)||Math.max(0,i),u>o?(o+u)/2:Math.min(0,o)||Math.max(0,u))}var Cw=function(){var t,n,e=mw,r=xw,i=Aw,o=Mw,u=Sw,a=[0,1/0],c=[[-1/0,-1/0],[1/0,1/0]],f=250,s=fr,l=[],h=ht("start","zoom","end"),d=500,p=150,v=0;function g(t){t.property("__zoom",ww).on("wheel.zoom",M).on("mousedown.zoom",S).on("dblclick.zoom",A).filter(u).on("touchstart.zoom",C).on("touchmove.zoom",N).on("touchend.zoom touchcancel.zoom",k).style("touch-action","none").style("-webkit-tap-highlight-color","rgba(0,0,0,0)")}function y(t,n){return(n=Math.max(a[0],Math.min(a[1],n)))===t.k?t:new vw(n,t.x,t.y)}function b(t,n,e){var r=n[0]-e[0]*t.k,i=n[1]-e[1]*t.k;return r===t.x&&i===t.y?t:new vw(t.k,r,i)}function _(t){return[(+t[0][0]+ +t[1][0])/2,(+t[0][1]+ +t[1][1])/2]}function m(t,n,e){t.on("start.zoom",function(){x(this,arguments).start()}).on("interrupt.zoom end.zoom",function(){x(this,arguments).end()}).tween("zoom",function(){var t=arguments,i=x(this,t),o=r.apply(this,t),u=e||_(o),a=Math.max(o[1][0]-o[0][0],o[1][1]-o[0][1]),c=this.__zoom,f="function"==typeof n?n.apply(this,t):n,l=s(c.invert(u).concat(a/c.k),f.invert(u).concat(a/f.k));return function(t){if(1===t)t=f;else{var n=l(t),e=a/n[2];t=new vw(e,u[0]-n[0]*e,u[1]-n[1]*e)}i.zoom(null,t)}})}function x(t,n){for(var e,r=0,i=l.length;r<i;++r)if((e=l[r]).that===t)return e;return new w(t,n)}function w(t,n){this.that=t,this.args=n,this.index=-1,this.active=0,this.extent=r.apply(t,n)}function M(){if(e.apply(this,arguments)){var t=x(this,arguments),n=this.__zoom,r=Math.max(a[0],Math.min(a[1],n.k*Math.pow(2,o.apply(this,arguments)))),u=hn(this);if(t.wheel)t.mouse[0][0]===u[0]&&t.mouse[0][1]===u[1]||(t.mouse[1]=n.invert(t.mouse[0]=u)),clearTimeout(t.wheel);else{if(n.k===r)return;t.mouse=[u,n.invert(u)],ei(this),t.start()}_w(),t.wheel=setTimeout(function(){t.wheel=null,t.end()},p),t.zoom("mouse",i(b(y(n,r),t.mouse[0],t.mouse[1]),t.extent,c))}}function S(){if(!n&&e.apply(this,arguments)){var t=x(this,arguments),r=on(Vt.view).on("mousemove.zoom",function(){if(_w(),!t.moved){var n=Vt.clientX-u,e=Vt.clientY-a;t.moved=n*n+e*e>v}t.zoom("mouse",i(b(t.that.__zoom,t.mouse[0]=hn(t.that),t.mouse[1]),t.extent,c))},!0).on("mouseup.zoom",function(){r.on("mousemove.zoom mouseup.zoom",null),_n(Vt.view,t.moved),_w(),t.end()},!0),o=hn(this),u=Vt.clientX,a=Vt.clientY;bn(Vt.view),bw(),t.mouse=[o,this.__zoom.invert(o)],ei(this),t.start()}}function A(){if(e.apply(this,arguments)){var t=this.__zoom,n=hn(this),o=t.invert(n),u=t.k*(Vt.shiftKey?.5:2),a=i(b(y(t,u),n,o),r.apply(this,arguments),c);_w(),f>0?on(this).transition().duration(f).call(m,a,n):on(this).call(g.transform,a)}}function C(){if(e.apply(this,arguments)){var n,r,i,o,u=x(this,arguments),a=Vt.changedTouches,c=a.length;for(bw(),r=0;r<c;++r)i=a[r],o=[o=pn(this,a,i.identifier),this.__zoom.invert(o),i.identifier],u.touch0?u.touch1||(u.touch1=o):(u.touch0=o,n=!0);if(t&&(t=clearTimeout(t),!u.touch1))return u.end(),void((o=on(this).on("dblclick.zoom"))&&o.apply(this,arguments));n&&(t=setTimeout(function(){t=null},d),ei(this),u.start())}}function N(){var n,e,r,o,u=x(this,arguments),a=Vt.changedTouches,f=a.length;for(_w(),t&&(t=clearTimeout(t)),n=0;n<f;++n)e=a[n],r=pn(this,a,e.identifier),u.touch0&&u.touch0[2]===e.identifier?u.touch0[0]=r:u.touch1&&u.touch1[2]===e.identifier&&(u.touch1[0]=r);if(e=u.that.__zoom,u.touch1){var s=u.touch0[0],l=u.touch0[1],h=u.touch1[0],d=u.touch1[1],p=(p=h[0]-s[0])*p+(p=h[1]-s[1])*p,v=(v=d[0]-l[0])*v+(v=d[1]-l[1])*v;e=y(e,Math.sqrt(p/v)),r=[(s[0]+h[0])/2,(s[1]+h[1])/2],o=[(l[0]+d[0])/2,(l[1]+d[1])/2]}else{if(!u.touch0)return;r=u.touch0[0],o=u.touch0[1]}u.zoom("touch",i(b(e,r,o),u.extent,c))}function k(){var t,e,r=x(this,arguments),i=Vt.changedTouches,o=i.length;for(bw(),n&&clearTimeout(n),n=setTimeout(function(){n=null},d),t=0;t<o;++t)e=i[t],r.touch0&&r.touch0[2]===e.identifier?delete r.touch0:r.touch1&&r.touch1[2]===e.identifier&&delete r.touch1;r.touch1&&!r.touch0&&(r.touch0=r.touch1,delete r.touch1),r.touch0?r.touch0[1]=this.__zoom.invert(r.touch0[0]):r.end()}return g.transform=function(t,n){var e=t.selection?t.selection():t;e.property("__zoom",ww),t!==e?m(t,n):e.interrupt().each(function(){x(this,arguments).start().zoom(null,"function"==typeof n?n.apply(this,arguments):n).end()})},g.scaleBy=function(t,n){g.scaleTo(t,function(){return this.__zoom.k*("function"==typeof n?n.apply(this,arguments):n)})},g.scaleTo=function(t,n){g.transform(t,function(){var t=r.apply(this,arguments),e=this.__zoom,o=_(t),u=e.invert(o),a="function"==typeof n?n.apply(this,arguments):n;return i(b(y(e,a),o,u),t,c)})},g.translateBy=function(t,n,e){g.transform(t,function(){return i(this.__zoom.translate("function"==typeof n?n.apply(this,arguments):n,"function"==typeof e?e.apply(this,arguments):e),r.apply(this,arguments),c)})},g.translateTo=function(t,n,e){g.transform(t,function(){var t=r.apply(this,arguments),o=this.__zoom,u=_(t);return i(gw.translate(u[0],u[1]).scale(o.k).translate("function"==typeof n?-n.apply(this,arguments):-n,"function"==typeof e?-e.apply(this,arguments):-e),t,c)})},w.prototype={start:function(){return 1==++this.active&&(this.index=l.push(this)-1,this.emit("start")),this},zoom:function(t,n){return this.mouse&&"mouse"!==t&&(this.mouse[1]=n.invert(this.mouse[0])),this.touch0&&"touch"!==t&&(this.touch0[1]=n.invert(this.touch0[0])),this.touch1&&"touch"!==t&&(this.touch1[1]=n.invert(this.touch1[0])),this.that.__zoom=n,this.emit("zoom"),this},end:function(){return 0==--this.active&&(l.splice(this.index,1),this.index=-1,this.emit("end")),this},emit:function(t){Jt(new function(t,n,e){this.target=t,this.type=n,this.transform=e}(g,t,this.that.__zoom),h.apply,h,[t,this.that,this.args])}},g.wheelDelta=function(t){return arguments.length?(o="function"==typeof t?t:pw(+t),g):o},g.filter=function(t){return arguments.length?(e="function"==typeof t?t:pw(!!t),g):e},g.touchable=function(t){return arguments.length?(u="function"==typeof t?t:pw(!!t),g):u},g.extent=function(t){return arguments.length?(r="function"==typeof t?t:pw([[+t[0][0],+t[0][1]],[+t[1][0],+t[1][1]]]),g):r},g.scaleExtent=function(t){return arguments.length?(a[0]=+t[0],a[1]=+t[1],g):[a[0],a[1]]},g.translateExtent=function(t){return arguments.length?(c[0][0]=+t[0][0],c[1][0]=+t[1][0],c[0][1]=+t[0][1],c[1][1]=+t[1][1],g):[[c[0][0],c[0][1]],[c[1][0],c[1][1]]]},g.constrain=function(t){return arguments.length?(i=t,g):i},g.duration=function(t){return arguments.length?(f=+t,g):f},g.interpolate=function(t){return arguments.length?(s=t,g):s},g.on=function(){var t=h.on.apply(h,arguments);return t===h?g:t},g.clickDistance=function(t){return arguments.length?(v=(t=+t)*t,g):Math.sqrt(v)},g};e.d(n,"version",function(){return"5.7.0"}),e.d(n,"bisect",function(){return c}),e.d(n,"bisectRight",function(){return u}),e.d(n,"bisectLeft",function(){return a}),e.d(n,"ascending",function(){return r}),e.d(n,"bisector",function(){return i}),e.d(n,"cross",function(){return l}),e.d(n,"descending",function(){return h}),e.d(n,"deviation",function(){return v}),e.d(n,"extent",function(){return g}),e.d(n,"histogram",function(){return E}),e.d(n,"thresholdFreedmanDiaconis",function(){return z}),e.d(n,"thresholdScott",function(){return L}),e.d(n,"thresholdSturges",function(){return T}),e.d(n,"max",function(){return R}),e.d(n,"mean",function(){return D}),e.d(n,"median",function(){return O}),e.d(n,"merge",function(){return q}),e.d(n,"min",function(){return U}),e.d(n,"pairs",function(){return f}),e.d(n,"permute",function(){return B}),e.d(n,"quantile",function(){return P}),e.d(n,"range",function(){return w}),e.d(n,"scan",function(){return Y}),e.d(n,"shuffle",function(){return H}),e.d(n,"sum",function(){return I}),e.d(n,"ticks",function(){return C}),e.d(n,"tickIncrement",function(){return N}),e.d(n,"tickStep",function(){return k}),e.d(n,"transpose",function(){return F}),e.d(n,"variance",function(){return p}),e.d(n,"zip",function(){return G}),e.d(n,"axisTop",function(){return rt}),e.d(n,"axisRight",function(){return it}),e.d(n,"axisBottom",function(){return ot}),e.d(n,"axisLeft",function(){return ut}),e.d(n,"brush",function(){return No}),e.d(n,"brushX",function(){return Ao}),e.d(n,"brushY",function(){return Co}),e.d(n,"brushSelection",function(){return So}),e.d(n,"chord",function(){return Do}),e.d(n,"ribbon",function(){return $o}),e.d(n,"nest",function(){return Ko}),e.d(n,"set",function(){return au}),e.d(n,"map",function(){return Jo}),e.d(n,"keys",function(){return cu}),e.d(n,"values",function(){return fu}),e.d(n,"entries",function(){return su}),e.d(n,"color",function(){return In}),e.d(n,"rgb",function(){return Xn}),e.d(n,"hsl",function(){return Zn}),e.d(n,"lab",function(){return se}),e.d(n,"hcl",function(){return be}),e.d(n,"lch",function(){return ye}),e.d(n,"gray",function(){return fe}),e.d(n,"cubehelix",function(){return Ce}),e.d(n,"contours",function(){return mu}),e.d(n,"contourDensity",function(){return Cu}),e.d(n,"dispatch",function(){return ht}),e.d(n,"drag",function(){return Cn}),e.d(n,"dragDisable",function(){return bn}),e.d(n,"dragEnable",function(){return _n}),e.d(n,"dsvFormat",function(){return Lu}),e.d(n,"csvParse",function(){return Du}),e.d(n,"csvParseRows",function(){return Ou}),e.d(n,"csvFormat",function(){return qu}),e.d(n,"csvFormatRows",function(){return Uu}),e.d(n,"tsvParse",function(){return Yu}),e.d(n,"tsvParseRows",function(){return Hu}),e.d(n,"tsvFormat",function(){return Iu}),e.d(n,"tsvFormatRows",function(){return Fu}),e.d(n,"easeLinear",function(){return li}),e.d(n,"easeQuad",function(){return pi}),e.d(n,"easeQuadIn",function(){return hi}),e.d(n,"easeQuadOut",function(){return di}),e.d(n,"easeQuadInOut",function(){return pi}),e.d(n,"easeCubic",function(){return yi}),e.d(n,"easeCubicIn",function(){return vi}),e.d(n,"easeCubicOut",function(){return gi}),e.d(n,"easeCubicInOut",function(){return yi}),e.d(n,"easePoly",function(){return mi}),e.d(n,"easePolyIn",function(){return bi}),e.d(n,"easePolyOut",function(){return _i}),e.d(n,"easePolyInOut",function(){return mi}),e.d(n,"easeSin",function(){return Ai}),e.d(n,"easeSinIn",function(){return Mi}),e.d(n,"easeSinOut",function(){return Si}),e.d(n,"easeSinInOut",function(){return Ai}),e.d(n,"easeExp",function(){return ki}),e.d(n,"easeExpIn",function(){return Ci}),e.d(n,"easeExpOut",function(){return Ni}),e.d(n,"easeExpInOut",function(){return ki}),e.d(n,"easeCircle",function(){return Pi}),e.d(n,"easeCircleIn",function(){return Ti}),e.d(n,"easeCircleOut",function(){return Ei}),e.d(n,"easeCircleInOut",function(){return Pi}),e.d(n,"easeBounce",function(){return Fi}),e.d(n,"easeBounceIn",function(){return Ii}),e.d(n,"easeBounceOut",function(){return Fi}),e.d(n,"easeBounceInOut",function(){return ji}),e.d(n,"easeBack",function(){return Vi}),e.d(n,"easeBackIn",function(){return Gi}),e.d(n,"easeBackOut",function(){return Xi}),e.d(n,"easeBackInOut",function(){return Vi}),e.d(n,"easeElastic",function(){return Zi}),e.d(n,"easeElasticIn",function(){return $i}),e.d(n,"easeElasticOut",function(){return Zi}),e.d(n,"easeElasticInOut",function(){return Qi}),e.d(n,"blob",function(){return Gu}),e.d(n,"buffer",function(){return Vu}),e.d(n,"dsv",function(){return Qu}),e.d(n,"csv",function(){return Ju}),e.d(n,"tsv",function(){return Ku}),e.d(n,"image",function(){return ta}),e.d(n,"json",function(){return ea}),e.d(n,"text",function(){return $u}),e.d(n,"xml",function(){return ia}),e.d(n,"html",function(){return oa}),e.d(n,"svg",function(){return ua}),e.d(n,"forceCenter",function(){return aa}),e.d(n,"forceCollide",function(){return ma}),e.d(n,"forceLink",function(){return Ma}),e.d(n,"forceManyBody",function(){return Ta}),e.d(n,"forceRadial",function(){return Ea}),e.d(n,"forceSimulation",function(){return ka}),e.d(n,"forceX",function(){return Pa}),e.d(n,"forceY",function(){return za}),e.d(n,"formatDefaultLocale",function(){return Wa}),e.d(n,"format",function(){return Ya}),e.d(n,"formatPrefix",function(){return Ha}),e.d(n,"formatLocale",function(){return Va}),e.d(n,"formatSpecifier",function(){return Oa}),e.d(n,"precisionFixed",function(){return $a}),e.d(n,"precisionPrefix",function(){return Za}),e.d(n,"precisionRound",function(){return Qa}),e.d(n,"geoArea",function(){return Fc}),e.d(n,"geoBounds",function(){return Of}),e.d(n,"geoCentroid",function(){return Wf}),e.d(n,"geoCircle",function(){return os}),e.d(n,"geoClipAntimeridian",function(){return gs}),e.d(n,"geoClipCircle",function(){return ys}),e.d(n,"geoClipExtent",function(){return As}),e.d(n,"geoClipRectangle",function(){return xs}),e.d(n,"geoContains",function(){return Fs}),e.d(n,"geoDistance",function(){return Rs}),e.d(n,"geoGraticule",function(){return Xs}),e.d(n,"geoGraticule10",function(){return Vs}),e.d(n,"geoInterpolate",function(){return Js}),e.d(n,"geoLength",function(){return Ps}),e.d(n,"geoPath",function(){return Zl}),e.d(n,"geoAlbers",function(){return vh}),e.d(n,"geoAlbersUsa",function(){return gh}),e.d(n,"geoAzimuthalEqualArea",function(){return mh}),e.d(n,"geoAzimuthalEqualAreaRaw",function(){return _h}),e.d(n,"geoAzimuthalEquidistant",function(){return wh}),e.d(n,"geoAzimuthalEquidistantRaw",function(){return xh}),e.d(n,"geoConicConformal",function(){return kh}),e.d(n,"geoConicConformalRaw",function(){return Nh}),e.d(n,"geoConicEqualArea",function(){return ph}),e.d(n,"geoConicEqualAreaRaw",function(){return dh}),e.d(n,"geoConicEquidistant",function(){return zh}),e.d(n,"geoConicEquidistantRaw",function(){return Ph}),e.d(n,"geoEqualEarth",function(){return Bh}),e.d(n,"geoEqualEarthRaw",function(){return Uh}),e.d(n,"geoEquirectangular",function(){return Eh}),e.d(n,"geoEquirectangularRaw",function(){return Th}),e.d(n,"geoGnomonic",function(){return Hh}),e.d(n,"geoGnomonicRaw",function(){return Yh}),e.d(n,"geoIdentity",function(){return Fh}),e.d(n,"geoProjection",function(){return sh}),e.d(n,"geoProjectionMutator",function(){return lh}),e.d(n,"geoMercator",function(){return Sh}),e.d(n,"geoMercatorRaw",function(){return Mh}),e.d(n,"geoNaturalEarth1",function(){return Gh}),e.d(n,"geoNaturalEarth1Raw",function(){return jh}),e.d(n,"geoOrthographic",function(){return Vh}),e.d(n,"geoOrthographicRaw",function(){return Xh}),e.d(n,"geoStereographic",function(){return $h}),e.d(n,"geoStereographicRaw",function(){return Wh}),e.d(n,"geoTransverseMercator",function(){return Qh}),e.d(n,"geoTransverseMercatorRaw",function(){return Zh}),e.d(n,"geoRotation",function(){return es}),e.d(n,"geoStream",function(){return Dc}),e.d(n,"geoTransform",function(){return Ql}),e.d(n,"cluster",function(){return nd}),e.d(n,"hierarchy",function(){return rd}),e.d(n,"pack",function(){return Nd}),e.d(n,"packSiblings",function(){return wd}),e.d(n,"packEnclose",function(){return fd}),e.d(n,"partition",function(){return Ld}),e.d(n,"stratify",function(){return Bd}),e.d(n,"tree",function(){return Xd}),e.d(n,"treemap",function(){return Qd}),e.d(n,"treemapBinary",function(){return Jd}),e.d(n,"treemapDice",function(){return zd}),e.d(n,"treemapSlice",function(){return Vd}),e.d(n,"treemapSliceDice",function(){return Kd}),e.d(n,"treemapSquarify",function(){return Zd}),e.d(n,"treemapResquarify",function(){return tp}),e.d(n,"interpolate",function(){return Qe}),e.d(n,"interpolateArray",function(){return Ye}),e.d(n,"interpolateBasis",function(){return Te}),e.d(n,"interpolateBasisClosed",function(){return Ee}),e.d(n,"interpolateDate",function(){return He}),e.d(n,"interpolateDiscrete",function(){return Je}),e.d(n,"interpolateHue",function(){return Ke}),e.d(n,"interpolateNumber",function(){return Ie}),e.d(n,"interpolateObject",function(){return Fe}),e.d(n,"interpolateRound",function(){return tr}),e.d(n,"interpolateString",function(){return Ze}),e.d(n,"interpolateTransformCss",function(){return or}),e.d(n,"interpolateTransformSvg",function(){return ur}),e.d(n,"interpolateZoom",function(){return fr}),e.d(n,"interpolateRgb",function(){return Oe}),e.d(n,"interpolateRgbBasis",function(){return Ue}),e.d(n,"interpolateRgbBasisClosed",function(){return Be}),e.d(n,"interpolateHsl",function(){return lr}),e.d(n,"interpolateHslLong",function(){return hr}),e.d(n,"interpolateLab",function(){return dr}),e.d(n,"interpolateHcl",function(){return vr}),e.d(n,"interpolateHclLong",function(){return gr}),e.d(n,"interpolateCubehelix",function(){return br}),e.d(n,"interpolateCubehelixLong",function(){return _r}),e.d(n,"piecewise",function(){return mr}),e.d(n,"quantize",function(){return Mr}),e.d(n,"path",function(){return Fo}),e.d(n,"polygonArea",function(){return np}),e.d(n,"polygonCentroid",function(){return ep}),e.d(n,"polygonHull",function(){return up}),e.d(n,"polygonContains",function(){return ap}),e.d(n,"polygonLength",function(){return cp}),e.d(n,"quadtree",function(){return pa}),e.d(n,"randomUniform",function(){return sp}),e.d(n,"randomNormal",function(){return lp}),e.d(n,"randomLogNormal",function(){return hp}),e.d(n,"randomBates",function(){return pp}),e.d(n,"randomIrwinHall",function(){return dp}),e.d(n,"randomExponential",function(){return vp}),e.d(n,"scaleBand",function(){return xp}),e.d(n,"scalePoint",function(){return wp}),e.d(n,"scaleIdentity",function(){return Rp}),e.d(n,"scaleLinear",function(){return Lp}),e.d(n,"scaleLog",function(){return Ip}),e.d(n,"scaleOrdinal",function(){return mp}),e.d(n,"scaleImplicit",function(){return _p}),e.d(n,"scalePow",function(){return jp}),e.d(n,"scaleSqrt",function(){return Gp}),e.d(n,"scaleQuantile",function(){return Xp}),e.d(n,"scaleQuantize",function(){return Vp}),e.d(n,"scaleThreshold",function(){return Wp}),e.d(n,"scaleTime",function(){return jy}),e.d(n,"scaleUtc",function(){return Gy}),e.d(n,"scaleSequential",function(){return Xy}),e.d(n,"scaleDiverging",function(){return Vy}),e.d(n,"schemeCategory10",function(){return $y}),e.d(n,"schemeAccent",function(){return Zy}),e.d(n,"schemeDark2",function(){return Qy}),e.d(n,"schemePaired",function(){return Jy}),e.d(n,"schemePastel1",function(){return Ky}),e.d(n,"schemePastel2",function(){return tb}),e.d(n,"schemeSet1",function(){return nb}),e.d(n,"schemeSet2",function(){return eb}),e.d(n,"schemeSet3",function(){return rb}),e.d(n,"interpolateBrBG",function(){return ub}),e.d(n,"schemeBrBG",function(){return ob}),e.d(n,"interpolatePRGn",function(){return cb}),e.d(n,"schemePRGn",function(){return ab}),e.d(n,"interpolatePiYG",function(){return sb}),e.d(n,"schemePiYG",function(){return fb}),e.d(n,"interpolatePuOr",function(){return hb}),e.d(n,"schemePuOr",function(){return lb}),e.d(n,"interpolateRdBu",function(){return pb}),e.d(n,"schemeRdBu",function(){return db}),e.d(n,"interpolateRdGy",function(){return gb}),e.d(n,"schemeRdGy",function(){return vb}),e.d(n,"interpolateRdYlBu",function(){return bb}),e.d(n,"schemeRdYlBu",function(){return yb}),e.d(n,"interpolateRdYlGn",function(){return mb}),e.d(n,"schemeRdYlGn",function(){return _b}),e.d(n,"interpolateSpectral",function(){return wb}),e.d(n,"schemeSpectral",function(){return xb}),e.d(n,"interpolateBuGn",function(){return Sb}),e.d(n,"schemeBuGn",function(){return Mb}),e.d(n,"interpolateBuPu",function(){return Cb}),e.d(n,"schemeBuPu",function(){return Ab}),e.d(n,"interpolateGnBu",function(){return kb}),e.d(n,"schemeGnBu",function(){return Nb}),e.d(n,"interpolateOrRd",function(){return Eb}),e.d(n,"schemeOrRd",function(){return Tb}),e.d(n,"interpolatePuBuGn",function(){return zb}),e.d(n,"schemePuBuGn",function(){return Pb}),e.d(n,"interpolatePuBu",function(){return Rb}),e.d(n,"schemePuBu",function(){return Lb}),e.d(n,"interpolatePuRd",function(){return Ob}),e.d(n,"schemePuRd",function(){return Db}),e.d(n,"interpolateRdPu",function(){return Ub}),e.d(n,"schemeRdPu",function(){return qb}),e.d(n,"interpolateYlGnBu",function(){return Yb}),e.d(n,"schemeYlGnBu",function(){return Bb}),e.d(n,"interpolateYlGn",function(){return Ib}),e.d(n,"schemeYlGn",function(){return Hb}),e.d(n,"interpolateYlOrBr",function(){return jb}),e.d(n,"schemeYlOrBr",function(){return Fb}),e.d(n,"interpolateYlOrRd",function(){return Xb}),e.d(n,"schemeYlOrRd",function(){return Gb}),e.d(n,"interpolateBlues",function(){return Wb}),e.d(n,"schemeBlues",function(){return Vb}),e.d(n,"interpolateGreens",function(){return Zb}),e.d(n,"schemeGreens",function(){return $b}),e.d(n,"interpolateGreys",function(){return Jb}),e.d(n,"schemeGreys",function(){return Qb}),e.d(n,"interpolatePurples",function(){return t_}),e.d(n,"schemePurples",function(){return Kb}),e.d(n,"interpolateReds",function(){return e_}),e.d(n,"schemeReds",function(){return n_}),e.d(n,"interpolateOranges",function(){return i_}),e.d(n,"schemeOranges",function(){return r_}),e.d(n,"interpolateCubehelixDefault",function(){return o_}),e.d(n,"interpolateRainbow",function(){return f_}),e.d(n,"interpolateWarm",function(){return u_}),e.d(n,"interpolateCool",function(){return a_}),e.d(n,"interpolateSinebow",function(){return d_}),e.d(n,"interpolateViridis",function(){return v_}),e.d(n,"interpolateMagma",function(){return g_}),e.d(n,"interpolateInferno",function(){return y_}),e.d(n,"interpolatePlasma",function(){return b_}),e.d(n,"create",function(){return un}),e.d(n,"creator",function(){return gt}),e.d(n,"local",function(){return cn}),e.d(n,"matcher",function(){return St}),e.d(n,"mouse",function(){return hn}),e.d(n,"namespace",function(){return vt}),e.d(n,"namespaces",function(){return pt}),e.d(n,"clientPoint",function(){return ln}),e.d(n,"select",function(){return on}),e.d(n,"selectAll",function(){return dn}),e.d(n,"selection",function(){return rn}),e.d(n,"selector",function(){return bt}),e.d(n,"selectorAll",function(){return mt}),e.d(n,"style",function(){return zt}),e.d(n,"touch",function(){return pn}),e.d(n,"touches",function(){return vn}),e.d(n,"window",function(){return Pt}),e.d(n,"event",function(){return Vt}),e.d(n,"customEvent",function(){return Jt}),e.d(n,"arc",function(){return U_}),e.d(n,"area",function(){return j_}),e.d(n,"line",function(){return F_}),e.d(n,"pie",function(){return V_}),e.d(n,"areaRadial",function(){return K_}),e.d(n,"radialArea",function(){return K_}),e.d(n,"lineRadial",function(){return J_}),e.d(n,"radialLine",function(){return J_}),e.d(n,"pointRadial",function(){return tm}),e.d(n,"linkHorizontal",function(){return cm}),e.d(n,"linkVertical",function(){return fm}),e.d(n,"linkRadial",function(){return sm}),e.d(n,"symbol",function(){return km}),e.d(n,"symbols",function(){return Nm}),e.d(n,"symbolCircle",function(){return lm}),e.d(n,"symbolCross",function(){return hm}),e.d(n,"symbolDiamond",function(){return vm}),e.d(n,"symbolSquare",function(){return mm}),e.d(n,"symbolStar",function(){return _m}),e.d(n,"symbolTriangle",function(){return wm}),e.d(n,"symbolWye",function(){return Cm}),e.d(n,"curveBasisClosed",function(){return Rm}),e.d(n,"curveBasisOpen",function(){return Om}),e.d(n,"curveBasis",function(){return zm}),e.d(n,"curveBundle",function(){return Um}),e.d(n,"curveCardinalClosed",function(){return Fm}),e.d(n,"curveCardinalOpen",function(){return Gm}),e.d(n,"curveCardinal",function(){return Hm}),e.d(n,"curveCatmullRomClosed",function(){return Zm}),e.d(n,"curveCatmullRomOpen",function(){return Jm}),e.d(n,"curveCatmullRom",function(){return Wm}),e.d(n,"curveLinearClosed",function(){return tx}),e.d(n,"curveLinear",function(){return Y_}),e.d(n,"curveMonotoneX",function(){return cx}),e.d(n,"curveMonotoneY",function(){return fx}),e.d(n,"curveNatural",function(){return hx}),e.d(n,"curveStep",function(){return px}),e.d(n,"curveStepAfter",function(){return gx}),e.d(n,"curveStepBefore",function(){return vx}),e.d(n,"stack",function(){return mx}),e.d(n,"stackOffsetExpand",function(){return xx}),e.d(n,"stackOffsetDiverging",function(){return wx}),e.d(n,"stackOffsetNone",function(){return yx}),e.d(n,"stackOffsetSilhouette",function(){return Mx}),e.d(n,"stackOffsetWiggle",function(){return Sx}),e.d(n,"stackOrderAscending",function(){return Ax}),e.d(n,"stackOrderDescending",function(){return Nx}),e.d(n,"stackOrderInsideOut",function(){return kx}),e.d(n,"stackOrderNone",function(){return bx}),e.d(n,"stackOrderReverse",function(){return Tx}),e.d(n,"timeInterval",function(){return Qp}),e.d(n,"timeMillisecond",function(){return Kp}),e.d(n,"timeMilliseconds",function(){return tv}),e.d(n,"utcMillisecond",function(){return Kp}),e.d(n,"utcMilliseconds",function(){return tv}),e.d(n,"timeSecond",function(){return iv}),e.d(n,"timeSeconds",function(){return ov}),e.d(n,"utcSecond",function(){return iv}),e.d(n,"utcSeconds",function(){return ov}),e.d(n,"timeMinute",function(){return av}),e.d(n,"timeMinutes",function(){return cv}),e.d(n,"timeHour",function(){return sv}),e.d(n,"timeHours",function(){return lv}),e.d(n,"timeDay",function(){return dv}),e.d(n,"timeDays",function(){return pv}),e.d(n,"timeWeek",function(){return gv}),e.d(n,"timeWeeks",function(){return Mv}),e.d(n,"timeSunday",function(){return gv}),e.d(n,"timeSundays",function(){return Mv}),e.d(n,"timeMonday",function(){return yv}),e.d(n,"timeMondays",function(){return Sv}),e.d(n,"timeTuesday",function(){return bv}),e.d(n,"timeTuesdays",function(){return Av}),e.d(n,"timeWednesday",function(){return _v}),e.d(n,"timeWednesdays",function(){return Cv}),e.d(n,"timeThursday",function(){return mv}),e.d(n,"timeThursdays",function(){return Nv}),e.d(n,"timeFriday",function(){return xv}),e.d(n,"timeFridays",function(){return kv}),e.d(n,"timeSaturday",function(){return wv}),e.d(n,"timeSaturdays",function(){return Tv}),e.d(n,"timeMonth",function(){return Pv}),e.d(n,"timeMonths",function(){return zv}),e.d(n,"timeYear",function(){return Rv}),e.d(n,"timeYears",function(){return Dv}),e.d(n,"utcMinute",function(){return qv}),e.d(n,"utcMinutes",function(){return Uv}),e.d(n,"utcHour",function(){return Yv}),e.d(n,"utcHours",function(){return Hv}),e.d(n,"utcDay",function(){return Fv}),e.d(n,"utcDays",function(){return jv}),e.d(n,"utcWeek",function(){return Xv}),e.d(n,"utcWeeks",function(){return Kv}),e.d(n,"utcSunday",function(){return Xv}),e.d(n,"utcSundays",function(){return Kv}),e.d(n,"utcMonday",function(){return Vv}),e.d(n,"utcMondays",function(){return tg}),e.d(n,"utcTuesday",function(){return Wv}),e.d(n,"utcTuesdays",function(){return ng}),e.d(n,"utcWednesday",function(){return $v}),e.d(n,"utcWednesdays",function(){return eg}),e.d(n,"utcThursday",function(){return Zv}),e.d(n,"utcThursdays",function(){return rg}),e.d(n,"utcFriday",function(){return Qv}),e.d(n,"utcFridays",function(){return ig}),e.d(n,"utcSaturday",function(){return Jv}),e.d(n,"utcSaturdays",function(){return og}),e.d(n,"utcMonth",function(){return ag}),e.d(n,"utcMonths",function(){return cg}),e.d(n,"utcYear",function(){return sg}),e.d(n,"utcYears",function(){return lg}),e.d(n,"timeFormatDefaultLocale",function(){return Py}),e.d(n,"timeFormat",function(){return yg}),e.d(n,"timeParse",function(){return bg}),e.d(n,"utcFormat",function(){return _g}),e.d(n,"utcParse",function(){return mg}),e.d(n,"timeFormatLocale",function(){return vg}),e.d(n,"isoFormat",function(){return zy}),e.d(n,"isoParse",function(){return Ly}),e.d(n,"now",function(){return Lr}),e.d(n,"timer",function(){return Or}),e.d(n,"timerFlush",function(){return qr}),e.d(n,"timeout",function(){return Hr}),e.d(n,"interval",function(){return Ir}),e.d(n,"transition",function(){return ci}),e.d(n,"active",function(){return no}),e.d(n,"interrupt",function(){return ei}),e.d(n,"voronoi",function(){return dw}),e.d(n,"zoom",function(){return Cw}),e.d(n,"zoomTransform",function(){return yw}),e.d(n,"zoomIdentity",function(){return gw})},function(t,n,e){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),e(4);var r=function(t){return t&&t.__esModule?t:{default:t}}(e(2));n.default=r.default},function(t,n,e){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=function(){function t(t,n){for(var e=0;e<n.length;e++){var r=n[e];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(n,e,r){return e&&t(n.prototype,e),r&&t(n,r),n}}(),i=function(t){if(t&&t.__esModule)return t;var n={};if(null!=t)for(var e in t)Object.prototype.hasOwnProperty.call(t,e)&&(n[e]=t[e]);return n.default=t,n}(e(0));e(3);var o=function(){function t(n,e,r){!function(t,n){if(!(t instanceof n))throw new TypeError("Cannot call a class as a function")}(this,t),this.container=n,this.config=e,this.options=r,this.initialize()}return r(t,[{key:"findXPos",value:function(t){var n=parseInt(t.value);return n>0&&n<10?8:n>=10&&n<100?5:2}},{key:"findYPos",value:function(t){var n=parseInt(t.seat.replace(/\D/g,"")),e=this.deckArr.find(function(t){return t.num.includes(n)});return e&&"small"===e.seatType?this.seatSize.smHeight/2+2:this.seatSize.lgHeight/2+2}},{key:"highlight",value:function(t){if(t&&""!==t){this.highlightHandler(t,"element-hover")}}},{key:"select",value:function(t){if(t&&""!==t){this.highlightHandler(t,"selected")}}},{key:"highlightHandler",value:function(t,n){var e=t.replace(/\'/g,"").split(/(\d+)/).filter(Boolean),r=""+e[1]+e[0];this.container.querySelectorAll("."+n).forEach(function(t){return t.classList.remove(n)}),this.container.querySelector("."+r).classList.add(n)}},{key:"detectPadding",value:function(t){var n=this,e=0;return this.cabinClsSeatLtrs.forEach(function(r,i){r.includes(t)&&(e=n.padding.inner*i)}),e}},{key:"roundedPath",value:function(t,n,e,r,i){return"M"+t+", "+n+"h"+(e-i)+"a"+i+", "+i+" 0 0 1 "+i+", "+i+" \n        v"+(r-2*i)+" a"+i+", "+i+" 0 0 1 "+-i+", "+i+"h"+(i-e)+"z"}},{key:"calcHeight",value:function(t){var n=(this.seatLayoutConfig.y.length-1)*this.padding.inner+t.seatSize*t.columns;return!this.showDeckName&&this.showCabinName?n=n+this.padding.top+70:this.showDeckName&&this.showCabinName?n=n+2*this.padding.top+20:this.showDeckName&&!this.showCabinName?n+=15:this.showDeckName||this.showCabinName||(n+=20),n}},{key:"currentCabinConf",value:function(t){return this.cabinClsConf.filter(function(n){return n.cabin===t})[0]}},{key:"xAxis",value:function(t,n,e){for(var r=this,i=this,o=this.currentCabinConf(n),u=function(n){var o=r.svg.append("g").classed("xAxis",!0),u=0;i.cabinRowNumHeight.forEach(function(t,e){e<n&&(u+=t)});var a=r.showCabinName?15:8,c=n>0?n*(r.padding.inner+a):a-8;c=r.showCabinName?c+42:c+8,o.selectAll("text").data(r.numData).enter().append("text").text(function(t){return t}).attr("style","font-size: 9px; fill: #c2c6c9;").attr("transform",function(o,a){var f=r.getLaventoriesGalleries(o,e);return"translate("+(t+20*f+(a+1)*i.seatSize.width)+", "+(i.chartSize.height-c-(i.cabinRowNumHeight[n]+u+5))+")"})},a=0;a<o.seatConf.length-1;a++)u(a)}},{key:"yAxis",value:function(t,n){var e=this,r=this.showCabinName?this.chartSize.height-40:this.chartSize.height,i=this.svg.append("g").classed("yAxis",!0);i.selectAll("text").data(t).enter().append("text").text(function(t){return t}).attr("transform",function(t){return"translate("+(e.currentScalePoint-e.padding.inner+32)+", "+(r+n-e.alphaScale(t)-e.detectPadding(t))+" )"}).attr("style","font-size: 9px; fill: #c2c6c9;")}},{key:"initiateScales",value:function(t,n){var e=0,r=0;this.numData=[];for(var o=t.startRow;o<=t.endRow;o++)this.numData.push(o);this.deckArr.push({seatType:t.seatType,num:this.numData}),this.showCabinName?(e=0+this.padding.top,r=this.chartSize.height-this.padding.top-this.padding.bottom):(e=0+this.padding.top,r=this.chartSize.height),this.numScale=i.scaleLinear().domain([t.startRow,t.endRow]).range([this.currentScalePoint,this.chartSize.width-this.padding.left-this.padding.right]),this.alphaScale=i.scaleBand().domain(n).range([e,r])}},{key:"findDeckData",value:function(t){var n=[];if(this.config.data){var e=t[0].startRow,r=t[0].endRow;t.forEach(function(t){e=e>=t.startRow?t.startRow:e,r=r<=t.endRow?t.endRow:r}),this.config.data.forEach(function(t){var i=parseInt(t.seat.replace(/\'/g,"").split(/(\d+)/).filter(Boolean)[0]);e<=i&&i<=r&&n.push(t)})}return n}},{key:"initialize",value:function(){var t=this;if(this.deckNameW=0,this.deckArr=[],this.numData=[],this.classConfig=[],this.seatLetters=[],this.cabinClsConf=[],this.cabinClsSeatLtrs=[],this.numScale=void 0,this.alphaScale=void 0,this.cabinRowNumHeight=[],this.chartSize={},this.padding={top:50,bottom:50,left:10,right:10,inner:20},this.seatSize={smHeight:28,lgHeight:42,width:28},this.seatLayoutConfig={x:0,y:[]},this.seatSplitConfig={seatLtrs:[],splitConf:""},this.svg=void 0,this.cabinName=void 0,this.deckNameDisplay=void 0,this.previousScalePoint=0,this.currentScalePoint=this.padding.left,this.showDeckName=this.options.displayDeckName||void 0===this.options.displayDeckName,this.showCabinName=this.options.displayCabinClassName||void 0===this.options.displayCabinClassName,this.tool_tip=i.tip().attr("class","lopa-tooltip").offset([-8,0]).html(function(t){return t}),this.chartWrapper=i.select(this.container).append("div").classed("lopa-container",!0),this.hoverHolder=this.chartWrapper.append("div").classed("hover",!0),this.config&&this.config.deckConfig&&this.config.deckConfig.length){var n=this.config.deckConfig.length;1===n?(this.config.deckConfig[0].data=this.config.data,this.drawLopa(this.config.deckConfig[0])):n>1&&this.config.deckConfig.forEach(function(n){n.data=t.findDeckData(n.cabinClassConfig),t.drawLopa(n)})}}},{key:"alterSeatLetters",value:function(t){var n=this,e=[],r=[];this.largeSeatConf.forEach(function(t){e.push(n.largeAlphaScaleLtrs.splice(0,t))}),this.smallSeatConf.forEach(function(t){r.push(n.smallAlphaScaleLtrs.splice(0,t))}),e.forEach(function(n,i){n.length<t[i]&&(i+1!==e.length?n.push(r[i][t[i]-1]):r[i].length===t[i]?e[i]=r[i]:n.unshift(r[i][t[i]-1]))}),this.smallAlphaScaleLtrs=[].concat.apply([],r),this.largeAlphaScaleLtrs=[].concat.apply([],e)}},{key:"drawLopa",value:function(t){var n=this,e=[],r={columns:0,seatSize:0};this.previousScalePoint=0,this.currentScalePoint=this.padding.left,this.classConfig=[],this.cabinClsConf=[],this.seatLayoutConfig.x=0,this.largeAlphaScaleLtrs=[],this.smallAlphaScaleLtrs=[],this.largeSeatConf=[],this.smallSeatConf=[],this.isLavatoriesAndGalleysExist=!1,this.lavatoriesAndGalleys=[],this.cabinRowNumHeight=[],t.lavatoriesAndGalleys&&t.lavatoriesAndGalleys.length&&(this.isLavatoriesAndGalleysExist=!0,this.lavatoriesAndGalleys=t.lavatoriesAndGalleys),t.cabinClassConfig.forEach(function(t){var i=(e=t.seatConfig.split("-").map(function(t){return parseInt(t)})).reduce(function(t,n){return t+n});if("large"===t.seatType&&n.largeAlphaScaleLtrs.length<t.seatLetters.split("").length&&(n.largeAlphaScaleLtrs=t.seatLetters.split(""),n.largeSeatConf=e),"small"===t.seatType&&n.smallAlphaScaleLtrs.length<t.seatLetters.split("").length&&(n.smallAlphaScaleLtrs=t.seatLetters.split(""),n.smallSeatConf=e),n.seatLayoutConfig.x=n.seatLayoutConfig.x+(t.endRow-t.startRow+1),n.cabinClsConf.push({cabin:t.cabinClass,letters:t.seatLetters.split(""),seatConf:e,seatType:t.seatType}),n.cabinRowNumHeight.length?e.forEach(function(e,r){var i=e*("small"===t.seatType?n.seatSize.smHeight:n.seatSize.lgHeight);n.cabinRowNumHeight[r]=n.cabinRowNumHeight[r]<i?i:n.cabinRowNumHeight[r]}):e.forEach(function(e,r){var i=e*("small"===t.seatType?n.seatSize.smHeight:n.seatSize.lgHeight);n.cabinRowNumHeight.push(i)}),r.columns<i){n.cabinClsSeatLtrs=[],r.columns=i,r.seatSize="small"===t.seatType?n.seatSize.smHeight:n.seatSize.lgHeight,n.seatLayoutConfig.y=e;var o=t.seatLetters.split("");n.seatLayoutConfig.y.forEach(function(t,e){n.cabinClsSeatLtrs[e]=o.splice(0,t)})}n.classConfig[t.cabinClassOrder-1]=t}),this.cabinClsConf.forEach(function(t){"large"===t.seatType&&(t.seatConf.length>2&&n.largeAlphaScaleLtrs.length<=7&&t.letters.length<6&&n.smallAlphaScaleLtrs.length>=7?(t.seatConf=[2,2,2],n.largeAlphaScaleLtrs.length<6&&n.alterSeatLetters(t.seatConf)):t.seatConf=n.largeSeatConf)}),r.columns=this.seatLayoutConfig.y.reduce(function(t,n){return t+n});var i=this.isLavatoriesAndGalleysExist?this.lavatoriesAndGalleys.length:0;this.chartSize={width:this.padding.left+this.padding.right+20*i+this.classConfig.length*this.padding.inner+this.seatSize.width*this.seatLayoutConfig.x,height:this.calcHeight(r)};var o=this.chartWrapper.append("div").classed("lopa-chart-"+t.deckName+" deck-wrapper",!0);this.showDeckName&&(this.deckNameDisplay=o.append("div").classed("deck-name",!0).text(t.deckName)),this.cabinName=o.append("div").classed("lopa-cabin-name",!0),this.svg=o.append("svg").attr("width",this.chartSize.width).attr("height",this.chartSize.height),this.svg.call(this.tool_tip),this.drawSeats(t)}},{key:"getLaventoriesGalleries",value:function(t,n){var e=0;return n.length&&n.forEach(function(n,r){n<=t&&(e=r+1)}),e}},{key:"laventoriesCabinCount",value:function(t,n){var e=0;return this.isLavatoriesAndGalleysExist&&this.lavatoriesAndGalleys.forEach(function(r){t<=r&&r<=n&&++e}),e}},{key:"renderSeats",value:function(t,n,e){var r=this,o=this,u=this.seatSize.width,a="small"===t.cabin.seatType?this.seatSize.smHeight:this.seatSize.lgHeight,c=u-4,f=a-4,s=(""+e.split(" ").join("").toLowerCase()+t.cabin.cabinClass.split(" ").join("").toLowerCase()).replace(/[^a-zA-Z0-9]/g,"-"),l=this.showCabinName?this.chartSize.height-40:this.chartSize.height,h=[];if(this.isLavatoriesAndGalleysExist){for(var d=(h=[].concat(function(t){if(Array.isArray(t)){for(var n=0,e=Array(t.length);n<t.length;n++)e[n]=t[n];return e}return Array.from(t)}(this.lavatoriesAndGalleys))).length-1;d>=0;--d)(t.cabin.startRow>h[d]||h[d]>t.cabin.endRow)&&h.splice(d,1);h.sort(function(t,n){return t-n})}this.xAxis(this.currentScalePoint+5,t.cabin.cabinClass,h),this.yAxis(t.seatConf,t.yAxis);var p=this.isLavatoriesAndGalleysExist?this.laventoriesCabinCount(t.cabin.startRow,t.cabin.endRow):0;this.showCabinName&&this.cabinName.append("div").classed("cabin-class-name",!0).html("<span>"+t.cabin.cabinClass+"</span>").attr("style",function(t){return"transform: translate("+(o.currentScalePoint+o.padding.inner+5)+"px, 15px);\n                        width: "+(o.numData.length*u+20*p)+"px;\n                        display: inline;"});var v=this.svg.append("g").classed("cabin "+s,!0);this.numData.forEach(function(e,i){v.selectAll("g").data(t.seatConf).enter().append("path").attr("class",function(t){return"default "+t+e}).attr("id",function(t){return""+e+t}).attr("d",o.roundedPath(-c/2,-f/2,c,f,7)).attr("transform",function(n){var a=r.getLaventoriesGalleries(e,h);return o.previousScalePoint=o.currentScalePoint+20*a+(i+1)*u,"translate("+(o.currentScalePoint+20*a+(i+1)*u+12)+", "+(l-o.alphaScale(n)-o.detectPadding(n)+t.topPos)+")"}).attr("style",function(r){var i=""+e+r,o="#e4e4e4";return n.forEach(function(t){t.seat===i&&(o=t.value>=1&&t.value<=4?"#ffcc77":"#ff5b6f")}),"display: "+(t.cabin.noSeats.includes(i)?"none":"inline")+"; fill: "+o+"; stroke: none; stroke-width: 2;"}).on("click",function(t){o.options.onSelect&&"function"==typeof o.options.onSelect&&o.options.onSelect(""+e+t),o.options.selectable&&o.select(""+e+t)}).on("mouseover",function(t){o.options.onMouseOver&&"function"==typeof o.options.onMouseOver&&r.options.onMouseOver(""+e+t),o.options.hoverable&&o.highlight(""+e+t),n.forEach(function(n){n.seat===""+e+t&&o.tool_tip.show(n.tooltip)})}).on("mouseout",function(t){document.querySelectorAll(".element-hover").forEach(function(t){return t.classList.remove("element-hover")}),o.tool_tip.hide()})}),this.deckNameW=this.deckNameW+i.select("."+s).node().getBBox().width,this.currentScalePoint=this.previousScalePoint+this.padding.inner}},{key:"drawSeats",value:function(t){var n=this,e=this;(this.deckNameW=0,this.classConfig.forEach(function(e){var r={};n.initiateScales(e,"large"===e.seatType?n.largeAlphaScaleLtrs:n.smallAlphaScaleLtrs),(r="small"===e.seatType?{topPos:28,yAxis:32}:{topPos:22,yAxis:25}).seatConf=e.seatLetters.split(""),r.cabin=e,n.renderSeats(r,t.data?t.data:[],t.deckName)}),t.data&&t.data.length)&&this.svg.append("g").classed("seat-count",!0).selectAll("text").data(t.data).enter().append("text").attr("x",e.findXPos.bind(e)).attr("dy",e.findYPos.bind(e)).append("textPath").attr("xlink:href",function(t){return"#"+t.seat}).text(function(t){return t.value}).attr("style",function(t){return"font-size: 11px; fill: "+t.foregroundColor}).on("mouseover",function(t){e.options.onMouseOver&&"function"==typeof e.options.onMouseOver&&n.options.onMouseOver(t.seat),e.options.hoverable&&e.highlight(t.seat),e.tool_tip.show(t.tooltip)}).on("mouseout",function(t){document.querySelectorAll(".element-hover").forEach(function(t){return t.classList.remove("element-hover")}),e.tool_tip.hide()});this.deckNameDisplay&&this.deckNameDisplay.attr("style","width:"+(this.deckNameW+this.classConfig.length*this.padding.inner)+"px;")}}]),t}();n.default=o},function(t,n,e){"use strict";var r=function(t){if(t&&t.__esModule)return t;var n={};if(null!=t)for(var e in t)Object.prototype.hasOwnProperty.call(t,e)&&(n[e]=t[e]);return n.default=t,n}(e(0));r.functor=function(t){return"function"==typeof t?t:function(){return t}},r.tip=function(){var t=function(){return"n"},n=function(){return[0,0]},e=function(){return" "},i=l(),o=null,u=null,a=null;function c(t){o=function(t){return"svg"===(t=t.node()).tagName.toLowerCase()?t:t.ownerSVGElement}(t),u=o.createSVGPoint(),document.body.appendChild(i)}c.show=function(){var r=Array.prototype.slice.call(arguments);r[r.length-1]instanceof SVGElement&&(a=r.pop());var i,o=e.apply(this,r),u=n.apply(this,r),l=t.apply(this,r),d=h(),p=s.length,v=document.documentElement.scrollTop||document.body.scrollTop,g=document.documentElement.scrollLeft||document.body.scrollLeft;for(d.html(o).style("position","absolute").style("opacity",1).style("pointer-events","all");p--;)d.classed(s[p],!1);return i=f[l].apply(this),d.classed(l,!0).style("top",i.top+u[0]+v+"px").style("left",i.left+u[1]+g+"px"),c},c.hide=function(){return h().style("opacity",0).style("pointer-events","none"),c},c.attr=function(t,n){if(arguments.length<2&&"string"==typeof t)return h().attr(t);var e=Array.prototype.slice.call(arguments);return r.selection.prototype.attr.apply(h(),e),c},c.style=function(t,n){if(arguments.length<2&&"string"==typeof t)return h().style(t);var e=Array.prototype.slice.call(arguments);if(1===e.length){var i=e[0];Object.keys(i).forEach(function(t){return r.selection.prototype.style.apply(h(),[t,i[t]])})}return c},c.direction=function(n){return arguments.length?(t=null==n?n:r.functor(n),c):t},c.offset=function(t){return arguments.length?(n=null==t?t:r.functor(t),c):n},c.html=function(t){return arguments.length?(e=null==t?t:r.functor(t),c):e},c.destroy=function(){return i&&(h().remove(),i=null),c};var f={n:function(){var t=d();return{top:t.n.y-i.offsetHeight,left:t.n.x-i.offsetWidth/2}},s:function(){var t=d();return{top:t.s.y,left:t.s.x-i.offsetWidth/2}},e:function(){var t=d();return{top:t.e.y-i.offsetHeight/2,left:t.e.x}},w:function(){var t=d();return{top:t.w.y-i.offsetHeight/2,left:t.w.x-i.offsetWidth}},nw:function(){var t=d();return{top:t.nw.y-i.offsetHeight,left:t.nw.x-i.offsetWidth}},ne:function(){var t=d();return{top:t.ne.y-i.offsetHeight,left:t.ne.x}},sw:function(){var t=d();return{top:t.sw.y,left:t.sw.x-i.offsetWidth}},se:function(){var t=d();return{top:t.se.y,left:t.e.x}}},s=Object.keys(f);function l(){var t=r.select(document.createElement("div"));return t.style("position","absolute").style("top",0).style("opacity",0).style("pointer-events","none").style("box-sizing","border-box"),t.node()}function h(){return null===i&&(i=l(),document.body.appendChild(i)),r.select(i)}function d(){for(var t=a||r.event.target;void 0===t.getScreenCTM&&"undefined"===t.parentNode;)t=t.parentNode;var n={},e=t.getScreenCTM(),i=t.getBBox(),o=i.width,c=i.height,f=i.x,s=i.y;return u.x=f,u.y=s,n.nw=u.matrixTransform(e),u.x+=o,n.ne=u.matrixTransform(e),u.y+=c,n.se=u.matrixTransform(e),u.x-=o,n.sw=u.matrixTransform(e),u.y-=c/2,n.w=u.matrixTransform(e),u.x+=o,n.e=u.matrixTransform(e),u.x-=o/2,u.y-=c/2,n.n=u.matrixTransform(e),u.y+=c,n.s=u.matrixTransform(e),n}return c}},function(t,n){}]).default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,